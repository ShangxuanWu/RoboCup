###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     25/Sep/2013  21:07:11 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\中国机器人大赛\robot_project\lib\LPLD\HAL_USB_Device. #
#                    c                                                        #
#    Command line =  D:\中国机器人大赛\robot_project\lib\LPLD\HAL_USB_Device. #
#                    c -D IAR -D LPLD_K60 -lCN D:\中国机器人大赛\robot_projec #
#                    t\project\LPLD_Template\iar\RAM\List\ -lB                #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\RAM\List\ -o D:\中国机器人大赛\robot_project\project\L #
#                    PLD_Template\iar\RAM\Obj\ --no_cse --no_unroll           #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "D:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I D:\中国机器人大赛\robot_project\project\LPLD_T #
#                    emplate\iar\..\app\ -I D:\中国机器人大赛\robot_project\p #
#                    roject\LPLD_Template\iar\..\..\..\lib\common\ -I         #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\cpu\ -I D:\中国机器人大赛\robot_project\p #
#                    roject\LPLD_Template\iar\..\..\..\lib\cpu\headers\ -I    #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\adc16\ -I                         #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\enet\ -I                          #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\lptmr\ -I                         #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\mcg\ -I                           #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\pmc\ -I                           #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\rtc\ -I                           #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\uart\ -I                          #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\wdog\ -I                          #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\platforms\ -I                             #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\LPLD\ -I D:\中国机器人大赛\robot_project\ #
#                    project\LPLD_Template\iar\..\..\..\lib\LPLD\FatFs\ -I    #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\LPLD\USB\ -I                              #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\iar_config_files\ -Ol                     #
#    List file    =  D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\RAM\List\HAL_USB_Device.lst                            #
#    Object file  =  D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\RAM\Obj\HAL_USB_Device.o                               #
#                                                                             #
#                                                                             #
###############################################################################

D:\中国机器人大赛\robot_project\lib\LPLD\HAL_USB_Device.c
      1          /*
      2           * --------------"拉普兰德K60底层库"-----------------
      3           *
      4           * 测试硬件平台:LPLD_K60 Card
      5           * 版权所有:北京拉普兰德电子技术有限公司
      6           * 网络销售:http://laplenden.taobao.com
      7           * 公司门户:http://www.lpld.cn
      8           *
      9           * 文件名: HAL_USB_Device.c
     10           * 用途: 在该文件中定义了USB设备模式下的应用函数
     11           *          此时USB的工作类型为CDC类
     12           *
     13           * 开发者使用协议:
     14           *  本代码面向所有使用者开放源代码，开发者可以随意修改源代码。但本段及以上注释应
     15           *  予以保留，不得更改或删除原版权所有者姓名。二次开发者可以加注二次版权所有者，
     16           *  但应在遵守此协议的基础上，开放源代码、不得出售代码本身。
     17           */
     18          #include "common.h"     /* Common definitions */
     19          #include "USB_CDC.h"    /* USB CDC support */
     20          #include "HAL_USB_Device.h"
     21          
     22          /*
     23           *******需用到USB中断，请在isr.h中粘贴一下代码:*********
     24          
     25          //USB模块中断服务定义
     26          #undef  VECTOR_089
     27          #define VECTOR_089 LPLD_USB_Device_Isr
     28          //以下函数在LPLD_Kinetis底层包，不必修改
     29          extern void LPLD_USB_Device_Isr(void);
     30          
     31           ***********************代码结束*************************
     32          */
     33          //用户自定义中断服务函数数组

   \                                 In section .bss, align 4
     34          USB_ISR_CALLBACK USB_ISR[1];
   \                     USB_ISR:
   \   00000000                      DS8 4
     35          
     36          /*
     37          * LPLD_USB_Init
     38          *   K60 USB模块初始化函数
     39          *   
     40          */
     41          

   \                                 In section .text, align 2, keep-with-next
     42          void LPLD_USB_Init(void)
     43          {  
   \                     LPLD_USB_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
     44            Setup_Pkt=(tUSB_Setup*)BufferPointer[bEP0OUT_ODD];//将gu8EP0_OUT_ODD_Buffer的地址付给Setup_Pkt
   \   00000002   0x....             LDR.N    R0,??DataTable4
   \   00000004   0x....             LDR.N    R1,??DataTable4_1
   \   00000006   0x6809             LDR      R1,[R1, #+0]
   \   00000008   0x6001             STR      R1,[R0, #+0]
     45            gu8USB_State = uPOWER;
   \   0000000A   0x....             LDR.N    R0,??DataTable4_2
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x7001             STRB     R1,[R0, #+0]
     46            /* MPU 配置 */
     47            MPU_CESR=0;                                     // MPU is disable. All accesses from all bus masters are allowed
   \   00000010   0x....             LDR.N    R0,??DataTable4_3  ;; 0x4000d000
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x6001             STR      R1,[R0, #+0]
     48            /* SIM 配置 */
     49            #ifdef USB_CLOCK_CLKIN
     50            SIM_SCGC5 |=SIM_SCGC5_PORTE_MASK;
     51            PORTE_PCR26=(0|PORT_PCR_MUX(7));                // Enabling PTE26 as CLK input    
     52            #endif    
     53            
     54            #ifdef USB_CLOCK_PLL
     55            SIM_SOPT2 |=SIM_SOPT2_PLLFLLSEL_MASK;           //用PLL作为USB的时钟源，此时的PLL的频率为96Mhz
   \   00000016   0x....             LDR.N    R0,??DataTable4_4  ;; 0x40048004
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0xF450 0x3080      ORRS     R0,R0,#0x10000
   \   0000001E   0x....             LDR.N    R1,??DataTable4_4  ;; 0x40048004
   \   00000020   0x6008             STR      R0,[R1, #+0]
     56            #endif
     57            
     58            #ifndef USB_CLOCK_CLKIN    
     59            SIM_SOPT2 |=SIM_SOPT2_USBSRC_MASK;              //选择PLL/FLL作为时钟源
   \   00000022   0x....             LDR.N    R0,??DataTable4_4  ;; 0x40048004
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0xF450 0x2080      ORRS     R0,R0,#0x40000
   \   0000002A   0x....             LDR.N    R1,??DataTable4_4  ;; 0x40048004
   \   0000002C   0x6008             STR      R0,[R1, #+0]
     60            #endif
     61            
     62            SIM_CLKDIV2|=USB_FARCTIONAL_VALUE;              //USB Freq Divider
   \   0000002E   0x....             LDR.N    R0,??DataTable4_5  ;; 0x40048048
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   00000036   0x....             LDR.N    R1,??DataTable4_5  ;; 0x40048048
   \   00000038   0x6008             STR      R0,[R1, #+0]
     63                                                            //设置USB的分频值2,由PLL除以2所得，当前USB的频率为48Mhz
     64            SIM_SCGC4|= SIM_SCGC4_USBOTG_MASK;              //USB Clock Gating 
   \   0000003A   0x....             LDR.N    R0,??DataTable4_6  ;; 0x40048034
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0xF450 0x2080      ORRS     R0,R0,#0x40000
   \   00000042   0x....             LDR.N    R1,??DataTable4_6  ;; 0x40048034
   \   00000044   0x6008             STR      R0,[R1, #+0]
     65                                                            //开启USB模块的时钟源 
     66            /* NVIC模块配置 */
     67            enable_irq(73);                                 //使能NVIC中的USB OTG中断
   \   00000046   0x2049             MOVS     R0,#+73
   \   00000048   0x.... 0x....      BL       enable_irq
     68            USB_ISR[0] = USB_Protocol_Handler;              //将USB协议处理函数添加到中断处理函数数组中
   \   0000004C   0x....             LDR.N    R0,??DataTable4_7
   \   0000004E   0x....             LDR.N    R1,??DataTable4_8
   \   00000050   0x6001             STR      R1,[R0, #+0]
     69            
     70            /* USB模块配置 */
     71            USB0_USBTRC0|=USB_USBTRC0_USBRESET_MASK;          //复位USB模块
   \   00000052   0x....             LDR.N    R0,??DataTable4_9  ;; 0x4007210c
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   0000005A   0x....             LDR.N    R1,??DataTable4_9  ;; 0x4007210c
   \   0000005C   0x7008             STRB     R0,[R1, #+0]
     72            while(USB0_USBTRC0 & USB_USBTRC0_USBRESET_MASK){};//等待USB复位完成
   \                     ??LPLD_USB_Init_0:
   \   0000005E   0x....             LDR.N    R0,??DataTable4_9  ;; 0x4007210c
   \   00000060   0x7800             LDRB     R0,[R0, #+0]
   \   00000062   0x0600             LSLS     R0,R0,#+24
   \   00000064   0xD4FB             BMI.N    ??LPLD_USB_Init_0
     73            USB0_BDTPAGE1=(UINT8)((UINT32)tBDTtable>>8);     //配置当前缓冲描述符表BDT
   \   00000066   0x....             LDR.N    R0,??DataTable4_10
   \   00000068   0x0A00             LSRS     R0,R0,#+8
   \   0000006A   0x....             LDR.N    R1,??DataTable4_11  ;; 0x4007209c
   \   0000006C   0x7008             STRB     R0,[R1, #+0]
     74            USB0_BDTPAGE2=(UINT8)((UINT32)tBDTtable>>16);
   \   0000006E   0x....             LDR.N    R0,??DataTable4_10
   \   00000070   0x0C00             LSRS     R0,R0,#+16
   \   00000072   0x....             LDR.N    R1,??DataTable4_12  ;; 0x400720b0
   \   00000074   0x7008             STRB     R0,[R1, #+0]
     75            USB0_BDTPAGE3=(UINT8)((UINT32)tBDTtable>>24); 
   \   00000076   0x....             LDR.N    R0,??DataTable4_10
   \   00000078   0x0E00             LSRS     R0,R0,#+24
   \   0000007A   0x....             LDR.N    R1,??DataTable4_13  ;; 0x400720b4
   \   0000007C   0x7008             STRB     R0,[R1, #+0]
     76            USB0_ISTAT |= USB_ISTAT_USBRST_MASK;             //清除复位标志
   \   0000007E   0x....             LDR.N    R0,??DataTable4_14  ;; 0x40072080
   \   00000080   0x7800             LDRB     R0,[R0, #+0]
   \   00000082   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000086   0x....             LDR.N    R1,??DataTable4_14  ;; 0x40072080
   \   00000088   0x7008             STRB     R0,[R1, #+0]
     77            USB0_INTEN |= USB_INTEN_USBRSTEN_MASK;           //使能USB复位中断 
   \   0000008A   0x....             LDR.N    R0,??DataTable4_15  ;; 0x40072084
   \   0000008C   0x7800             LDRB     R0,[R0, #+0]
   \   0000008E   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000092   0x....             LDR.N    R1,??DataTable4_15  ;; 0x40072084
   \   00000094   0x7008             STRB     R0,[R1, #+0]
     78            USB0_USBCTRL =0x40;                              //使能弱下拉                                                      
   \   00000096   0x....             LDR.N    R0,??DataTable4_16  ;; 0x40072100
   \   00000098   0x2140             MOVS     R1,#+64
   \   0000009A   0x7001             STRB     R1,[R0, #+0]
     79            USB0_USBTRC0|=0x40;                              //使能异步恢复中断
   \   0000009C   0x....             LDR.N    R0,??DataTable4_9  ;; 0x4007210c
   \   0000009E   0x7800             LDRB     R0,[R0, #+0]
   \   000000A0   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   000000A4   0x....             LDR.N    R1,??DataTable4_9  ;; 0x4007210c
   \   000000A6   0x7008             STRB     R0,[R1, #+0]
     80            USB0_CTL|=0x01;                                  //使能USB模块
   \   000000A8   0x....             LDR.N    R0,??DataTable4_17  ;; 0x40072094
   \   000000AA   0x7800             LDRB     R0,[R0, #+0]
   \   000000AC   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000B0   0x....             LDR.N    R1,??DataTable4_17  ;; 0x40072094
   \   000000B2   0x7008             STRB     R0,[R1, #+0]
     81            USB0_CONTROL |=USB_CONTROL_DPPULLUPNONOTG_MASK;  //在非USB OTG模式下，使能上拉功能
   \   000000B4   0x....             LDR.N    R0,??DataTable4_18  ;; 0x40072108
   \   000000B6   0x7800             LDRB     R0,[R0, #+0]
   \   000000B8   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   000000BC   0x....             LDR.N    R1,??DataTable4_18  ;; 0x40072108
   \   000000BE   0x7008             STRB     R0,[R1, #+0]
     82          }
   \   000000C0   0xBD01             POP      {R0,PC}          ;; return
     83          
     84          /*
     85          *  LPLD_USB_Device_Init
     86          *    USB设备模式初始化函数
     87          *       在该函数中初始化USB稳压模块
     88          *       并停用USB稳压模块的Standby模式
     89          *       初始化USB的CDC模式
     90          */

   \                                 In section .text, align 2, keep-with-next
     91          void LPLD_USB_Device_Init(void)
     92          {
   \                     LPLD_USB_Device_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
     93            SIM_SOPT1 |= SIM_SOPT1_USBREGEN_MASK;  //使能USB稳压模块
   \   00000002   0x....             LDR.N    R0,??DataTable4_19  ;; 0x40047000
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF050 0x4000      ORRS     R0,R0,#0x80000000
   \   0000000A   0x....             LDR.N    R1,??DataTable4_19  ;; 0x40047000
   \   0000000C   0x6008             STR      R0,[R1, #+0]
     94            SIM_SOPT1 &= (~SIM_SOPT1_USBSTBY_MASK);//停止USB稳压模块的standby模式
   \   0000000E   0x....             LDR.N    R0,??DataTable4_19  ;; 0x40047000
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xF030 0x4080      BICS     R0,R0,#0x40000000
   \   00000016   0x....             LDR.N    R1,??DataTable4_19  ;; 0x40047000
   \   00000018   0x6008             STR      R0,[R1, #+0]
     95            LPLD_USB_Init(); //初始化USB模块
   \   0000001A   0x.... 0x....      BL       LPLD_USB_Init
     96          
     97          #if(USB_DEVICE_CLASS == USB_DEVICE_CLASS_CDC)
     98            CDC_Init(); //初始化USB CDC模式
   \   0000001E   0x.... 0x....      BL       CDC_Init
     99          #endif
    100          }
   \   00000022   0xBD01             POP      {R0,PC}          ;; return
    101          
    102          /*
    103          * LPLD_USB_Device_Enumed
    104          *   判断当前CDC设备是否被主机枚举
    105          */

   \                                 In section .text, align 2, keep-with-next
    106          void LPLD_USB_Device_Enumed(void)
    107          {
    108            while(gu8USB_State != uENUMERATED);//等待USB设备被枚举
   \                     LPLD_USB_Device_Enumed:
   \                     ??LPLD_USB_Device_Enumed_0:
   \   00000000   0x....             LDR.N    R0,??DataTable4_2
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x2801             CMP      R0,#+1
   \   00000006   0xD1FB             BNE.N    ??LPLD_USB_Device_Enumed_0
    109          }
   \   00000008   0x4770             BX       LR               ;; return
    110          
    111          /*
    112          *  LPLD_USB_VirtualCom_Rx
    113          *    将USB CDC类模式虚拟成串口模式，该函数是串口接收函数
    114          *    参数
    115          *      |__*rx_buf 指向用户数据存储区，用于储存接收到的数据
    116          *    返回值：接收数据的长度，以字节为单位
    117          */

   \                                 In section .text, align 2, keep-with-next
    118          uint8_t LPLD_USB_VirtualCom_Rx(uint8_t *rx_buf)
    119          {
   \                     LPLD_USB_VirtualCom_Rx:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    120            uint8_t len;
    121            uint8_t temp=0;
   \   00000004   0x2000             MOVS     R0,#+0
    122            uint8_t *pu8EPBuffer;
    123            
    124            if(FLAG_CHK(EP_OUT,gu8USB_Flags))// 如果有数据到来
   \   00000006   0x....             LDR.N    R1,??DataTable4_20
   \   00000008   0x7809             LDRB     R1,[R1, #+0]
   \   0000000A   0x0709             LSLS     R1,R1,#+28
   \   0000000C   0xD51D             BPL.N    ??LPLD_USB_VirtualCom_Rx_0
    125            {
    126              len = USB_EP_OUT_SizeCheck(EP_OUT);   
   \   0000000E   0x2003             MOVS     R0,#+3
   \   00000010   0x.... 0x....      BL       USB_EP_OUT_SizeCheck
   \   00000014   0x0001             MOVS     R1,R0
    127              temp= len;
   \   00000016   0x0008             MOVS     R0,R1
    128              pu8EPBuffer = gu8EP3_OUT_ODD_Buffer;
   \   00000018   0x....             LDR.N    R2,??DataTable4_21
   \   0000001A   0xE003             B.N      ??LPLD_USB_VirtualCom_Rx_1
    129              
    130              while(len--)
    131                *rx_buf++=*pu8EPBuffer++;
   \                     ??LPLD_USB_VirtualCom_Rx_2:
   \   0000001C   0x7813             LDRB     R3,[R2, #+0]
   \   0000001E   0x7023             STRB     R3,[R4, #+0]
   \   00000020   0x1C52             ADDS     R2,R2,#+1
   \   00000022   0x1C64             ADDS     R4,R4,#+1
   \                     ??LPLD_USB_VirtualCom_Rx_1:
   \   00000024   0x000B             MOVS     R3,R1
   \   00000026   0x1E59             SUBS     R1,R3,#+1
   \   00000028   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000002A   0x2B00             CMP      R3,#+0
   \   0000002C   0xD1F6             BNE.N    ??LPLD_USB_VirtualCom_Rx_2
    132                
    133              usbEP_Reset(EP_OUT);
   \   0000002E   0x....             LDR.N    R1,??DataTable4_10
   \   00000030   0x2220             MOVS     R2,#+32
   \   00000032   0xF8A1 0x2062      STRH     R2,[R1, #+98]
    134              usbSIE_CONTROL(EP_OUT);
   \   00000036   0x....             LDR.N    R1,??DataTable4_10
   \   00000038   0x2280             MOVS     R2,#+128
   \   0000003A   0xF881 0x2060      STRB     R2,[R1, #+96]
    135              FLAG_CLR(EP_OUT,gu8USB_Flags);
   \   0000003E   0x....             LDR.N    R1,??DataTable4_20
   \   00000040   0x7809             LDRB     R1,[R1, #+0]
   \   00000042   0xF011 0x01F7      ANDS     R1,R1,#0xF7
   \   00000046   0x....             LDR.N    R2,??DataTable4_20
   \   00000048   0x7011             STRB     R1,[R2, #+0]
    136            }  
    137            return temp;
   \                     ??LPLD_USB_VirtualCom_Rx_0:
   \   0000004A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004C   0xBD10             POP      {R4,PC}          ;; return
    138          }
    139          
    140          /*
    141          *  LPLD_USB_VirtualCom_Tx
    142          *    将USB CDC类模式虚拟成串口模式，该函数是串口发送函数
    143          *    参数
    144          *      |__*tx_buf 指向用户数据存储区，用于储存要发送的数据
    145          *      |__len 要发送的数据长度
    146          */

   \                                 In section .text, align 2, keep-with-next
    147          void LPLD_USB_VirtualCom_Tx(uint8_t *tx_buf,uint8_t len)
    148          {
   \                     LPLD_USB_VirtualCom_Tx:
   \   00000000   0xB580             PUSH     {R7,LR}
    149             EP_IN_Transfer(EP2,tx_buf,len);
   \   00000002   0x000A             MOVS     R2,R1
   \   00000004   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000006   0x0001             MOVS     R1,R0
   \   00000008   0x2002             MOVS     R0,#+2
   \   0000000A   0x.... 0x....      BL       EP_IN_Transfer
    150          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return
    151          
    152          
    153          /*
    154          *  LPLD_USB_SetRevIsr
    155          *    添加USB接收数据中断服务函数
    156          *  无
    157          *  无
    158          */

   \                                 In section .text, align 2, keep-with-next
    159          void LPLD_USB_SetRevIsr(USB_REV_ISR_CALLBACK isr)
    160          {
   \                     LPLD_USB_SetRevIsr:
   \   00000000   0xB580             PUSH     {R7,LR}
    161            USB_Rev_SetIsr(isr);
   \   00000002   0x.... 0x....      BL       USB_Rev_SetIsr
    162          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    163          
    164          
    165          /*
    166          *  LPLD_USB_Device_Isr
    167          *    USB中断处理函数
    168          */

   \                                 In section .text, align 2, keep-with-next
    169          void LPLD_USB_Device_Isr(void)
    170          {
   \                     LPLD_USB_Device_Isr:
   \   00000000   0xB580             PUSH     {R7,LR}
    171            #define USB_VECTORNUM   (*(volatile uint8*)(0xE000ED04))
    172            uint8 USB_Isr_Num = USB_VECTORNUM - 89;
   \   00000002   0x....             LDR.N    R0,??DataTable4_22  ;; 0xe000ed04
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x3859             SUBS     R0,R0,#+89
    173            //调用用户自定义中断服务
    174            USB_ISR[USB_Isr_Num]();  
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x....             LDR.N    R1,??DataTable4_7
   \   0000000C   0xF851 0x0020      LDR      R0,[R1, R0, LSL #+2]
   \   00000010   0x4780             BLX      R0
    175          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     Setup_Pkt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     BufferPointer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     gu8USB_State

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x4000D000         DC32     0x4000d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x40048004         DC32     0x40048004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x40048048         DC32     0x40048048

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x40048034         DC32     0x40048034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     USB_ISR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     USB_Protocol_Handler

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x4007210C         DC32     0x4007210c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     tBDTtable

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x4007209C         DC32     0x4007209c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x400720B0         DC32     0x400720b0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \   00000000   0x400720B4         DC32     0x400720b4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_14:
   \   00000000   0x40072080         DC32     0x40072080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_15:
   \   00000000   0x40072084         DC32     0x40072084

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_16:
   \   00000000   0x40072100         DC32     0x40072100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_17:
   \   00000000   0x40072094         DC32     0x40072094

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_18:
   \   00000000   0x40072108         DC32     0x40072108

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_19:
   \   00000000   0x40047000         DC32     0x40047000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_20:
   \   00000000   0x........         DC32     gu8USB_Flags

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_21:
   \   00000000   0x........         DC32     gu8EP3_OUT_ODD_Buffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_22:
   \   00000000   0xE000ED04         DC32     0xe000ed04
    176          
    177          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  LPLD_USB_Device_Enumed
        8  LPLD_USB_Device_Init
             8 -> CDC_Init
             8 -> LPLD_USB_Init
        8  LPLD_USB_Device_Isr
             8 -- Indirect call
        8  LPLD_USB_Init
             8 -> enable_irq
        8  LPLD_USB_SetRevIsr
             8 -> USB_Rev_SetIsr
        8  LPLD_USB_VirtualCom_Rx
             8 -> USB_EP_OUT_SizeCheck
        8  LPLD_USB_VirtualCom_Tx
             8 -> EP_IN_Transfer


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_16
       4  ??DataTable4_17
       4  ??DataTable4_18
       4  ??DataTable4_19
       4  ??DataTable4_2
       4  ??DataTable4_20
       4  ??DataTable4_21
       4  ??DataTable4_22
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
      10  LPLD_USB_Device_Enumed
      36  LPLD_USB_Device_Init
      20  LPLD_USB_Device_Isr
     194  LPLD_USB_Init
       8  LPLD_USB_SetRevIsr
      78  LPLD_USB_VirtualCom_Rx
      16  LPLD_USB_VirtualCom_Tx
       4  USB_ISR

 
   4 bytes in section .bss
 454 bytes in section .text
 
 454 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
