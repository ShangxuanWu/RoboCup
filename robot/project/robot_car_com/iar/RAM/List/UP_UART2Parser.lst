###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     25/Sep/2013  22:39:30 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\中国机器人大赛\robot_project\project\LPLD_Template\ap #
#                    p\UP_UART2Parser.c                                       #
#    Command line =  D:\中国机器人大赛\robot_project\project\LPLD_Template\ap #
#                    p\UP_UART2Parser.c -D IAR -D LPLD_K60 -lCN               #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\RAM\List\ -lB D:\中国机器人大赛\robot_project\project\ #
#                    LPLD_Template\iar\RAM\List\ -o                           #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\RAM\Obj\ --no_cse --no_unroll --no_inline              #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "D:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I D:\中国机器人大赛\robot_project\project\LPLD_T #
#                    emplate\iar\..\app\ -I D:\中国机器人大赛\robot_project\p #
#                    roject\LPLD_Template\iar\..\..\..\lib\common\ -I         #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\cpu\ -I D:\中国机器人大赛\robot_project\p #
#                    roject\LPLD_Template\iar\..\..\..\lib\cpu\headers\ -I    #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\adc16\ -I                         #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\enet\ -I                          #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\lptmr\ -I                         #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\mcg\ -I                           #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\pmc\ -I                           #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\rtc\ -I                           #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\uart\ -I                          #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\wdog\ -I                          #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\platforms\ -I                             #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\LPLD\ -I D:\中国机器人大赛\robot_project\ #
#                    project\LPLD_Template\iar\..\..\..\lib\LPLD\FatFs\ -I    #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\LPLD\USB\ -I                              #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\iar_config_files\ -Ol                     #
#    List file    =  D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\RAM\List\UP_UART2Parser.lst                            #
#    Object file  =  D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\RAM\Obj\UP_UART2Parser.o                               #
#                                                                             #
#                                                                             #
###############################################################################

D:\中国机器人大赛\robot_project\project\LPLD_Template\app\UP_UART2Parser.c
      1          #include "UP_UART2Parser.h"
      2          #include "CycleBuf.h"
      3          

   \                                 In section .bss, align 4
      4          static int i;
   \                     i:
   \   00000000                      DS8 4
      5          

   \                                 In section .data, align 2
      6          static u16 MyAddr = 0x0100;
   \                     MyAddr:
   \   00000000   0x0100             DC16 256
      7          
      8          //数据缓冲
      9          #define RAWBUF_LEN	128

   \                                 In section .bss, align 4
     10          static u8 RawBuf[RAWBUF_LEN];
   \                     RawBuf:
   \   00000000                      DS8 128

   \                                 In section .data, align 4
     11          static u8* pHead = RawBuf;
   \                     pHead:
   \   00000000   0x........         DC32 RawBuf

   \                                 In section .data, align 4
     12          static u8* pTail = &RawBuf[RAWBUF_LEN-1];
   \                     pTail:
   \   00000000   0x........         DC32 RawBuf + 7FH

   \                                 In section .data, align 4
     13          static u8* pPut = RawBuf;
   \                     pPut:
   \   00000000   0x........         DC32 RawBuf

   \                                 In section .data, align 4
     14          static u8* pGet = RawBuf;
   \                     pGet:
   \   00000000   0x........         DC32 RawBuf

   \                                 In section .bss, align 4
     15          static u8 ParseBuf[64];
   \                     ParseBuf:
   \   00000000                      DS8 64
     16          
     17          //返送数据使用的缓冲

   \                                 In section .bss, align 4
     18          static u8 SendBuf[RAWBUF_LEN];
   \                     SendBuf:
   \   00000000                      DS8 128
     19          
     20          //启停

   \                                 In section .bss, align 1
     21          static u8 RobotAction = 0;
   \                     RobotAction:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     22          static u8 DestPos = 0;
   \                     DestPos:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     23          static u8 FieldSensors[10] = {0,0,0,0,0,0,0,0,0,0};//{1,2,3,4,5,6,7,8,9,10};
   \                     FieldSensors:
   \   00000000                      DS8 12
     24          
     25           /****************************************************************************************************
     26           获取数值
     27           *****************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     28          u8 GetCmdAction(void)
     29          {
     30          	return RobotAction;
   \                     GetCmdAction:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable17
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x4770             BX       LR               ;; return
     31          }
     32          

   \                                 In section .text, align 2, keep-with-next
     33          u8 GetFieldSensors(u8* inArr)
     34          {
     35          	for(i=0;i<10;i++)
   \                     GetFieldSensors:
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x600A             STR      R2,[R1, #+0]
   \   00000008   0xE010             B.N      ??GetFieldSensors_0
     36          	{
     37          		inArr[i] = FieldSensors[i];
   \                     ??GetFieldSensors_1:
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   0000000E   0x6809             LDR      R1,[R1, #+0]
   \   00000010   0x.... 0x....      LDR.W    R2,??DataTable17_1
   \   00000014   0x6812             LDR      R2,[R2, #+0]
   \   00000016   0x.... 0x....      LDR.W    R3,??DataTable17_2
   \   0000001A   0x5CD2             LDRB     R2,[R2, R3]
   \   0000001C   0x540A             STRB     R2,[R1, R0]
     38          	}
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   00000022   0x6809             LDR      R1,[R1, #+0]
   \   00000024   0x1C49             ADDS     R1,R1,#+1
   \   00000026   0x.... 0x....      LDR.W    R2,??DataTable17_1
   \   0000002A   0x6011             STR      R1,[R2, #+0]
   \                     ??GetFieldSensors_0:
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   00000030   0x6809             LDR      R1,[R1, #+0]
   \   00000032   0x290A             CMP      R1,#+10
   \   00000034   0xDBE9             BLT.N    ??GetFieldSensors_1
     39          }
   \   00000036   0x4770             BX       LR               ;; return
     40          

   \                                 In section .text, align 2, keep-with-next
     41          u8 GetDestPos(void)
     42          {
     43          	return DestPos;
   \                     GetDestPos:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable17_3
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x4770             BX       LR               ;; return
     44          }
     45          
     46           /****************************************************************************************************
     47           配置信息
     48           *****************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     49          void CFG_MyAddr(u16 inMyAddr)
     50          {
     51          	MyAddr = inMyAddr;
   \                     CFG_MyAddr:
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable17_4
   \   00000004   0x8008             STRH     R0,[R1, #+0]
     52          }
   \   00000006   0x4770             BX       LR               ;; return
     53          
     54           /****************************************************************************************************
     55           接收的数据解析
     56           *****************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     57          void Uart2_RecvBuf(u8 inData)
     58          {
     59          	//printf("Uart2_RecvBuf\n");
     60          	*pPut = inData;
   \                     Uart2_RecvBuf:
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable17_5
   \   00000004   0x6809             LDR      R1,[R1, #+0]
   \   00000006   0x7008             STRB     R0,[R1, #+0]
     61          	pPut ++;
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable17_5
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x1C40             ADDS     R0,R0,#+1
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable17_5
   \   00000014   0x6008             STR      R0,[R1, #+0]
     62          	if(pPut == pTail)  //到达缓冲区尾部了，回到头部，首尾衔接
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable17_5
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable17_6
   \   00000020   0x6809             LDR      R1,[R1, #+0]
   \   00000022   0x4288             CMP      R0,R1
   \   00000024   0xD105             BNE.N    ??Uart2_RecvBuf_0
     63          	{
     64          		pPut = pHead;
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable17_5
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable17_7
   \   0000002E   0x6809             LDR      R1,[R1, #+0]
   \   00000030   0x6001             STR      R1,[R0, #+0]
     65          	}
     66          
     67          	FieldSensors[1] = 19;
   \                     ??Uart2_RecvBuf_0:
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable17_2
   \   00000036   0x2113             MOVS     R1,#+19
   \   00000038   0x7041             STRB     R1,[R0, #+1]
     68          }
   \   0000003A   0x4770             BX       LR               ;; return
     69          

   \                                 In section .text, align 2, keep-with-next
     70          void UART2_ParseRawBuf(void)
     71          {
   \                     UART2_ParseRawBuf:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xE01A             B.N      ??UART2_ParseRawBuf_0
     72          	while(pGet != pPut)
     73          	{
     74          		 UART2_ParseData(*pGet);
   \                     ??UART2_ParseRawBuf_1:
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable17_8
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0x.... 0x....      BL       UART2_ParseData
     75          		 pGet ++;
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable17_8
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0x1C40             ADDS     R0,R0,#+1
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable17_8
   \   0000001C   0x6008             STR      R0,[R1, #+0]
     76          		 if(pGet == pTail)	   //到达缓冲区尾部了，回到头部，首尾衔接
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable17_8
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable17_6
   \   00000028   0x6809             LDR      R1,[R1, #+0]
   \   0000002A   0x4288             CMP      R0,R1
   \   0000002C   0xD105             BNE.N    ??UART2_ParseRawBuf_0
     77          		 {
     78          		 	pGet = pHead;
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable17_8
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable17_7
   \   00000036   0x6809             LDR      R1,[R1, #+0]
   \   00000038   0x6001             STR      R1,[R0, #+0]
     79          		 }
     80          	}
   \                     ??UART2_ParseRawBuf_0:
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable17_8
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable17_5
   \   00000044   0x6809             LDR      R1,[R1, #+0]
   \   00000046   0x4288             CMP      R0,R1
   \   00000048   0xD1DC             BNE.N    ??UART2_ParseRawBuf_1
     81          }
   \   0000004A   0xBD01             POP      {R0,PC}          ;; return
     82          
     83          //UART2解析协议帧

   \                                 In section .text, align 2, keep-with-next
     84          void Uart2_ParseFrame(unsigned char* pData)
     85          {
   \                     Uart2_ParseFrame:
   \   00000000   0xB410             PUSH     {R4}
     86          unsigned int j=0,i;
   \   00000002   0x2100             MOVS     R1,#+0
     87          unsigned int k=0;
   \   00000004   0x2300             MOVS     R3,#+0
     88          	switch(pData[7])
   \   00000006   0x79C2             LDRB     R2,[R0, #+7]
   \   00000008   0x2A00             CMP      R2,#+0
   \   0000000A   0xD004             BEQ.N    ??Uart2_ParseFrame_0
   \   0000000C   0x2A01             CMP      R2,#+1
   \   0000000E   0xD01F             BEQ.N    ??Uart2_ParseFrame_1
   \   00000010   0x2AFF             CMP      R2,#+255
   \   00000012   0xD022             BEQ.N    ??Uart2_ParseFrame_2
   \   00000014   0xE025             B.N      ??Uart2_ParseFrame_3
     89          	{
     90          	case 0x00:	//场地传感器数据
     91                      j=0;
   \                     ??Uart2_ParseFrame_0:
   \   00000016   0x2100             MOVS     R1,#+0
     92              	    k = pData[2]-9;
   \   00000018   0x7882             LDRB     R2,[R0, #+2]
   \   0000001A   0xF1B2 0x0309      SUBS     R3,R2,#+9
     93          	    for (i=0 ; i<8+k ; i++)
   \   0000001E   0x2200             MOVS     R2,#+0
   \   00000020   0xE002             B.N      ??Uart2_ParseFrame_4
     94          	    {   j+=pData[i];
   \                     ??Uart2_ParseFrame_5:
   \   00000022   0x5C14             LDRB     R4,[R2, R0]
   \   00000024   0x1909             ADDS     R1,R1,R4
     95          	    }
   \   00000026   0x1C52             ADDS     R2,R2,#+1
   \                     ??Uart2_ParseFrame_4:
   \   00000028   0xF113 0x0408      ADDS     R4,R3,#+8
   \   0000002C   0x42A2             CMP      R2,R4
   \   0000002E   0xD3F8             BCC.N    ??Uart2_ParseFrame_5
     96          	    j=j& 0x00FF;
   \   00000030   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
     97          		//	printf("%x",j);
     98          	    if (pData[8+k]==j)
   \   00000032   0x181A             ADDS     R2,R3,R0
   \   00000034   0x7A12             LDRB     R2,[R2, #+8]
   \   00000036   0x428A             CMP      R2,R1
   \   00000038   0xD109             BNE.N    ??Uart2_ParseFrame_6
     99          	    {                               //解包正确
    100          		  for(i=0;i<10;i++)
   \   0000003A   0x2200             MOVS     R2,#+0
   \   0000003C   0xE005             B.N      ??Uart2_ParseFrame_7
    101          		  {
    102          			FieldSensors[i] = pData[8+i];
   \                     ??Uart2_ParseFrame_8:
   \   0000003E   0x1811             ADDS     R1,R2,R0
   \   00000040   0x7A09             LDRB     R1,[R1, #+8]
   \   00000042   0x.... 0x....      LDR.W    R3,??DataTable17_2
   \   00000046   0x54D1             STRB     R1,[R2, R3]
    103          		  }
   \   00000048   0x1C52             ADDS     R2,R2,#+1
   \                     ??Uart2_ParseFrame_7:
   \   0000004A   0x2A0A             CMP      R2,#+10
   \   0000004C   0xD3F7             BCC.N    ??Uart2_ParseFrame_8
    104          		//	return(1);
    105          	    }
    106          
    107          
    108          		break;
   \                     ??Uart2_ParseFrame_6:
   \   0000004E   0xE008             B.N      ??Uart2_ParseFrame_3
    109          
    110          	case 0x01:	//目标位置（调试时用）
    111          		DestPos = pData[8];
   \                     ??Uart2_ParseFrame_1:
   \   00000050   0x7A00             LDRB     R0,[R0, #+8]
   \   00000052   0x.... 0x....      LDR.W    R1,??DataTable17_3
   \   00000056   0x7008             STRB     R0,[R1, #+0]
    112          		break;
   \   00000058   0xE003             B.N      ??Uart2_ParseFrame_3
    113          
    114          	case 0xFF:	//启停控制
    115          		RobotAction = pData[8];
   \                     ??Uart2_ParseFrame_2:
   \   0000005A   0x7A00             LDRB     R0,[R0, #+8]
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable17
   \   00000060   0x7008             STRB     R0,[R1, #+0]
    116          		break;
    117          	}
    118          }
   \                     ??Uart2_ParseFrame_3:
   \   00000062   0xBC10             POP      {R4}
   \   00000064   0x4770             BX       LR               ;; return
    119          
    120          //UART2解析数据

   \                                 In section .text, align 2, keep-with-next
    121          void UART2_ParseData(unsigned char data)
    122          {
   \                     UART2_ParseData:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    123          	static int RecvIndex = 0;					//数据接收索引
    124          	static unsigned char lastRecv =0;			//接收的上一个字符
    125          	static unsigned char FrameStart = 0;					//帧解析开始
    126          	static int FrameLength = 3;					//帧长度
    127          	
    128          	if ( FrameStart == 0 && lastRecv == 0x55 && data == 0xAA)		//接收的数据
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable17_9
   \   00000008   0x7800             LDRB     R0,[R0, #+0]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD11D             BNE.N    ??UART2_ParseData_0
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable17_10
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x2855             CMP      R0,#+85
   \   00000016   0xD118             BNE.N    ??UART2_ParseData_0
   \   00000018   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001A   0x2CAA             CMP      R4,#+170
   \   0000001C   0xD115             BNE.N    ??UART2_ParseData_0
    129          	{
    130          		FrameStart = 1;					//表示接收到了55 aa 开始标记
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable17_9
   \   00000022   0x2101             MOVS     R1,#+1
   \   00000024   0x7001             STRB     R1,[R0, #+0]
    131          		ParseBuf[0] = lastRecv;		//将刚才接收到的数据放到缓冲数组里
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable17_11
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable17_10
   \   0000002E   0x7809             LDRB     R1,[R1, #+0]
   \   00000030   0x7001             STRB     R1,[R0, #+0]
    132          		ParseBuf[1] = data;
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable17_11
   \   00000036   0x7044             STRB     R4,[R0, #+1]
    133          		RecvIndex = 2;					//已经缓冲了两个字节的数据
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable17_12
   \   0000003C   0x2102             MOVS     R1,#+2
   \   0000003E   0x6001             STR      R1,[R0, #+0]
    134          		lastRecv=0x00;
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable17_10
   \   00000044   0x2100             MOVS     R1,#+0
   \   00000046   0x7001             STRB     R1,[R0, #+0]
    135          		return;
   \   00000048   0xE049             B.N      ??UART2_ParseData_1
    136          	}
    137          	
    138          	if (FrameStart == 1)
   \                     ??UART2_ParseData_0:
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable17_9
   \   0000004E   0x7800             LDRB     R0,[R0, #+0]
   \   00000050   0x2801             CMP      R0,#+1
   \   00000052   0xD141             BNE.N    ??UART2_ParseData_2
    139          	{
    140          		if (RecvIndex == 2)
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable17_12
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0x2802             CMP      R0,#+2
   \   0000005C   0xD111             BNE.N    ??UART2_ParseData_3
    141          		{
    142          			FrameLength = data;
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable17_13
   \   00000062   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000064   0x6004             STR      R4,[R0, #+0]
    143          
    144          			if (FrameLength>=RAWBUF_LEN) 
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable17_13
   \   0000006A   0x6800             LDR      R0,[R0, #+0]
   \   0000006C   0x2880             CMP      R0,#+128
   \   0000006E   0xDB08             BLT.N    ??UART2_ParseData_3
    145          			{
    146          				FrameStart = 0;
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable17_9
   \   00000074   0x2100             MOVS     R1,#+0
   \   00000076   0x7001             STRB     R1,[R0, #+0]
    147          				RecvIndex = 0;
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable17_12
   \   0000007C   0x2100             MOVS     R1,#+0
   \   0000007E   0x6001             STR      R1,[R0, #+0]
    148          				return;
   \   00000080   0xE02D             B.N      ??UART2_ParseData_1
    149          			}
    150          		}
    151          		
    152          		//将接收的数据拷贝到缓冲数组里
    153          		ParseBuf[RecvIndex]=data;
   \                     ??UART2_ParseData_3:
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable17_12
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable17_11
   \   0000008C   0x5444             STRB     R4,[R0, R1]
    154          		RecvIndex++;
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable17_12
   \   00000092   0x6800             LDR      R0,[R0, #+0]
   \   00000094   0x1C40             ADDS     R0,R0,#+1
   \   00000096   0x.... 0x....      LDR.W    R1,??DataTable17_12
   \   0000009A   0x6008             STR      R0,[R1, #+0]
    155          		
    156          		//通过接收数据长度来判断是否满一帧
    157          		if (RecvIndex == FrameLength)
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable17_12
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0x.... 0x....      LDR.W    R1,??DataTable17_13
   \   000000A6   0x6809             LDR      R1,[R1, #+0]
   \   000000A8   0x4288             CMP      R0,R1
   \   000000AA   0xD107             BNE.N    ??UART2_ParseData_4
    158          		{ 
    159          			//数据满一帧，解析
    160          			Uart2_ParseFrame(ParseBuf);
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable17_11
   \   000000B0   0x.... 0x....      BL       Uart2_ParseFrame
    161          			FrameStart = 0;
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable17_9
   \   000000B8   0x2100             MOVS     R1,#+0
   \   000000BA   0x7001             STRB     R1,[R0, #+0]
    162          		}
    163          		
    164          		//当缓冲数据溢出时（接收数据里有错误会导致这种后果）
    165          		if (RecvIndex>=RAWBUF_LEN) 
   \                     ??UART2_ParseData_4:
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable17_12
   \   000000C0   0x6800             LDR      R0,[R0, #+0]
   \   000000C2   0x2880             CMP      R0,#+128
   \   000000C4   0xDB08             BLT.N    ??UART2_ParseData_2
    166          		{
    167          			FrameStart = 0;
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable17_9
   \   000000CA   0x2100             MOVS     R1,#+0
   \   000000CC   0x7001             STRB     R1,[R0, #+0]
    168          			RecvIndex = 0;
   \   000000CE   0x.... 0x....      LDR.W    R0,??DataTable17_12
   \   000000D2   0x2100             MOVS     R1,#+0
   \   000000D4   0x6001             STR      R1,[R0, #+0]
    169          			return;
   \   000000D6   0xE002             B.N      ??UART2_ParseData_1
    170          		}
    171          	}
    172          //	else
    173          		lastRecv=data;
   \                     ??UART2_ParseData_2:
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable17_10
   \   000000DC   0x7004             STRB     R4,[R0, #+0]
    174          }
   \                     ??UART2_ParseData_1:
   \   000000DE   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .bss, align 4
   \                     ??RecvIndex:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
   \                     ??lastRecv:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??FrameStart:
   \   00000000                      DS8 1

   \                                 In section .data, align 4
   \                     ??FrameLength:
   \   00000000   0x00000003         DC32 3
    175          

   \                                 In section .text, align 2, keep-with-next
    176          void U16ToU8(u16 inSrc,u8* inTar)
    177          {
    178          	*inTar = (u8)0xff & (inSrc>>8);
   \                     U16ToU8:
   \   00000000   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000002   0x0A02             LSRS     R2,R0,#+8
   \   00000004   0x700A             STRB     R2,[R1, #+0]
    179          	*(inTar+1) = (u8)0xff & inSrc;
   \   00000006   0x7048             STRB     R0,[R1, #+1]
    180          }
   \   00000008   0x4770             BX       LR               ;; return
    181          
    182           /****************************************************************************************************
    183           发送数值
    184           *****************************************************************************************************/
    185          //将AD值返送回上位机

   \                                 In section .text, align 2, keep-with-next
    186          void UART2_SendADs(u16 inDestAddr,int inNum,u16* inADs)
    187          {
   \                     UART2_SendADs:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x000C             MOVS     R4,R1
   \   00000004   0x0015             MOVS     R5,R2
    188          	SendBuf[0] = 0x55;	
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   0000000A   0x2255             MOVS     R2,#+85
   \   0000000C   0x700A             STRB     R2,[R1, #+0]
    189          	SendBuf[1] = 0xaa;
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   00000012   0x22AA             MOVS     R2,#+170
   \   00000014   0x704A             STRB     R2,[R1, #+1]
    190          	SendBuf[2] = 0x29; 		//包长
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   0000001A   0x2229             MOVS     R2,#+41
   \   0000001C   0x708A             STRB     R2,[R1, #+2]
    191          
    192          	for(i=3;i<35;i++)
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   00000022   0x2203             MOVS     R2,#+3
   \   00000024   0x600A             STR      R2,[R1, #+0]
   \   00000026   0xE00D             B.N      ??UART2_SendADs_0
    193          	{
    194          		SendBuf[i] = 0;
   \                     ??UART2_SendADs_1:
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   0000002C   0x6809             LDR      R1,[R1, #+0]
   \   0000002E   0x.... 0x....      LDR.W    R2,??DataTable17_14
   \   00000032   0x2300             MOVS     R3,#+0
   \   00000034   0x548B             STRB     R3,[R1, R2]
    195          	}
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   0000003A   0x6809             LDR      R1,[R1, #+0]
   \   0000003C   0x1C49             ADDS     R1,R1,#+1
   \   0000003E   0x.... 0x....      LDR.W    R2,??DataTable17_1
   \   00000042   0x6011             STR      R1,[R2, #+0]
   \                     ??UART2_SendADs_0:
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   00000048   0x6809             LDR      R1,[R1, #+0]
   \   0000004A   0x2923             CMP      R1,#+35
   \   0000004C   0xDBEC             BLT.N    ??UART2_SendADs_1
    196          
    197          	//目标地址
    198          	U16ToU8(inDestAddr,&SendBuf[3]);
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable17_15
   \   00000052   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000054   0x.... 0x....      BL       U16ToU8
    199          
    200          	//自己的地址
    201          	U16ToU8(MyAddr,&SendBuf[5]);
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable17_16
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable17_4
   \   00000060   0x8800             LDRH     R0,[R0, #+0]
   \   00000062   0x.... 0x....      BL       U16ToU8
    202          	
    203          	SendBuf[7] = 0x02;		//AD
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable17_14
   \   0000006A   0x2102             MOVS     R1,#+2
   \   0000006C   0x71C1             STRB     R1,[R0, #+7]
    204          
    205           	for(i=0;i<inNum;i++)
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   00000072   0x2100             MOVS     R1,#+0
   \   00000074   0x6001             STR      R1,[R0, #+0]
   \   00000076   0xE016             B.N      ??UART2_SendADs_2
    206          	{
    207          		U16ToU8(inADs[i],&SendBuf[8+i*2]);
   \                     ??UART2_SendADs_3:
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   00000082   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000086   0xF110 0x0108      ADDS     R1,R0,#+8
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0xF835 0x0010      LDRH     R0,[R5, R0, LSL #+1]
   \   00000094   0x.... 0x....      BL       U16ToU8
    208          	}
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0x1C40             ADDS     R0,R0,#+1
   \   000000A0   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   000000A4   0x6008             STR      R0,[R1, #+0]
   \                     ??UART2_SendADs_2:
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   000000AA   0x6800             LDR      R0,[R0, #+0]
   \   000000AC   0x42A0             CMP      R0,R4
   \   000000AE   0xDBE3             BLT.N    ??UART2_SendADs_3
    209          
    210          	//校验和
    211          	SendBuf[SendBuf[2]-1] = 0;
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable17_14
   \   000000B4   0x7880             LDRB     R0,[R0, #+2]
   \   000000B6   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   000000BA   0x1840             ADDS     R0,R0,R1
   \   000000BC   0x2100             MOVS     R1,#+0
   \   000000BE   0xF800 0x1C01      STRB     R1,[R0, #-1]
    212          	for(i=0;i<SendBuf[2]-1;i++)
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   000000C6   0x2100             MOVS     R1,#+0
   \   000000C8   0x6001             STR      R1,[R0, #+0]
   \   000000CA   0xE01D             B.N      ??UART2_SendADs_4
    213          	{
    214          		SendBuf[SendBuf[2]-1] += SendBuf[i];	
   \                     ??UART2_SendADs_5:
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable17_14
   \   000000D0   0x7880             LDRB     R0,[R0, #+2]
   \   000000D2   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   000000D6   0x1840             ADDS     R0,R0,R1
   \   000000D8   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   000000DC   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   000000E0   0x6809             LDR      R1,[R1, #+0]
   \   000000E2   0x.... 0x....      LDR.W    R2,??DataTable17_14
   \   000000E6   0x5C89             LDRB     R1,[R1, R2]
   \   000000E8   0x1808             ADDS     R0,R1,R0
   \   000000EA   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   000000EE   0x7889             LDRB     R1,[R1, #+2]
   \   000000F0   0x.... 0x....      LDR.W    R2,??DataTable17_14
   \   000000F4   0x1889             ADDS     R1,R1,R2
   \   000000F6   0xF801 0x0C01      STRB     R0,[R1, #-1]
    215          	}
   \   000000FA   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   000000FE   0x6800             LDR      R0,[R0, #+0]
   \   00000100   0x1C40             ADDS     R0,R0,#+1
   \   00000102   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   00000106   0x6008             STR      R0,[R1, #+0]
   \                     ??UART2_SendADs_4:
   \   00000108   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   0000010C   0x6800             LDR      R0,[R0, #+0]
   \   0000010E   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   00000112   0x7889             LDRB     R1,[R1, #+2]
   \   00000114   0x1E49             SUBS     R1,R1,#+1
   \   00000116   0x4288             CMP      R0,R1
   \   00000118   0xDBD8             BLT.N    ??UART2_SendADs_5
    216          
    217          	//发送
    218          	for(i=0;i<SendBuf[2];i++)
   \   0000011A   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   0000011E   0x2100             MOVS     R1,#+0
   \   00000120   0x6001             STR      R1,[R0, #+0]
   \   00000122   0xE00E             B.N      ??UART2_SendADs_6
    219          	{
    220          		UP_UART2_Putc(SendBuf[i]);
   \                     ??UART2_SendADs_7:
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   00000128   0x6800             LDR      R0,[R0, #+0]
   \   0000012A   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   0000012E   0x5C40             LDRB     R0,[R0, R1]
   \   00000130   0x.... 0x....      BL       UP_UART2_Putc
    221          	}
   \   00000134   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   00000138   0x6800             LDR      R0,[R0, #+0]
   \   0000013A   0x1C40             ADDS     R0,R0,#+1
   \   0000013C   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   00000140   0x6008             STR      R0,[R1, #+0]
   \                     ??UART2_SendADs_6:
   \   00000142   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   00000146   0x6800             LDR      R0,[R0, #+0]
   \   00000148   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   0000014C   0x7889             LDRB     R1,[R1, #+2]
   \   0000014E   0x4288             CMP      R0,R1
   \   00000150   0xDBE8             BLT.N    ??UART2_SendADs_7
    222          }
   \   00000152   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    223          

   \                                 In section .text, align 2, keep-with-next
    224          void UART2_SendInfo(u16 inDestAddr,int inNum,u8* inInfo)
    225          {
   \                     UART2_SendInfo:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x000C             MOVS     R4,R1
   \   00000004   0x0015             MOVS     R5,R2
    226          	SendBuf[0] = 0x55;	
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   0000000A   0x2255             MOVS     R2,#+85
   \   0000000C   0x700A             STRB     R2,[R1, #+0]
    227          	SendBuf[1] = 0xaa;
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   00000012   0x22AA             MOVS     R2,#+170
   \   00000014   0x704A             STRB     R2,[R1, #+1]
    228          	SendBuf[2] = inNum + 9; 		//包长
   \   00000016   0xF114 0x0109      ADDS     R1,R4,#+9
   \   0000001A   0x.... 0x....      LDR.W    R2,??DataTable17_14
   \   0000001E   0x7091             STRB     R1,[R2, #+2]
    229          
    230          	//目标地址
    231          	U16ToU8(inDestAddr,&SendBuf[3]);
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable17_15
   \   00000024   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000026   0x.... 0x....      BL       U16ToU8
    232          
    233          	//自己的地址
    234          	U16ToU8(MyAddr,&SendBuf[5]);
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable17_16
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable17_4
   \   00000032   0x8800             LDRH     R0,[R0, #+0]
   \   00000034   0x.... 0x....      BL       U16ToU8
    235          
    236          	SendBuf[7] = 0xff;		//info
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable17_14
   \   0000003C   0x21FF             MOVS     R1,#+255
   \   0000003E   0x71C1             STRB     R1,[R0, #+7]
    237          	
    238           	for(i=0;i<inNum;i++)
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   00000044   0x2100             MOVS     R1,#+0
   \   00000046   0x6001             STR      R1,[R0, #+0]
   \   00000048   0xE011             B.N      ??UART2_SendInfo_0
    239          	{
    240          		SendBuf[8+i] = inInfo[i];
   \                     ??UART2_SendInfo_1:
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   00000054   0x1840             ADDS     R0,R0,R1
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   0000005A   0x6809             LDR      R1,[R1, #+0]
   \   0000005C   0x5D49             LDRB     R1,[R1, R5]
   \   0000005E   0x7201             STRB     R1,[R0, #+8]
    241          	}
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0x1C40             ADDS     R0,R0,#+1
   \   00000068   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   0000006C   0x6008             STR      R0,[R1, #+0]
   \                     ??UART2_SendInfo_0:
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   00000072   0x6800             LDR      R0,[R0, #+0]
   \   00000074   0x42A0             CMP      R0,R4
   \   00000076   0xDBE8             BLT.N    ??UART2_SendInfo_1
    242          
    243          	//校验和
    244          	SendBuf[SendBuf[2]-1] = 0;
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable17_14
   \   0000007C   0x7880             LDRB     R0,[R0, #+2]
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   00000082   0x1840             ADDS     R0,R0,R1
   \   00000084   0x2100             MOVS     R1,#+0
   \   00000086   0xF800 0x1C01      STRB     R1,[R0, #-1]
    245          	for(i=0;i<SendBuf[2]-1;i++)
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   0000008E   0x2100             MOVS     R1,#+0
   \   00000090   0x6001             STR      R1,[R0, #+0]
   \   00000092   0xE01D             B.N      ??UART2_SendInfo_2
    246          	{
    247          		SendBuf[SendBuf[2]-1] += SendBuf[i];	
   \                     ??UART2_SendInfo_3:
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable17_14
   \   00000098   0x7880             LDRB     R0,[R0, #+2]
   \   0000009A   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   0000009E   0x1840             ADDS     R0,R0,R1
   \   000000A0   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   000000A8   0x6809             LDR      R1,[R1, #+0]
   \   000000AA   0x.... 0x....      LDR.W    R2,??DataTable17_14
   \   000000AE   0x5C89             LDRB     R1,[R1, R2]
   \   000000B0   0x1808             ADDS     R0,R1,R0
   \   000000B2   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   000000B6   0x7889             LDRB     R1,[R1, #+2]
   \   000000B8   0x.... 0x....      LDR.W    R2,??DataTable17_14
   \   000000BC   0x1889             ADDS     R1,R1,R2
   \   000000BE   0xF801 0x0C01      STRB     R0,[R1, #-1]
    248          	}
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   000000C6   0x6800             LDR      R0,[R0, #+0]
   \   000000C8   0x1C40             ADDS     R0,R0,#+1
   \   000000CA   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   000000CE   0x6008             STR      R0,[R1, #+0]
   \                     ??UART2_SendInfo_2:
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   000000D4   0x6800             LDR      R0,[R0, #+0]
   \   000000D6   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   000000DA   0x7889             LDRB     R1,[R1, #+2]
   \   000000DC   0x1E49             SUBS     R1,R1,#+1
   \   000000DE   0x4288             CMP      R0,R1
   \   000000E0   0xDBD8             BLT.N    ??UART2_SendInfo_3
    249          
    250          	//发送
    251          	for(i=0;i<SendBuf[2];i++)
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   000000E6   0x2100             MOVS     R1,#+0
   \   000000E8   0x6001             STR      R1,[R0, #+0]
   \   000000EA   0xE00E             B.N      ??UART2_SendInfo_4
    252          	{
    253          		UP_UART2_Putc(SendBuf[i]);
   \                     ??UART2_SendInfo_5:
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   000000F0   0x6800             LDR      R0,[R0, #+0]
   \   000000F2   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   000000F6   0x5C40             LDRB     R0,[R0, R1]
   \   000000F8   0x.... 0x....      BL       UP_UART2_Putc
    254          	}
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   00000100   0x6800             LDR      R0,[R0, #+0]
   \   00000102   0x1C40             ADDS     R0,R0,#+1
   \   00000104   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   00000108   0x6008             STR      R0,[R1, #+0]
   \                     ??UART2_SendInfo_4:
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   0000010E   0x6800             LDR      R0,[R0, #+0]
   \   00000110   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   00000114   0x7889             LDRB     R1,[R1, #+2]
   \   00000116   0x4288             CMP      R0,R1
   \   00000118   0xDBE8             BLT.N    ??UART2_SendInfo_5
    255          }
   \   0000011A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    256          

   \                                 In section .text, align 2, keep-with-next
    257          void UART2_SendRobotState(u16 inDestAddr,u8 inPos,u8 inNext,u8 inHeadFor )
    258          {
   \                     UART2_SendRobotState:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x000C             MOVS     R4,R1
   \   00000004   0x0015             MOVS     R5,R2
   \   00000006   0x001E             MOVS     R6,R3
    259          	SendBuf[0] = 0x55;	
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   0000000C   0x2255             MOVS     R2,#+85
   \   0000000E   0x700A             STRB     R2,[R1, #+0]
    260          	SendBuf[1] = 0xaa;
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   00000014   0x22AA             MOVS     R2,#+170
   \   00000016   0x704A             STRB     R2,[R1, #+1]
    261          	SendBuf[2] = 0x0c; 		//包长
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   0000001C   0x220C             MOVS     R2,#+12
   \   0000001E   0x708A             STRB     R2,[R1, #+2]
    262          
    263          	//目标地址
    264          	U16ToU8(inDestAddr,&SendBuf[3]);
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable17_15
   \   00000024   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000026   0x.... 0x....      BL       U16ToU8
    265          
    266          	//自己的地址
    267          	U16ToU8(MyAddr,&SendBuf[5]);
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable17_16
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable17_4
   \   00000032   0x8800             LDRH     R0,[R0, #+0]
   \   00000034   0x.... 0x....      BL       U16ToU8
    268          
    269          	SendBuf[7] = 0x01;		//state
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable17_14
   \   0000003C   0x2101             MOVS     R1,#+1
   \   0000003E   0x71C1             STRB     R1,[R0, #+7]
    270          	
    271          	SendBuf[8] = inPos;
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable17_14
   \   00000044   0x7204             STRB     R4,[R0, #+8]
    272          	SendBuf[9] =  inNext;
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable17_14
   \   0000004A   0x7245             STRB     R5,[R0, #+9]
    273          	SendBuf[10] =  inHeadFor;
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable17_14
   \   00000050   0x7286             STRB     R6,[R0, #+10]
    274           	
    275          
    276          	//校验和
    277          	SendBuf[SendBuf[2]-1] = 0;
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable17_14
   \   00000056   0x7880             LDRB     R0,[R0, #+2]
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   0000005C   0x1840             ADDS     R0,R0,R1
   \   0000005E   0x2100             MOVS     R1,#+0
   \   00000060   0xF800 0x1C01      STRB     R1,[R0, #-1]
    278          	for(i=0;i<SendBuf[2]-1;i++)
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x6001             STR      R1,[R0, #+0]
   \   0000006C   0xE01D             B.N      ??UART2_SendRobotState_0
    279          	{
    280          		SendBuf[SendBuf[2]-1] += SendBuf[i];	
   \                     ??UART2_SendRobotState_1:
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable17_14
   \   00000072   0x7880             LDRB     R0,[R0, #+2]
   \   00000074   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   00000078   0x1840             ADDS     R0,R0,R1
   \   0000007A   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   00000082   0x6809             LDR      R1,[R1, #+0]
   \   00000084   0x.... 0x....      LDR.W    R2,??DataTable17_14
   \   00000088   0x5C89             LDRB     R1,[R1, R2]
   \   0000008A   0x1808             ADDS     R0,R1,R0
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   00000090   0x7889             LDRB     R1,[R1, #+2]
   \   00000092   0x.... 0x....      LDR.W    R2,??DataTable17_14
   \   00000096   0x1889             ADDS     R1,R1,R2
   \   00000098   0xF801 0x0C01      STRB     R0,[R1, #-1]
    281          	}
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0x1C40             ADDS     R0,R0,#+1
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   000000A8   0x6008             STR      R0,[R1, #+0]
   \                     ??UART2_SendRobotState_0:
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   000000AE   0x6800             LDR      R0,[R0, #+0]
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   000000B4   0x7889             LDRB     R1,[R1, #+2]
   \   000000B6   0x1E49             SUBS     R1,R1,#+1
   \   000000B8   0x4288             CMP      R0,R1
   \   000000BA   0xDBD8             BLT.N    ??UART2_SendRobotState_1
    282          
    283          	//发送
    284          	for(i=0;i<SendBuf[2];i++)
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   000000C0   0x2100             MOVS     R1,#+0
   \   000000C2   0x6001             STR      R1,[R0, #+0]
   \   000000C4   0xE00E             B.N      ??UART2_SendRobotState_2
    285          	{
    286          		UP_UART2_Putc(SendBuf[i]);
   \                     ??UART2_SendRobotState_3:
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   000000CA   0x6800             LDR      R0,[R0, #+0]
   \   000000CC   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   000000D0   0x5C40             LDRB     R0,[R0, R1]
   \   000000D2   0x.... 0x....      BL       UP_UART2_Putc
    287          	}
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   000000DA   0x6800             LDR      R0,[R0, #+0]
   \   000000DC   0x1C40             ADDS     R0,R0,#+1
   \   000000DE   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   000000E2   0x6008             STR      R0,[R1, #+0]
   \                     ??UART2_SendRobotState_2:
   \   000000E4   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   000000E8   0x6800             LDR      R0,[R0, #+0]
   \   000000EA   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   000000EE   0x7889             LDRB     R1,[R1, #+2]
   \   000000F0   0x4288             CMP      R0,R1
   \   000000F2   0xDBE8             BLT.N    ??UART2_SendRobotState_3
    288          }
   \   000000F4   0xBD70             POP      {R4-R6,PC}       ;; return
    289          

   \                                 In section .text, align 2, keep-with-next
    290          void UART2_SendCardUID(u16 inDestAddr,u8* inUID)
    291          {
   \                     UART2_SendCardUID:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x000C             MOVS     R4,R1
    292          	SendBuf[0] = 0x55;	
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   00000008   0x2255             MOVS     R2,#+85
   \   0000000A   0x700A             STRB     R2,[R1, #+0]
    293          	SendBuf[1] = 0xaa;
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   00000010   0x22AA             MOVS     R2,#+170
   \   00000012   0x704A             STRB     R2,[R1, #+1]
    294          	SendBuf[2] = 0x0D; 		//包长
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   00000018   0x220D             MOVS     R2,#+13
   \   0000001A   0x708A             STRB     R2,[R1, #+2]
    295          
    296          	//目标地址
    297          	U16ToU8(inDestAddr,&SendBuf[3]);
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable17_15
   \   00000020   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000022   0x.... 0x....      BL       U16ToU8
    298          
    299          	//自己的地址
    300          	U16ToU8(MyAddr,&SendBuf[5]);
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable17_16
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable17_4
   \   0000002E   0x8800             LDRH     R0,[R0, #+0]
   \   00000030   0x.... 0x....      BL       U16ToU8
    301          
    302          	SendBuf[7] = 0x03;		//Card UID
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable17_14
   \   00000038   0x2103             MOVS     R1,#+3
   \   0000003A   0x71C1             STRB     R1,[R0, #+7]
    303          	
    304           	for(i=0;i<4;i++)
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   00000040   0x2100             MOVS     R1,#+0
   \   00000042   0x6001             STR      R1,[R0, #+0]
   \   00000044   0xE011             B.N      ??UART2_SendCardUID_0
    305          	{
    306          		SendBuf[8+i] = inUID[i];
   \                     ??UART2_SendCardUID_1:
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   00000050   0x1840             ADDS     R0,R0,R1
   \   00000052   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   00000056   0x6809             LDR      R1,[R1, #+0]
   \   00000058   0x5D09             LDRB     R1,[R1, R4]
   \   0000005A   0x7201             STRB     R1,[R0, #+8]
    307          	}
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0x1C40             ADDS     R0,R0,#+1
   \   00000064   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   00000068   0x6008             STR      R0,[R1, #+0]
   \                     ??UART2_SendCardUID_0:
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0x2804             CMP      R0,#+4
   \   00000072   0xDBE8             BLT.N    ??UART2_SendCardUID_1
    308          
    309          	//校验和
    310          	SendBuf[SendBuf[2]-1] = 0;
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable17_14
   \   00000078   0x7880             LDRB     R0,[R0, #+2]
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   0000007E   0x1840             ADDS     R0,R0,R1
   \   00000080   0x2100             MOVS     R1,#+0
   \   00000082   0xF800 0x1C01      STRB     R1,[R0, #-1]
    311          	for(i=0;i<SendBuf[2]-1;i++)
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   0000008A   0x2100             MOVS     R1,#+0
   \   0000008C   0x6001             STR      R1,[R0, #+0]
   \   0000008E   0xE01D             B.N      ??UART2_SendCardUID_2
    312          	{
    313          		SendBuf[SendBuf[2]-1] += SendBuf[i];	
   \                     ??UART2_SendCardUID_3:
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable17_14
   \   00000094   0x7880             LDRB     R0,[R0, #+2]
   \   00000096   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   0000009A   0x1840             ADDS     R0,R0,R1
   \   0000009C   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   000000A0   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   000000A4   0x6809             LDR      R1,[R1, #+0]
   \   000000A6   0x.... 0x....      LDR.W    R2,??DataTable17_14
   \   000000AA   0x5C89             LDRB     R1,[R1, R2]
   \   000000AC   0x1808             ADDS     R0,R1,R0
   \   000000AE   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   000000B2   0x7889             LDRB     R1,[R1, #+2]
   \   000000B4   0x.... 0x....      LDR.W    R2,??DataTable17_14
   \   000000B8   0x1889             ADDS     R1,R1,R2
   \   000000BA   0xF801 0x0C01      STRB     R0,[R1, #-1]
    314          	}
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   000000C2   0x6800             LDR      R0,[R0, #+0]
   \   000000C4   0x1C40             ADDS     R0,R0,#+1
   \   000000C6   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   000000CA   0x6008             STR      R0,[R1, #+0]
   \                     ??UART2_SendCardUID_2:
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   000000D0   0x6800             LDR      R0,[R0, #+0]
   \   000000D2   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   000000D6   0x7889             LDRB     R1,[R1, #+2]
   \   000000D8   0x1E49             SUBS     R1,R1,#+1
   \   000000DA   0x4288             CMP      R0,R1
   \   000000DC   0xDBD8             BLT.N    ??UART2_SendCardUID_3
    315          
    316          	//发送
    317          	for(i=0;i<SendBuf[2];i++)
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   000000E2   0x2100             MOVS     R1,#+0
   \   000000E4   0x6001             STR      R1,[R0, #+0]
   \   000000E6   0xE00E             B.N      ??UART2_SendCardUID_4
    318          	{
    319          		UP_UART2_Putc(SendBuf[i]);
   \                     ??UART2_SendCardUID_5:
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   000000EC   0x6800             LDR      R0,[R0, #+0]
   \   000000EE   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   000000F2   0x5C40             LDRB     R0,[R0, R1]
   \   000000F4   0x.... 0x....      BL       UP_UART2_Putc
    320          	}
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0x1C40             ADDS     R0,R0,#+1
   \   00000100   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   00000104   0x6008             STR      R0,[R1, #+0]
   \                     ??UART2_SendCardUID_4:
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   0000010A   0x6800             LDR      R0,[R0, #+0]
   \   0000010C   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   00000110   0x7889             LDRB     R1,[R1, #+2]
   \   00000112   0x4288             CMP      R0,R1
   \   00000114   0xDBE8             BLT.N    ??UART2_SendCardUID_5
    321          }
   \   00000116   0xBD10             POP      {R4,PC}          ;; return
    322          

   \                                 In section .text, align 2, keep-with-next
    323          void UART2_SendPathPoint(u16 inDestAddr,int* inPathx,int* inPathy,int inNum)
    324          {
   \                     UART2_SendPathPoint:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x000C             MOVS     R4,R1
   \   00000004   0x0015             MOVS     R5,R2
   \   00000006   0x001E             MOVS     R6,R3
    325          	SendBuf[0] = 0x55;	
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   0000000C   0x2255             MOVS     R2,#+85
   \   0000000E   0x700A             STRB     R2,[R1, #+0]
    326          	SendBuf[1] = 0xaa;
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   00000014   0x22AA             MOVS     R2,#+170
   \   00000016   0x704A             STRB     R2,[R1, #+1]
    327          	SendBuf[2] = (u8)inNum*2 + 9; 		//包长
   \   00000018   0x0031             MOVS     R1,R6
   \   0000001A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001C   0x0049             LSLS     R1,R1,#+1
   \   0000001E   0x3109             ADDS     R1,R1,#+9
   \   00000020   0x.... 0x....      LDR.W    R2,??DataTable17_14
   \   00000024   0x7091             STRB     R1,[R2, #+2]
    328          
    329          	//目标地址
    330          	U16ToU8(inDestAddr,&SendBuf[3]);
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable17_15
   \   0000002A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000002C   0x.... 0x....      BL       U16ToU8
    331          
    332          	//自己的地址
    333          	U16ToU8(MyAddr,&SendBuf[5]);
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable17_16
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable17_4
   \   00000038   0x8800             LDRH     R0,[R0, #+0]
   \   0000003A   0x.... 0x....      BL       U16ToU8
    334          
    335          	SendBuf[7] = 0x04;		//路径点
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable17_14
   \   00000042   0x2104             MOVS     R1,#+4
   \   00000044   0x71C1             STRB     R1,[R0, #+7]
    336          	
    337           	for(i=0;i<inNum;i++)
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   0000004A   0x2100             MOVS     R1,#+0
   \   0000004C   0x6001             STR      R1,[R0, #+0]
   \   0000004E   0xE01C             B.N      ??UART2_SendPathPoint_0
    338          	{
    339          		SendBuf[8+2*i] = (u8)inPathx[i];
   \                     ??UART2_SendPathPoint_1:
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable17_1
   \   00000054   0x6800             LDR      R0,[R0, #+0]
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   0000005A   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable17_1
   \   00000062   0x6809             LDR      R1,[R1, #+0]
   \   00000064   0xF854 0x1021      LDR      R1,[R4, R1, LSL #+2]
   \   00000068   0x7201             STRB     R1,[R0, #+8]
    340          		SendBuf[8+2*i+1] = (u8)inPathy[i];
   \   0000006A   0x....             LDR.N    R0,??DataTable17_1
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable17_14
   \   00000072   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000076   0x....             LDR.N    R1,??DataTable17_1
   \   00000078   0x6809             LDR      R1,[R1, #+0]
   \   0000007A   0xF855 0x1021      LDR      R1,[R5, R1, LSL #+2]
   \   0000007E   0x7241             STRB     R1,[R0, #+9]
    341          	}
   \   00000080   0x....             LDR.N    R0,??DataTable17_1
   \   00000082   0x6800             LDR      R0,[R0, #+0]
   \   00000084   0x1C40             ADDS     R0,R0,#+1
   \   00000086   0x....             LDR.N    R1,??DataTable17_1
   \   00000088   0x6008             STR      R0,[R1, #+0]
   \                     ??UART2_SendPathPoint_0:
   \   0000008A   0x....             LDR.N    R0,??DataTable17_1
   \   0000008C   0x6800             LDR      R0,[R0, #+0]
   \   0000008E   0x42B0             CMP      R0,R6
   \   00000090   0xDBDE             BLT.N    ??UART2_SendPathPoint_1
    342          
    343          	//校验和
    344          	SendBuf[SendBuf[2]-1] = 0;
   \   00000092   0x....             LDR.N    R0,??DataTable17_14
   \   00000094   0x7880             LDRB     R0,[R0, #+2]
   \   00000096   0x....             LDR.N    R1,??DataTable17_14
   \   00000098   0x1840             ADDS     R0,R0,R1
   \   0000009A   0x2100             MOVS     R1,#+0
   \   0000009C   0xF800 0x1C01      STRB     R1,[R0, #-1]
    345          	for(i=0;i<SendBuf[2]-1;i++)
   \   000000A0   0x....             LDR.N    R0,??DataTable17_1
   \   000000A2   0x2100             MOVS     R1,#+0
   \   000000A4   0x6001             STR      R1,[R0, #+0]
   \   000000A6   0xE015             B.N      ??UART2_SendPathPoint_2
    346          	{
    347          		SendBuf[SendBuf[2]-1] += SendBuf[i];	
   \                     ??UART2_SendPathPoint_3:
   \   000000A8   0x....             LDR.N    R0,??DataTable17_14
   \   000000AA   0x7880             LDRB     R0,[R0, #+2]
   \   000000AC   0x....             LDR.N    R1,??DataTable17_14
   \   000000AE   0x1840             ADDS     R0,R0,R1
   \   000000B0   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   000000B4   0x....             LDR.N    R1,??DataTable17_1
   \   000000B6   0x6809             LDR      R1,[R1, #+0]
   \   000000B8   0x....             LDR.N    R2,??DataTable17_14
   \   000000BA   0x5C89             LDRB     R1,[R1, R2]
   \   000000BC   0x1808             ADDS     R0,R1,R0
   \   000000BE   0x....             LDR.N    R1,??DataTable17_14
   \   000000C0   0x7889             LDRB     R1,[R1, #+2]
   \   000000C2   0x....             LDR.N    R2,??DataTable17_14
   \   000000C4   0x1889             ADDS     R1,R1,R2
   \   000000C6   0xF801 0x0C01      STRB     R0,[R1, #-1]
    348          	}
   \   000000CA   0x....             LDR.N    R0,??DataTable17_1
   \   000000CC   0x6800             LDR      R0,[R0, #+0]
   \   000000CE   0x1C40             ADDS     R0,R0,#+1
   \   000000D0   0x....             LDR.N    R1,??DataTable17_1
   \   000000D2   0x6008             STR      R0,[R1, #+0]
   \                     ??UART2_SendPathPoint_2:
   \   000000D4   0x....             LDR.N    R0,??DataTable17_1
   \   000000D6   0x6800             LDR      R0,[R0, #+0]
   \   000000D8   0x....             LDR.N    R1,??DataTable17_14
   \   000000DA   0x7889             LDRB     R1,[R1, #+2]
   \   000000DC   0x1E49             SUBS     R1,R1,#+1
   \   000000DE   0x4288             CMP      R0,R1
   \   000000E0   0xDBE2             BLT.N    ??UART2_SendPathPoint_3
    349          
    350          	//发送
    351          	for(i=0;i<SendBuf[2];i++)
   \   000000E2   0x....             LDR.N    R0,??DataTable17_1
   \   000000E4   0x2100             MOVS     R1,#+0
   \   000000E6   0x6001             STR      R1,[R0, #+0]
   \   000000E8   0xE00A             B.N      ??UART2_SendPathPoint_4
    352          	{
    353          		UP_UART2_Putc(SendBuf[i]);
   \                     ??UART2_SendPathPoint_5:
   \   000000EA   0x....             LDR.N    R0,??DataTable17_1
   \   000000EC   0x6800             LDR      R0,[R0, #+0]
   \   000000EE   0x....             LDR.N    R1,??DataTable17_14
   \   000000F0   0x5C40             LDRB     R0,[R0, R1]
   \   000000F2   0x.... 0x....      BL       UP_UART2_Putc
    354          	}
   \   000000F6   0x....             LDR.N    R0,??DataTable17_1
   \   000000F8   0x6800             LDR      R0,[R0, #+0]
   \   000000FA   0x1C40             ADDS     R0,R0,#+1
   \   000000FC   0x....             LDR.N    R1,??DataTable17_1
   \   000000FE   0x6008             STR      R0,[R1, #+0]
   \                     ??UART2_SendPathPoint_4:
   \   00000100   0x....             LDR.N    R0,??DataTable17_1
   \   00000102   0x6800             LDR      R0,[R0, #+0]
   \   00000104   0x....             LDR.N    R1,??DataTable17_14
   \   00000106   0x7889             LDRB     R1,[R1, #+2]
   \   00000108   0x4288             CMP      R0,R1
   \   0000010A   0xDBEE             BLT.N    ??UART2_SendPathPoint_5
    355          }
   \   0000010C   0xBD70             POP      {R4-R6,PC}       ;; return
    356          

   \                                 In section .text, align 2, keep-with-next
    357          void UART2_SendMap(u16 inDestAddr,u8* indata,u8 inLen)
    358          {
   \                     UART2_SendMap:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x000C             MOVS     R4,R1
   \   00000004   0x0015             MOVS     R5,R2
    359          	SendBuf[0] = 0x55;	
   \   00000006   0x....             LDR.N    R1,??DataTable17_14
   \   00000008   0x2255             MOVS     R2,#+85
   \   0000000A   0x700A             STRB     R2,[R1, #+0]
    360          	SendBuf[1] = 0xaa;
   \   0000000C   0x....             LDR.N    R1,??DataTable17_14
   \   0000000E   0x22AA             MOVS     R2,#+170
   \   00000010   0x704A             STRB     R2,[R1, #+1]
    361          	SendBuf[2] = inLen + 9; 		//包长
   \   00000012   0x....             LDR.N    R1,??DataTable17_14
   \   00000014   0xF115 0x0209      ADDS     R2,R5,#+9
   \   00000018   0x708A             STRB     R2,[R1, #+2]
    362          
    363          	//目标地址
    364          	U16ToU8(inDestAddr,&SendBuf[3]);
   \   0000001A   0x....             LDR.N    R1,??DataTable17_15
   \   0000001C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000001E   0x.... 0x....      BL       U16ToU8
    365          
    366          	//自己的地址
    367          	U16ToU8(MyAddr,&SendBuf[5]);
   \   00000022   0x....             LDR.N    R1,??DataTable17_16
   \   00000024   0x....             LDR.N    R0,??DataTable17_4
   \   00000026   0x8800             LDRH     R0,[R0, #+0]
   \   00000028   0x.... 0x....      BL       U16ToU8
    368          
    369          	SendBuf[7] = 0x05;		//路径点
   \   0000002C   0x....             LDR.N    R0,??DataTable17_14
   \   0000002E   0x2105             MOVS     R1,#+5
   \   00000030   0x71C1             STRB     R1,[R0, #+7]
    370          	
    371           	for(i=0;i<inLen;i++)
   \   00000032   0x....             LDR.N    R0,??DataTable17_1
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0x6001             STR      R1,[R0, #+0]
   \   00000038   0xE00C             B.N      ??UART2_SendMap_0
    372          	{
    373          		SendBuf[8+i] = indata[i];
   \                     ??UART2_SendMap_1:
   \   0000003A   0x....             LDR.N    R0,??DataTable17_1
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x....             LDR.N    R1,??DataTable17_14
   \   00000040   0x1840             ADDS     R0,R0,R1
   \   00000042   0x....             LDR.N    R1,??DataTable17_1
   \   00000044   0x6809             LDR      R1,[R1, #+0]
   \   00000046   0x5D09             LDRB     R1,[R1, R4]
   \   00000048   0x7201             STRB     R1,[R0, #+8]
    374          	}
   \   0000004A   0x....             LDR.N    R0,??DataTable17_1
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0x1C40             ADDS     R0,R0,#+1
   \   00000050   0x....             LDR.N    R1,??DataTable17_1
   \   00000052   0x6008             STR      R0,[R1, #+0]
   \                     ??UART2_SendMap_0:
   \   00000054   0x....             LDR.N    R0,??DataTable17_1
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000005A   0x42A8             CMP      R0,R5
   \   0000005C   0xDBED             BLT.N    ??UART2_SendMap_1
    375          
    376          	//校验和
    377          	SendBuf[SendBuf[2]-1] = 0;
   \   0000005E   0x....             LDR.N    R0,??DataTable17_14
   \   00000060   0x7880             LDRB     R0,[R0, #+2]
   \   00000062   0x....             LDR.N    R1,??DataTable17_14
   \   00000064   0x1840             ADDS     R0,R0,R1
   \   00000066   0x2100             MOVS     R1,#+0
   \   00000068   0xF800 0x1C01      STRB     R1,[R0, #-1]
    378          	for(i=0;i<SendBuf[2]-1;i++)
   \   0000006C   0x....             LDR.N    R0,??DataTable17_1
   \   0000006E   0x2100             MOVS     R1,#+0
   \   00000070   0x6001             STR      R1,[R0, #+0]
   \   00000072   0xE015             B.N      ??UART2_SendMap_2
    379          	{
    380          		SendBuf[SendBuf[2]-1] += SendBuf[i];	
   \                     ??UART2_SendMap_3:
   \   00000074   0x....             LDR.N    R0,??DataTable17_14
   \   00000076   0x7880             LDRB     R0,[R0, #+2]
   \   00000078   0x....             LDR.N    R1,??DataTable17_14
   \   0000007A   0x1840             ADDS     R0,R0,R1
   \   0000007C   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   00000080   0x....             LDR.N    R1,??DataTable17_1
   \   00000082   0x6809             LDR      R1,[R1, #+0]
   \   00000084   0x....             LDR.N    R2,??DataTable17_14
   \   00000086   0x5C89             LDRB     R1,[R1, R2]
   \   00000088   0x1808             ADDS     R0,R1,R0
   \   0000008A   0x....             LDR.N    R1,??DataTable17_14
   \   0000008C   0x7889             LDRB     R1,[R1, #+2]
   \   0000008E   0x....             LDR.N    R2,??DataTable17_14
   \   00000090   0x1889             ADDS     R1,R1,R2
   \   00000092   0xF801 0x0C01      STRB     R0,[R1, #-1]
    381          	}
   \   00000096   0x....             LDR.N    R0,??DataTable17_1
   \   00000098   0x6800             LDR      R0,[R0, #+0]
   \   0000009A   0x1C40             ADDS     R0,R0,#+1
   \   0000009C   0x....             LDR.N    R1,??DataTable17_1
   \   0000009E   0x6008             STR      R0,[R1, #+0]
   \                     ??UART2_SendMap_2:
   \   000000A0   0x....             LDR.N    R0,??DataTable17_1
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0x....             LDR.N    R1,??DataTable17_14
   \   000000A6   0x7889             LDRB     R1,[R1, #+2]
   \   000000A8   0x1E49             SUBS     R1,R1,#+1
   \   000000AA   0x4288             CMP      R0,R1
   \   000000AC   0xDBE2             BLT.N    ??UART2_SendMap_3
    382          
    383          	//发送
    384          	for(i=0;i<SendBuf[2];i++)
   \   000000AE   0x....             LDR.N    R0,??DataTable17_1
   \   000000B0   0x2100             MOVS     R1,#+0
   \   000000B2   0x6001             STR      R1,[R0, #+0]
   \   000000B4   0xE00A             B.N      ??UART2_SendMap_4
    385          	{
    386          		UP_UART2_Putc(SendBuf[i]);
   \                     ??UART2_SendMap_5:
   \   000000B6   0x....             LDR.N    R0,??DataTable17_1
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0x....             LDR.N    R1,??DataTable17_14
   \   000000BC   0x5C40             LDRB     R0,[R0, R1]
   \   000000BE   0x.... 0x....      BL       UP_UART2_Putc
    387          	}
   \   000000C2   0x....             LDR.N    R0,??DataTable17_1
   \   000000C4   0x6800             LDR      R0,[R0, #+0]
   \   000000C6   0x1C40             ADDS     R0,R0,#+1
   \   000000C8   0x....             LDR.N    R1,??DataTable17_1
   \   000000CA   0x6008             STR      R0,[R1, #+0]
   \                     ??UART2_SendMap_4:
   \   000000CC   0x....             LDR.N    R0,??DataTable17_1
   \   000000CE   0x6800             LDR      R0,[R0, #+0]
   \   000000D0   0x....             LDR.N    R1,??DataTable17_14
   \   000000D2   0x7889             LDRB     R1,[R1, #+2]
   \   000000D4   0x4288             CMP      R0,R1
   \   000000D6   0xDBEE             BLT.N    ??UART2_SendMap_5
    388          }
   \   000000D8   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    389           /****************************************************************************************************
    390           RFID解析
    391           *****************************************************************************************************/
    392          static u8 rfParseBuf[32];
    393          static u8 rfRecvIndex = 0;

   \                                 In section .bss, align 4
    394          static CycleBuf rfidBuf;
   \                     rfidBuf:
   \   00000000                      DS8 260

   \                                 In section .bss, align 4
    395          unsigned char Card[4]={0,0,0,0};
   \                     Card:
   \   00000000                      DS8 4
    396          

   \                                 In section .text, align 2, keep-with-next
    397          void BufRFID(u8 inData)
    398          {
   \                     BufRFID:
   \   00000000   0xB580             PUSH     {R7,LR}
    399          	  Cyc_PutIn(&rfidBuf,inData);
   \   00000002   0x0001             MOVS     R1,R0
   \   00000004   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000006   0x....             LDR.N    R0,??DataTable17_17
   \   00000008   0x.... 0x....      BL       Cyc_PutIn
    400          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    401          

   \                                 In section .text, align 2, keep-with-next
    402          unsigned char Xor(unsigned char *data,int len)
    403          {
   \                     `Xor`:
   \   00000000   0xB410             PUSH     {R4}
    404             unsigned char result=0;
   \   00000002   0x2200             MOVS     R2,#+0
    405             int i;
    406             for(i=0;i<len;i++)
   \   00000004   0x2300             MOVS     R3,#+0
   \   00000006   0xE002             B.N      ??Xor_0
    407             {
    408               result^=data[i];
   \                     ??Xor_1:
   \   00000008   0x5C1C             LDRB     R4,[R3, R0]
   \   0000000A   0x4062             EORS     R2,R4,R2
    409             }
   \   0000000C   0x1C5B             ADDS     R3,R3,#+1
   \                     ??Xor_0:
   \   0000000E   0x428B             CMP      R3,R1
   \   00000010   0xDBFA             BLT.N    ??Xor_1
    410             return result;
   \   00000012   0x0010             MOVS     R0,R2
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0xBC10             POP      {R4}
   \   00000018   0x4770             BX       LR               ;; return
    411          }

   \                                 In section .bss, align 1
    412          unsigned char FrameStart=0;
   \                     FrameStart:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
    413          unsigned char Buf[48];
   \                     Buf:
   \   00000000                      DS8 48

   \                                 In section .bss, align 1
    414          unsigned char  RecvIndex=0;
   \                     RecvIndex:
   \   00000000                      DS8 1
    415          

   \                                 In section .text, align 2, keep-with-next
    416          void Parse_RFID(unsigned char in)
    417          {
   \                     Parse_RFID:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    418          int i;
    419          	 if ( FrameStart == 0)		//接收的数据
   \   00000004   0x....             LDR.N    R0,??DataTable17_18
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD108             BNE.N    ??Parse_RFID_0
    420              {
    421                FrameStart = 1;			//表示接收到了 BD 开始标记
   \   0000000C   0x....             LDR.N    R0,??DataTable17_18
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x7001             STRB     R1,[R0, #+0]
    422                Buf[0] = in;
   \   00000012   0x....             LDR.N    R0,??DataTable17_19
   \   00000014   0x7004             STRB     R4,[R0, #+0]
    423                RecvIndex = 1;			//已经缓冲了1个字节的数据
   \   00000016   0x....             LDR.N    R0,??DataTable17_20
   \   00000018   0x2101             MOVS     R1,#+1
   \   0000001A   0x7001             STRB     R1,[R0, #+0]
    424                return;
   \   0000001C   0xE051             B.N      ??Parse_RFID_1
    425              }
    426              
    427              if(RecvIndex==5)                //错误纠正
   \                     ??Parse_RFID_0:
   \   0000001E   0x....             LDR.N    R0,??DataTable17_20
   \   00000020   0x7800             LDRB     R0,[R0, #+0]
   \   00000022   0x2805             CMP      R0,#+5
   \   00000024   0xD120             BNE.N    ??Parse_RFID_2
    428              {
    429                for(i=0;i<4;i++)
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0xE005             B.N      ??Parse_RFID_3
    430                {
    431                  Buf[i]=Buf[i+1];
   \                     ??Parse_RFID_4:
   \   0000002A   0x....             LDR.N    R1,??DataTable17_19
   \   0000002C   0x1841             ADDS     R1,R0,R1
   \   0000002E   0x7849             LDRB     R1,[R1, #+1]
   \   00000030   0x....             LDR.N    R2,??DataTable17_19
   \   00000032   0x5481             STRB     R1,[R0, R2]
    432                }
   \   00000034   0x1C40             ADDS     R0,R0,#+1
   \                     ??Parse_RFID_3:
   \   00000036   0x2804             CMP      R0,#+4
   \   00000038   0xDBF7             BLT.N    ??Parse_RFID_4
    433                if(in==Xor(Buf,4))
   \   0000003A   0x2104             MOVS     R1,#+4
   \   0000003C   0x....             LDR.N    R0,??DataTable17_19
   \   0000003E   0x.... 0x....      BL       `Xor`
   \   00000042   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000044   0x4284             CMP      R4,R0
   \   00000046   0xD108             BNE.N    ??Parse_RFID_5
    434                {
    435                  for(i=0;i<4;i++)
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0xE004             B.N      ??Parse_RFID_6
    436                  {
    437                    Card[i]=Buf[i];
   \                     ??Parse_RFID_7:
   \   0000004C   0x....             LDR.N    R1,??DataTable17_21
   \   0000004E   0x....             LDR.N    R2,??DataTable17_19
   \   00000050   0x5C82             LDRB     R2,[R0, R2]
   \   00000052   0x5442             STRB     R2,[R0, R1]
    438                  }       
   \   00000054   0x1C40             ADDS     R0,R0,#+1
   \                     ??Parse_RFID_6:
   \   00000056   0x2804             CMP      R0,#+4
   \   00000058   0xDBF8             BLT.N    ??Parse_RFID_7
    439                }
    440                RecvIndex=0;
   \                     ??Parse_RFID_5:
   \   0000005A   0x....             LDR.N    R0,??DataTable17_20
   \   0000005C   0x2100             MOVS     R1,#+0
   \   0000005E   0x7001             STRB     R1,[R0, #+0]
    441                FrameStart=0;
   \   00000060   0x....             LDR.N    R0,??DataTable17_18
   \   00000062   0x2100             MOVS     R1,#+0
   \   00000064   0x7001             STRB     R1,[R0, #+0]
    442                return;
   \   00000066   0xE02C             B.N      ??Parse_RFID_1
    443                
    444              }
    445              if (FrameStart == 1)
   \                     ??Parse_RFID_2:
   \   00000068   0x....             LDR.N    R0,??DataTable17_18
   \   0000006A   0x7800             LDRB     R0,[R0, #+0]
   \   0000006C   0x2801             CMP      R0,#+1
   \   0000006E   0xD128             BNE.N    ??Parse_RFID_8
    446              {      
    447                //将接收的数据拷贝到缓冲数组里
    448                Buf[RecvIndex]=in;
   \   00000070   0x....             LDR.N    R0,??DataTable17_20
   \   00000072   0x7800             LDRB     R0,[R0, #+0]
   \   00000074   0x....             LDR.N    R1,??DataTable17_19
   \   00000076   0x5444             STRB     R4,[R0, R1]
    449                RecvIndex++;
   \   00000078   0x....             LDR.N    R0,??DataTable17_20
   \   0000007A   0x7800             LDRB     R0,[R0, #+0]
   \   0000007C   0x1C40             ADDS     R0,R0,#+1
   \   0000007E   0x....             LDR.N    R1,??DataTable17_20
   \   00000080   0x7008             STRB     R0,[R1, #+0]
    450                
    451                //通过接收数据长度来判断是否满一帧
    452                if ((RecvIndex == 5)&&(Buf[4]==Xor(Buf,4)))
   \   00000082   0x....             LDR.N    R0,??DataTable17_20
   \   00000084   0x7800             LDRB     R0,[R0, #+0]
   \   00000086   0x2805             CMP      R0,#+5
   \   00000088   0xD114             BNE.N    ??Parse_RFID_9
   \   0000008A   0x2104             MOVS     R1,#+4
   \   0000008C   0x....             LDR.N    R0,??DataTable17_19
   \   0000008E   0x.... 0x....      BL       `Xor`
   \   00000092   0x....             LDR.N    R1,??DataTable17_19
   \   00000094   0x7909             LDRB     R1,[R1, #+4]
   \   00000096   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000098   0x4281             CMP      R1,R0
   \   0000009A   0xD10B             BNE.N    ??Parse_RFID_9
    453                { 
    454                  for(i=0;i<4;i++)
   \   0000009C   0x2000             MOVS     R0,#+0
   \   0000009E   0xE004             B.N      ??Parse_RFID_10
    455                  {
    456                    Card[i]=Buf[i];
   \                     ??Parse_RFID_11:
   \   000000A0   0x....             LDR.N    R1,??DataTable17_21
   \   000000A2   0x....             LDR.N    R2,??DataTable17_19
   \   000000A4   0x5C82             LDRB     R2,[R0, R2]
   \   000000A6   0x5442             STRB     R2,[R0, R1]
    457                  }
   \   000000A8   0x1C40             ADDS     R0,R0,#+1
   \                     ??Parse_RFID_10:
   \   000000AA   0x2804             CMP      R0,#+4
   \   000000AC   0xDBF8             BLT.N    ??Parse_RFID_11
    458          //        UART0SendCharArray(packet_data,4);
    459                  RecvIndex=0;
   \   000000AE   0x....             LDR.N    R0,??DataTable17_20
   \   000000B0   0x2100             MOVS     R1,#+0
   \   000000B2   0x7001             STRB     R1,[R0, #+0]
    460                }
    461                
    462                //当缓冲数据溢出时（接收数据里有错误会导致这种后果）
    463                if (RecvIndex>=48) 
   \                     ??Parse_RFID_9:
   \   000000B4   0x....             LDR.N    R0,??DataTable17_20
   \   000000B6   0x7800             LDRB     R0,[R0, #+0]
   \   000000B8   0x2830             CMP      R0,#+48
   \   000000BA   0xD302             BCC.N    ??Parse_RFID_8
    464                {
    465                  FrameStart = 0;
   \   000000BC   0x....             LDR.N    R0,??DataTable17_18
   \   000000BE   0x2100             MOVS     R1,#+0
   \   000000C0   0x7001             STRB     R1,[R0, #+0]
    466                }
    467              }
    468          }
   \                     ??Parse_RFID_8:
   \                     ??Parse_RFID_1:
   \   000000C2   0xBD10             POP      {R4,PC}          ;; return
    469          

   \                                 In section .text, align 2, keep-with-next
    470          void ParseRFIDData()
    471          {
   \                     ParseRFIDData:
   \   00000000   0xB580             PUSH     {R7,LR}
    472          	u8 temp = 0;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0xF88D 0x0000      STRB     R0,[SP, #+0]
    473          	u8 result = 0;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0xE003             B.N      ??ParseRFIDData_0
    474          	while(1)
    475          	{
    476          		result =  Cyc_Get(&rfidBuf,&temp);
    477          		if(result > 0)
    478          		{
    479          			Parse_RFID(temp);
   \                     ??ParseRFIDData_1:
   \   0000000C   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000010   0x.... 0x....      BL       Parse_RFID
    480          		}
   \                     ??ParseRFIDData_0:
   \   00000014   0xA900             ADD      R1,SP,#+0
   \   00000016   0x....             LDR.N    R0,??DataTable17_17
   \   00000018   0x.... 0x....      BL       Cyc_Get
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0x2801             CMP      R0,#+1
   \   00000020   0xD2F4             BCS.N    ??ParseRFIDData_1
    481          		else
    482          		{
    483          			break;
    484          		}
    485          	}
    486          }
   \   00000022   0xBD01             POP      {R0,PC}          ;; return
    487          

   \                                 In section .text, align 2, keep-with-next
    488          int GetCardUID(u8* inBuf)
    489          {
   \                     GetCardUID:
   \   00000000   0xB410             PUSH     {R4}
    490          	int res = 0	;
   \   00000002   0x2100             MOVS     R1,#+0
    491          	for(i=0;i<4;i++)
   \   00000004   0x....             LDR.N    R2,??DataTable17_1
   \   00000006   0x2300             MOVS     R3,#+0
   \   00000008   0x6013             STR      R3,[R2, #+0]
   \   0000000A   0xE017             B.N      ??GetCardUID_0
    492          	{
    493          		inBuf[i] = Card[i];
   \                     ??GetCardUID_1:
   \   0000000C   0x....             LDR.N    R2,??DataTable17_1
   \   0000000E   0x6812             LDR      R2,[R2, #+0]
   \   00000010   0x....             LDR.N    R3,??DataTable17_1
   \   00000012   0x681B             LDR      R3,[R3, #+0]
   \   00000014   0x....             LDR.N    R4,??DataTable17_21
   \   00000016   0x5D1B             LDRB     R3,[R3, R4]
   \   00000018   0x5413             STRB     R3,[R2, R0]
    494          		if(Card[i] != 0)
   \   0000001A   0x....             LDR.N    R2,??DataTable17_1
   \   0000001C   0x6812             LDR      R2,[R2, #+0]
   \   0000001E   0x....             LDR.N    R3,??DataTable17_21
   \   00000020   0x5CD2             LDRB     R2,[R2, R3]
   \   00000022   0x2A00             CMP      R2,#+0
   \   00000024   0xD005             BEQ.N    ??GetCardUID_2
    495          		{
    496          			res = 1;
   \   00000026   0x2101             MOVS     R1,#+1
    497          			Card[i] = 0;
   \   00000028   0x....             LDR.N    R2,??DataTable17_1
   \   0000002A   0x6812             LDR      R2,[R2, #+0]
   \   0000002C   0x....             LDR.N    R3,??DataTable17_21
   \   0000002E   0x2400             MOVS     R4,#+0
   \   00000030   0x54D4             STRB     R4,[R2, R3]
    498          		}
    499          	}
   \                     ??GetCardUID_2:
   \   00000032   0x....             LDR.N    R2,??DataTable17_1
   \   00000034   0x6812             LDR      R2,[R2, #+0]
   \   00000036   0x1C52             ADDS     R2,R2,#+1
   \   00000038   0x....             LDR.N    R3,??DataTable17_1
   \   0000003A   0x601A             STR      R2,[R3, #+0]
   \                     ??GetCardUID_0:
   \   0000003C   0x....             LDR.N    R2,??DataTable17_1
   \   0000003E   0x6812             LDR      R2,[R2, #+0]
   \   00000040   0x2A04             CMP      R2,#+4
   \   00000042   0xDBE3             BLT.N    ??GetCardUID_1
    500          	return res;
   \   00000044   0x0008             MOVS     R0,R1
   \   00000046   0xBC10             POP      {R4}
   \   00000048   0x4770             BX       LR               ;; return
    501          }
    502          

   \                                 In section .text, align 2, keep-with-next
    503          void LCD_DisplayFieldSensors(void)
    504          {
    505          	/*UP_LCD_ShowInt(0,1,FieldSensors[0]);
    506          	UP_LCD_ShowInt(0,2,FieldSensors[1]);
    507          	UP_LCD_ShowInt(0,3,FieldSensors[2]);
    508          
    509          	UP_LCD_ShowInt(7,1,FieldSensors[3]);
    510          	UP_LCD_ShowInt(4,2,FieldSensors[4]);
    511          	UP_LCD_ShowInt(10,2,FieldSensors[5]);
    512          	UP_LCD_ShowInt(7,3,FieldSensors[6]);
    513          
    514          	UP_LCD_ShowInt(14,1,FieldSensors[7]);
    515          	UP_LCD_ShowInt(14,2,FieldSensors[8]);
    516          	UP_LCD_ShowInt(14,3,FieldSensors[9]);
    517          	
    518          	if(RobotAction == 1)
    519          	{
    520          		UP_LCD_ShowLetter(7,2,'A');
    521          	}
    522          	else
    523          	{
    524          		UP_LCD_ShowLetter(7,2,'S');
    525          	}*/
    526          }
   \                     LCD_DisplayFieldSensors:
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   0x........         DC32     RobotAction

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_1:
   \   00000000   0x........         DC32     i

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_2:
   \   00000000   0x........         DC32     FieldSensors

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_3:
   \   00000000   0x........         DC32     DestPos

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_4:
   \   00000000   0x........         DC32     MyAddr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_5:
   \   00000000   0x........         DC32     pPut

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_6:
   \   00000000   0x........         DC32     pTail

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_7:
   \   00000000   0x........         DC32     pHead

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_8:
   \   00000000   0x........         DC32     pGet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_9:
   \   00000000   0x........         DC32     ??FrameStart

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_10:
   \   00000000   0x........         DC32     ??lastRecv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_11:
   \   00000000   0x........         DC32     ParseBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_12:
   \   00000000   0x........         DC32     ??RecvIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_13:
   \   00000000   0x........         DC32     ??FrameLength

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_14:
   \   00000000   0x........         DC32     SendBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_15:
   \   00000000   0x........         DC32     SendBuf+0x3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_16:
   \   00000000   0x........         DC32     SendBuf+0x5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_17:
   \   00000000   0x........         DC32     rfidBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_18:
   \   00000000   0x........         DC32     FrameStart

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_19:
   \   00000000   0x........         DC32     Buf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_20:
   \   00000000   0x........         DC32     RecvIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_21:
   \   00000000   0x........         DC32     Card
    527          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  BufRFID
              8 -> Cyc_PutIn
        0  CFG_MyAddr
        4  GetCardUID
        0  GetCmdAction
        0  GetDestPos
        0  GetFieldSensors
        0  LCD_DisplayFieldSensors
        8  ParseRFIDData
              8 -> Cyc_Get
              8 -> Parse_RFID
        8  Parse_RFID
              8 -> Xor
        0  U16ToU8
        8  UART2_ParseData
              8 -> Uart2_ParseFrame
        8  UART2_ParseRawBuf
              8 -> UART2_ParseData
       16  UART2_SendADs
             16 -> U16ToU8
             16 -> UP_UART2_Putc
        8  UART2_SendCardUID
              8 -> U16ToU8
              8 -> UP_UART2_Putc
       16  UART2_SendInfo
             16 -> U16ToU8
             16 -> UP_UART2_Putc
       16  UART2_SendMap
             16 -> U16ToU8
             16 -> UP_UART2_Putc
       16  UART2_SendPathPoint
             16 -> U16ToU8
             16 -> UP_UART2_Putc
       16  UART2_SendRobotState
             16 -> U16ToU8
             16 -> UP_UART2_Putc
        4  Uart2_ParseFrame
        0  Uart2_RecvBuf
        4  Xor


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable17
       4  ??DataTable17_1
       4  ??DataTable17_10
       4  ??DataTable17_11
       4  ??DataTable17_12
       4  ??DataTable17_13
       4  ??DataTable17_14
       4  ??DataTable17_15
       4  ??DataTable17_16
       4  ??DataTable17_17
       4  ??DataTable17_18
       4  ??DataTable17_19
       4  ??DataTable17_2
       4  ??DataTable17_20
       4  ??DataTable17_21
       4  ??DataTable17_3
       4  ??DataTable17_4
       4  ??DataTable17_5
       4  ??DataTable17_6
       4  ??DataTable17_7
       4  ??DataTable17_8
       4  ??DataTable17_9
      48  Buf
      14  BufRFID
       8  CFG_MyAddr
       4  Card
       1  DestPos
      12  FieldSensors
       4  FrameLength
       1  FrameStart
       1  FrameStart
      74  GetCardUID
       8  GetCmdAction
       8  GetDestPos
      56  GetFieldSensors
       2  LCD_DisplayFieldSensors
       2  MyAddr
      64  ParseBuf
      36  ParseRFIDData
     196  Parse_RFID
     128  RawBuf
       1  RecvIndex
       4  RecvIndex
       1  RobotAction
     128  SendBuf
      10  U16ToU8
     224  UART2_ParseData
      76  UART2_ParseRawBuf
     340  UART2_SendADs
     280  UART2_SendCardUID
     284  UART2_SendInfo
     218  UART2_SendMap
     270  UART2_SendPathPoint
     246  UART2_SendRobotState
     102  Uart2_ParseFrame
      60  Uart2_RecvBuf
      26  Xor
       4  i
       1  lastRecv
       4  pGet
       4  pHead
       4  pPut
       4  pTail
     260  rfidBuf

 
   658 bytes in section .bss
    22 bytes in section .data
 2 626 bytes in section .text
 
 2 626 bytes of CODE memory
   680 bytes of DATA memory

Errors: none
Warnings: 9
