###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     25/Sep/2013  22:43:18 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\中国机器人大赛\robot_project\project\LPLD_Template\ap #
#                    p\LPLD_Template.c                                        #
#    Command line =  D:\中国机器人大赛\robot_project\project\LPLD_Template\ap #
#                    p\LPLD_Template.c -D IAR -D LPLD_K60 -lCN                #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\RAM\List\ -lB D:\中国机器人大赛\robot_project\project\ #
#                    LPLD_Template\iar\RAM\List\ -o                           #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\RAM\Obj\ --no_cse --no_unroll --no_inline              #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "D:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I D:\中国机器人大赛\robot_project\project\LPLD_T #
#                    emplate\iar\..\app\ -I D:\中国机器人大赛\robot_project\p #
#                    roject\LPLD_Template\iar\..\..\..\lib\common\ -I         #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\cpu\ -I D:\中国机器人大赛\robot_project\p #
#                    roject\LPLD_Template\iar\..\..\..\lib\cpu\headers\ -I    #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\adc16\ -I                         #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\enet\ -I                          #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\lptmr\ -I                         #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\mcg\ -I                           #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\pmc\ -I                           #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\rtc\ -I                           #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\uart\ -I                          #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\wdog\ -I                          #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\platforms\ -I                             #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\LPLD\ -I D:\中国机器人大赛\robot_project\ #
#                    project\LPLD_Template\iar\..\..\..\lib\LPLD\FatFs\ -I    #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\LPLD\USB\ -I                              #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\iar_config_files\ -Ol                     #
#    List file    =  D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\RAM\List\LPLD_Template.lst                             #
#    Object file  =  D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\RAM\Obj\LPLD_Template.o                                #
#                                                                             #
#                                                                             #
###############################################################################

D:\中国机器人大赛\robot_project\project\LPLD_Template\app\LPLD_Template.c
      1          /*
      2           * --------------"拉普兰德K60底层库"示例工程-----------------
      3           *
      4           * 测试硬件平台:  LPLD_K60 Card
      5           * 版权所有:      北京拉普兰德电子技术有限公司
      6           * 网络销售:      http://laplenden.taobao.com
      7           * 公司门户:      http://www.lpld.cn
      8           *
      9           * 说明:    本工程基于"拉普兰德K60底层库"开发，
     10           *          所有开源驱动代码均在"LPLD"文件夹下，调用说明见文档[#LPLD-003-N]
     11           *
     12           * 文件名:  LPLD_Template.c
     13           * 用途:    Kinetis通用工程模板，用户可根据此模板工程新建自己的工程
     14           *          本功能默认包含所有底层驱动，可以按需裁剪工程不需要的驱动，以减小生成文件
     15           *
     16           */
     17          
     18          #include "common.h"
     19          #include "HAL_MCG.h"
     20          #include "HAL_GPIO.h"
     21          #include "HAL_PIT.h"
     22          #include "HAL_FTM.h"
     23          #include "HAL_LPTMR.h"
     24          #include "HAL_UART.h"
     25          #include "function.h"
     26          #include "variable.h"

   \                                 In section .bss, align 4
   \   __absolute unsigned char r1[11]
   \                     `r1`:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
   \   __absolute unsigned char r2[7]
   \                     `r2`:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
   \   __absolute unsigned char r3[3]
   \                     `r3`:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \   __absolute unsigned char r4[3]
   \                     `r4`:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
   \   __absolute unsigned char keyCode
   \                     keyCode:
   \   00000000                      DS8 1
     27          #include "UP_UART2Parser.h"
     28          //声明中断函数
     29          void pit_isr0();
     30          void pit_isr1();
     31          void uart1_recv_isr(void);
     32          void uart2_recv_isr(void);
     33          void uart5_recv_isr(void);
     34          /********************************************************************/
     35          

   \                                 In section .bss, align 4
     36          static unsigned char tmpUID[4] ={0,0,0,0};
   \                     tmpUID:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
     37          static unsigned char resGetUID=0;
   \                     resGetUID:
   \   00000000                      DS8 1
     38          

   \                                 In section .text, align 2, keep-with-next
     39          void main (void)
     40          {
   \                     main:
   \   00000000   0xB580             PUSH     {R7,LR}
     41            init_gpio();
   \   00000002   0x.... 0x....      BL       init_gpio
     42            init_pwm();
   \   00000006   0x.... 0x....      BL       init_pwm
     43            LPLD_PIT_Init(PIT0, 5000, pit_isr0); //电机控制
   \   0000000A   0x.... 0x....      ADR.W    R2,pit_isr0
   \   0000000E   0xF241 0x3188      MOVW     R1,#+5000
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      BL       LPLD_PIT_Init
     44            LPLD_PIT_Init(PIT1, 100000, pit_isr1);  //计时
   \   00000018   0x.... 0x....      ADR.W    R2,pit_isr1
   \   0000001C   0x....             LDR.N    R1,??DataTable1  ;; 0x186a0
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0x.... 0x....      BL       LPLD_PIT_Init
     45            //计时器寄存器每减少50过1us
     46            LPLD_UART_Init(UART1, 19200);
   \   00000024   0xF44F 0x4196      MOV      R1,#+19200
   \   00000028   0x2001             MOVS     R0,#+1
   \   0000002A   0x.... 0x....      BL       LPLD_UART_Init
     47            LPLD_UART_Init(UART2, 19200);
   \   0000002E   0xF44F 0x4196      MOV      R1,#+19200
   \   00000032   0x2002             MOVS     R0,#+2
   \   00000034   0x.... 0x....      BL       LPLD_UART_Init
     48            LPLD_UART_Init(UART5, 19200);
   \   00000038   0xF44F 0x4196      MOV      R1,#+19200
   \   0000003C   0x2005             MOVS     R0,#+5
   \   0000003E   0x.... 0x....      BL       LPLD_UART_Init
     49            LPLD_UART_RIE_Enable(UART1, uart1_recv_isr);
   \   00000042   0x.... 0x....      ADR.W    R1,uart1_recv_isr
   \   00000046   0x2001             MOVS     R0,#+1
   \   00000048   0x.... 0x....      BL       LPLD_UART_RIE_Enable
     50            LPLD_UART_RIE_Enable(UART2, uart2_recv_isr);
   \   0000004C   0x.... 0x....      ADR.W    R1,uart2_recv_isr
   \   00000050   0x2002             MOVS     R0,#+2
   \   00000052   0x.... 0x....      BL       LPLD_UART_RIE_Enable
     51            LPLD_UART_RIE_Enable(UART5, uart5_recv_isr);
   \   00000056   0x.... 0x....      ADR.W    R1,uart5_recv_isr
   \   0000005A   0x2005             MOVS     R0,#+5
   \   0000005C   0x.... 0x....      BL       LPLD_UART_RIE_Enable
     52            //UP_LCD_Init();		//初始化LCD
     53            while(1)
     54            {
     55              scan_infrared();
   \                     ??main_0:
   \   00000060   0x.... 0x....      BL       scan_infrared
     56              ParseRFIDData();   //解析读卡器获得的数据
   \   00000064   0x.... 0x....      BL       ParseRFIDData
     57              if (1)
     58              {	
     59                  resGetUID =1;
   \   00000068   0x....             LDR.N    R0,??DataTable1_1
   \   0000006A   0x2101             MOVS     R1,#+1
   \   0000006C   0x7001             STRB     R1,[R0, #+0]
     60              	GetCardUID(tmpUID);		//获取RFID卡号
   \   0000006E   0x....             LDR.N    R0,??DataTable1_2
   \   00000070   0x.... 0x....      BL       GetCardUID
     61              }
     62              else
     63              {	resGetUID=0;
     64              	tmpUID[0]=0;
     65              	tmpUID[1]=0;
     66              	tmpUID[2]=0;
     67              	tmpUID[3]=0;
     68              	Card[0]	 =0;
     69              	Card[1]	 =0;
     70              	Card[2]	 =0;
     71              	Card[3]	 =0;
     72              }
     73              if ((resGetUID==1)&&(tmpUID[0]==0)&&(tmpUID[1]==0)&&(tmpUID[2]==0)&&(tmpUID[3]==0))
   \   00000074   0x....             LDR.N    R0,??DataTable1_1
   \   00000076   0x7800             LDRB     R0,[R0, #+0]
   \   00000078   0x2801             CMP      R0,#+1
   \   0000007A   0xD112             BNE.N    ??main_1
   \   0000007C   0x....             LDR.N    R0,??DataTable1_2
   \   0000007E   0x7800             LDRB     R0,[R0, #+0]
   \   00000080   0x2800             CMP      R0,#+0
   \   00000082   0xD10E             BNE.N    ??main_1
   \   00000084   0x....             LDR.N    R0,??DataTable1_2
   \   00000086   0x7840             LDRB     R0,[R0, #+1]
   \   00000088   0x2800             CMP      R0,#+0
   \   0000008A   0xD10A             BNE.N    ??main_1
   \   0000008C   0x....             LDR.N    R0,??DataTable1_2
   \   0000008E   0x7880             LDRB     R0,[R0, #+2]
   \   00000090   0x2800             CMP      R0,#+0
   \   00000092   0xD106             BNE.N    ??main_1
   \   00000094   0x....             LDR.N    R0,??DataTable1_2
   \   00000096   0x78C0             LDRB     R0,[R0, #+3]
   \   00000098   0x2800             CMP      R0,#+0
   \   0000009A   0xD102             BNE.N    ??main_1
     74              {	
     75                resGetUID=0;
   \   0000009C   0x....             LDR.N    R0,??DataTable1_1
   \   0000009E   0x2100             MOVS     R1,#+0
   \   000000A0   0x7001             STRB     R1,[R0, #+0]
     76              }
     77          
     78              if (resGetUID==1)
   \                     ??main_1:
   \   000000A2   0xE7DD             B.N      ??main_0
     79              {	
     80              	//printf("%x %x %x %x \n",tmpUID[0],tmpUID[1],tmpUID[2],tmpUID[3]);
     81              	//delayMs(2000);
     82              }    
     83            } 
     84          }
     85          /********************************************************************/

   \                                 In section .text, align 4, keep-with-next
     86          void pit_isr0()
     87          {
     88            
     89          }
   \                     pit_isr0:
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
     90          void pit_isr1()
     91          {
   \                     pit_isr1:
   \   00000000   0xB580             PUSH     {R7,LR}
     92            keyCode=scan_switch();
   \   00000002   0x.... 0x....      BL       scan_switch
   \   00000006   0x....             LDR.N    R1,??DataTable1_3
   \   00000008   0x7008             STRB     R0,[R1, #+0]
     93          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
     94          void uart1_recv_isr(void)
     95          {
   \                     uart1_recv_isr:
   \   00000000   0xB580             PUSH     {R7,LR}
     96            char data;
     97            data=LPLD_UART_GetChar(UART1);
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      BL       LPLD_UART_GetChar
     98            BufRFID(data);
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x.... 0x....      BL       BufRFID
     99          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
    100          void uart2_recv_isr(void)
    101          {
   \                     uart2_recv_isr:
   \   00000000   0xB580             PUSH     {R7,LR}
    102            char data;
    103            data=LPLD_UART_GetChar(UART2);
   \   00000002   0x2002             MOVS     R0,#+2
   \   00000004   0x.... 0x....      BL       LPLD_UART_GetChar
    104            UART2_ParseData(data);
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x.... 0x....      BL       UART2_ParseData
    105          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
    106          void uart5_recv_isr(void)
    107          {
   \                     uart5_recv_isr:
   \   00000000   0xB580             PUSH     {R7,LR}
    108            char data;
    109            data=LPLD_UART_GetChar(UART5);
   \   00000002   0x2005             MOVS     R0,#+5
   \   00000004   0x.... 0x....      BL       LPLD_UART_GetChar
    110            BufRFID(data);
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x.... 0x....      BL       BufRFID
    111          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x000186A0         DC32     0x186a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     resGetUID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     tmpUID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     keyCode

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  main
             8 -> GetCardUID
             8 -> LPLD_PIT_Init
             8 -> LPLD_UART_Init
             8 -> LPLD_UART_RIE_Enable
             8 -> ParseRFIDData
             8 -> init_gpio
             8 -> init_pwm
             8 -> scan_infrared
        0  pit_isr0
        8  pit_isr1
             8 -> scan_switch
        8  uart1_recv_isr
             8 -> BufRFID
             8 -> LPLD_UART_GetChar
        8  uart2_recv_isr
             8 -> LPLD_UART_GetChar
             8 -> UART2_ParseData
        8  uart5_recv_isr
             8 -> BufRFID
             8 -> LPLD_UART_GetChar


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       1  keyCode
     164  main
       2  pit_isr0
      12  pit_isr1
      12  r1
       8  r2
       4  r3
       4  r4
       1  resGetUID
       4  tmpUID
      16  uart1_recv_isr
      16  uart2_recv_isr
      16  uart5_recv_isr

 
  34 bytes in section .bss
 242 bytes in section .text
 
 242 bytes of CODE memory
  34 bytes of DATA memory

Errors: none
Warnings: none
