###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     25/Sep/2013  21:14:57 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\中国机器人大赛\robot_project\project\LPLD_Template\ap #
#                    p\function.c                                             #
#    Command line =  D:\中国机器人大赛\robot_project\project\LPLD_Template\ap #
#                    p\function.c -D IAR -D LPLD_K60 -lCN                     #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\RAM\List\ -lB D:\中国机器人大赛\robot_project\project\ #
#                    LPLD_Template\iar\RAM\List\ -o                           #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\RAM\Obj\ --no_cse --no_unroll --no_inline              #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "D:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I D:\中国机器人大赛\robot_project\project\LPLD_T #
#                    emplate\iar\..\app\ -I D:\中国机器人大赛\robot_project\p #
#                    roject\LPLD_Template\iar\..\..\..\lib\common\ -I         #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\cpu\ -I D:\中国机器人大赛\robot_project\p #
#                    roject\LPLD_Template\iar\..\..\..\lib\cpu\headers\ -I    #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\adc16\ -I                         #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\enet\ -I                          #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\lptmr\ -I                         #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\mcg\ -I                           #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\pmc\ -I                           #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\rtc\ -I                           #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\uart\ -I                          #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\drivers\wdog\ -I                          #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\platforms\ -I                             #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\LPLD\ -I D:\中国机器人大赛\robot_project\ #
#                    project\LPLD_Template\iar\..\..\..\lib\LPLD\FatFs\ -I    #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\LPLD\USB\ -I                              #
#                    D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\..\..\..\lib\iar_config_files\ -Ol                     #
#    List file    =  D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\RAM\List\function.lst                                  #
#    Object file  =  D:\中国机器人大赛\robot_project\project\LPLD_Template\ia #
#                    r\RAM\Obj\function.o                                     #
#                                                                             #
#                                                                             #
###############################################################################

D:\中国机器人大赛\robot_project\project\LPLD_Template\app\function.c
      1          #include "common.h"
      2          #include "HAL_GPIO.h"
      3          #include "HAL_FTM.h"
      4          #include "function.h"
      5          

   \                                 In section .text, align 2, keep-with-next
      6          void init_gpio()
      7          {
   \                     init_gpio:
   \   00000000   0xB580             PUSH     {R7,LR}
      8            //拨码开关
      9            LPLD_GPIO_Init(PTE, 0, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x9000             STR      R0,[SP, #+0]
   \   00000006   0x2301             MOVS     R3,#+1
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x2004             MOVS     R0,#+4
   \   0000000E   0x.... 0x....      BL       LPLD_GPIO_Init
     10            LPLD_GPIO_Init(PTE, 1, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x9000             STR      R0,[SP, #+0]
   \   00000016   0x2301             MOVS     R3,#+1
   \   00000018   0x2200             MOVS     R2,#+0
   \   0000001A   0x2101             MOVS     R1,#+1
   \   0000001C   0x2004             MOVS     R0,#+4
   \   0000001E   0x.... 0x....      BL       LPLD_GPIO_Init
     11            LPLD_GPIO_Init(PTE, 2, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x9000             STR      R0,[SP, #+0]
   \   00000026   0x2301             MOVS     R3,#+1
   \   00000028   0x2200             MOVS     R2,#+0
   \   0000002A   0x2102             MOVS     R1,#+2
   \   0000002C   0x2004             MOVS     R0,#+4
   \   0000002E   0x.... 0x....      BL       LPLD_GPIO_Init
     12            LPLD_GPIO_Init(PTE, 3, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x9000             STR      R0,[SP, #+0]
   \   00000036   0x2301             MOVS     R3,#+1
   \   00000038   0x2200             MOVS     R2,#+0
   \   0000003A   0x2103             MOVS     R1,#+3
   \   0000003C   0x2004             MOVS     R0,#+4
   \   0000003E   0x.... 0x....      BL       LPLD_GPIO_Init
     13            LPLD_GPIO_Init(PTE, 4, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x9000             STR      R0,[SP, #+0]
   \   00000046   0x2301             MOVS     R3,#+1
   \   00000048   0x2200             MOVS     R2,#+0
   \   0000004A   0x2104             MOVS     R1,#+4
   \   0000004C   0x2004             MOVS     R0,#+4
   \   0000004E   0x.... 0x....      BL       LPLD_GPIO_Init
     14            LPLD_GPIO_Init(PTE, 5, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000052   0x2000             MOVS     R0,#+0
   \   00000054   0x9000             STR      R0,[SP, #+0]
   \   00000056   0x2301             MOVS     R3,#+1
   \   00000058   0x2200             MOVS     R2,#+0
   \   0000005A   0x2105             MOVS     R1,#+5
   \   0000005C   0x2004             MOVS     R0,#+4
   \   0000005E   0x.... 0x....      BL       LPLD_GPIO_Init
     15          
     16            LPLD_GPIO_Init(PTE, 6, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x9000             STR      R0,[SP, #+0]
   \   00000066   0x2301             MOVS     R3,#+1
   \   00000068   0x2200             MOVS     R2,#+0
   \   0000006A   0x2106             MOVS     R1,#+6
   \   0000006C   0x2004             MOVS     R0,#+4
   \   0000006E   0x.... 0x....      BL       LPLD_GPIO_Init
     17          
     18            //核心板指示灯
     19            LPLD_GPIO_Init(PTA, 15, DIR_OUTPUT, OUTPUT_L, IRQC_DIS);
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x9000             STR      R0,[SP, #+0]
   \   00000076   0x2300             MOVS     R3,#+0
   \   00000078   0x2201             MOVS     R2,#+1
   \   0000007A   0x210F             MOVS     R1,#+15
   \   0000007C   0x2000             MOVS     R0,#+0
   \   0000007E   0x.... 0x....      BL       LPLD_GPIO_Init
     20            
     21            //蜂鸣器
     22            LPLD_GPIO_Init(PTB, 23, DIR_OUTPUT, OUTPUT_L, IRQC_DIS);
   \   00000082   0x2000             MOVS     R0,#+0
   \   00000084   0x9000             STR      R0,[SP, #+0]
   \   00000086   0x2300             MOVS     R3,#+0
   \   00000088   0x2201             MOVS     R2,#+1
   \   0000008A   0x2117             MOVS     R1,#+23
   \   0000008C   0x2001             MOVS     R0,#+1
   \   0000008E   0x.... 0x....      BL       LPLD_GPIO_Init
     23            
     24            //前排红外r1
     25            LPLD_GPIO_Init(PTB, 9, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x9000             STR      R0,[SP, #+0]
   \   00000096   0x2301             MOVS     R3,#+1
   \   00000098   0x2200             MOVS     R2,#+0
   \   0000009A   0x2109             MOVS     R1,#+9
   \   0000009C   0x2001             MOVS     R0,#+1
   \   0000009E   0x.... 0x....      BL       LPLD_GPIO_Init
     26            LPLD_GPIO_Init(PTB, 10, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000000A2   0x2000             MOVS     R0,#+0
   \   000000A4   0x9000             STR      R0,[SP, #+0]
   \   000000A6   0x2301             MOVS     R3,#+1
   \   000000A8   0x2200             MOVS     R2,#+0
   \   000000AA   0x210A             MOVS     R1,#+10
   \   000000AC   0x2001             MOVS     R0,#+1
   \   000000AE   0x.... 0x....      BL       LPLD_GPIO_Init
     27            LPLD_GPIO_Init(PTB, 11, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0x9000             STR      R0,[SP, #+0]
   \   000000B6   0x2301             MOVS     R3,#+1
   \   000000B8   0x2200             MOVS     R2,#+0
   \   000000BA   0x210B             MOVS     R1,#+11
   \   000000BC   0x2001             MOVS     R0,#+1
   \   000000BE   0x.... 0x....      BL       LPLD_GPIO_Init
     28            LPLD_GPIO_Init(PTB, 18, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000000C2   0x2000             MOVS     R0,#+0
   \   000000C4   0x9000             STR      R0,[SP, #+0]
   \   000000C6   0x2301             MOVS     R3,#+1
   \   000000C8   0x2200             MOVS     R2,#+0
   \   000000CA   0x2112             MOVS     R1,#+18
   \   000000CC   0x2001             MOVS     R0,#+1
   \   000000CE   0x.... 0x....      BL       LPLD_GPIO_Init
     29            LPLD_GPIO_Init(PTB, 19, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000000D2   0x2000             MOVS     R0,#+0
   \   000000D4   0x9000             STR      R0,[SP, #+0]
   \   000000D6   0x2301             MOVS     R3,#+1
   \   000000D8   0x2200             MOVS     R2,#+0
   \   000000DA   0x2113             MOVS     R1,#+19
   \   000000DC   0x2001             MOVS     R0,#+1
   \   000000DE   0x.... 0x....      BL       LPLD_GPIO_Init
     30            LPLD_GPIO_Init(PTB, 20, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000000E2   0x2000             MOVS     R0,#+0
   \   000000E4   0x9000             STR      R0,[SP, #+0]
   \   000000E6   0x2301             MOVS     R3,#+1
   \   000000E8   0x2200             MOVS     R2,#+0
   \   000000EA   0x2114             MOVS     R1,#+20
   \   000000EC   0x2001             MOVS     R0,#+1
   \   000000EE   0x.... 0x....      BL       LPLD_GPIO_Init
     31            LPLD_GPIO_Init(PTB, 21, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000000F2   0x2000             MOVS     R0,#+0
   \   000000F4   0x9000             STR      R0,[SP, #+0]
   \   000000F6   0x2301             MOVS     R3,#+1
   \   000000F8   0x2200             MOVS     R2,#+0
   \   000000FA   0x2115             MOVS     R1,#+21
   \   000000FC   0x2001             MOVS     R0,#+1
   \   000000FE   0x.... 0x....      BL       LPLD_GPIO_Init
     32            LPLD_GPIO_Init(PTB, 22, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000102   0x2000             MOVS     R0,#+0
   \   00000104   0x9000             STR      R0,[SP, #+0]
   \   00000106   0x2301             MOVS     R3,#+1
   \   00000108   0x2200             MOVS     R2,#+0
   \   0000010A   0x2116             MOVS     R1,#+22
   \   0000010C   0x2001             MOVS     R0,#+1
   \   0000010E   0x.... 0x....      BL       LPLD_GPIO_Init
     33            LPLD_GPIO_Init(PTC, 6, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000112   0x2000             MOVS     R0,#+0
   \   00000114   0x9000             STR      R0,[SP, #+0]
   \   00000116   0x2301             MOVS     R3,#+1
   \   00000118   0x2200             MOVS     R2,#+0
   \   0000011A   0x2106             MOVS     R1,#+6
   \   0000011C   0x2002             MOVS     R0,#+2
   \   0000011E   0x.... 0x....      BL       LPLD_GPIO_Init
     34            LPLD_GPIO_Init(PTC, 7, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000122   0x2000             MOVS     R0,#+0
   \   00000124   0x9000             STR      R0,[SP, #+0]
   \   00000126   0x2301             MOVS     R3,#+1
   \   00000128   0x2200             MOVS     R2,#+0
   \   0000012A   0x2107             MOVS     R1,#+7
   \   0000012C   0x2002             MOVS     R0,#+2
   \   0000012E   0x.... 0x....      BL       LPLD_GPIO_Init
     35            LPLD_GPIO_Init(PTC, 8, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000132   0x2000             MOVS     R0,#+0
   \   00000134   0x9000             STR      R0,[SP, #+0]
   \   00000136   0x2301             MOVS     R3,#+1
   \   00000138   0x2200             MOVS     R2,#+0
   \   0000013A   0x2108             MOVS     R1,#+8
   \   0000013C   0x2002             MOVS     R0,#+2
   \   0000013E   0x.... 0x....      BL       LPLD_GPIO_Init
     36            //后排红外r2
     37            LPLD_GPIO_Init(PTA, 4, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000142   0x2000             MOVS     R0,#+0
   \   00000144   0x9000             STR      R0,[SP, #+0]
   \   00000146   0x2301             MOVS     R3,#+1
   \   00000148   0x2200             MOVS     R2,#+0
   \   0000014A   0x2104             MOVS     R1,#+4
   \   0000014C   0x2000             MOVS     R0,#+0
   \   0000014E   0x.... 0x....      BL       LPLD_GPIO_Init
     38            LPLD_GPIO_Init(PTA, 5, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000152   0x2000             MOVS     R0,#+0
   \   00000154   0x9000             STR      R0,[SP, #+0]
   \   00000156   0x2301             MOVS     R3,#+1
   \   00000158   0x2200             MOVS     R2,#+0
   \   0000015A   0x2105             MOVS     R1,#+5
   \   0000015C   0x2000             MOVS     R0,#+0
   \   0000015E   0x.... 0x....      BL       LPLD_GPIO_Init
     39            LPLD_GPIO_Init(PTA, 12, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000162   0x2000             MOVS     R0,#+0
   \   00000164   0x9000             STR      R0,[SP, #+0]
   \   00000166   0x2301             MOVS     R3,#+1
   \   00000168   0x2200             MOVS     R2,#+0
   \   0000016A   0x210C             MOVS     R1,#+12
   \   0000016C   0x2000             MOVS     R0,#+0
   \   0000016E   0x.... 0x....      BL       LPLD_GPIO_Init
     40            LPLD_GPIO_Init(PTA, 13, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000172   0x2000             MOVS     R0,#+0
   \   00000174   0x9000             STR      R0,[SP, #+0]
   \   00000176   0x2301             MOVS     R3,#+1
   \   00000178   0x2200             MOVS     R2,#+0
   \   0000017A   0x210D             MOVS     R1,#+13
   \   0000017C   0x2000             MOVS     R0,#+0
   \   0000017E   0x.... 0x....      BL       LPLD_GPIO_Init
     41            LPLD_GPIO_Init(PTA, 14, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000182   0x2000             MOVS     R0,#+0
   \   00000184   0x9000             STR      R0,[SP, #+0]
   \   00000186   0x2301             MOVS     R3,#+1
   \   00000188   0x2200             MOVS     R2,#+0
   \   0000018A   0x210E             MOVS     R1,#+14
   \   0000018C   0x2000             MOVS     R0,#+0
   \   0000018E   0x.... 0x....      BL       LPLD_GPIO_Init
     42            LPLD_GPIO_Init(PTA, 16, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000192   0x2000             MOVS     R0,#+0
   \   00000194   0x9000             STR      R0,[SP, #+0]
   \   00000196   0x2301             MOVS     R3,#+1
   \   00000198   0x2200             MOVS     R2,#+0
   \   0000019A   0x2110             MOVS     R1,#+16
   \   0000019C   0x2000             MOVS     R0,#+0
   \   0000019E   0x.... 0x....      BL       LPLD_GPIO_Init
     43            LPLD_GPIO_Init(PTA, 17, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000001A2   0x2000             MOVS     R0,#+0
   \   000001A4   0x9000             STR      R0,[SP, #+0]
   \   000001A6   0x2301             MOVS     R3,#+1
   \   000001A8   0x2200             MOVS     R2,#+0
   \   000001AA   0x2111             MOVS     R1,#+17
   \   000001AC   0x2000             MOVS     R0,#+0
   \   000001AE   0x.... 0x....      BL       LPLD_GPIO_Init
     44            //左侧红外r3
     45            LPLD_GPIO_Init(PTE, 24, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000001B2   0x2000             MOVS     R0,#+0
   \   000001B4   0x9000             STR      R0,[SP, #+0]
   \   000001B6   0x2301             MOVS     R3,#+1
   \   000001B8   0x2200             MOVS     R2,#+0
   \   000001BA   0x2118             MOVS     R1,#+24
   \   000001BC   0x2004             MOVS     R0,#+4
   \   000001BE   0x.... 0x....      BL       LPLD_GPIO_Init
     46            LPLD_GPIO_Init(PTE, 25, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000001C2   0x2000             MOVS     R0,#+0
   \   000001C4   0x9000             STR      R0,[SP, #+0]
   \   000001C6   0x2301             MOVS     R3,#+1
   \   000001C8   0x2200             MOVS     R2,#+0
   \   000001CA   0x2119             MOVS     R1,#+25
   \   000001CC   0x2004             MOVS     R0,#+4
   \   000001CE   0x.... 0x....      BL       LPLD_GPIO_Init
     47            LPLD_GPIO_Init(PTE, 26, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000001D2   0x2000             MOVS     R0,#+0
   \   000001D4   0x9000             STR      R0,[SP, #+0]
   \   000001D6   0x2301             MOVS     R3,#+1
   \   000001D8   0x2200             MOVS     R2,#+0
   \   000001DA   0x211A             MOVS     R1,#+26
   \   000001DC   0x2004             MOVS     R0,#+4
   \   000001DE   0x.... 0x....      BL       LPLD_GPIO_Init
     48            //右侧红外r4
     49            LPLD_GPIO_Init(PTC, 9, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000001E2   0x2000             MOVS     R0,#+0
   \   000001E4   0x9000             STR      R0,[SP, #+0]
   \   000001E6   0x2301             MOVS     R3,#+1
   \   000001E8   0x2200             MOVS     R2,#+0
   \   000001EA   0x2109             MOVS     R1,#+9
   \   000001EC   0x2002             MOVS     R0,#+2
   \   000001EE   0x.... 0x....      BL       LPLD_GPIO_Init
     50            LPLD_GPIO_Init(PTC, 12, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000001F2   0x2000             MOVS     R0,#+0
   \   000001F4   0x9000             STR      R0,[SP, #+0]
   \   000001F6   0x2301             MOVS     R3,#+1
   \   000001F8   0x2200             MOVS     R2,#+0
   \   000001FA   0x210C             MOVS     R1,#+12
   \   000001FC   0x2002             MOVS     R0,#+2
   \   000001FE   0x.... 0x....      BL       LPLD_GPIO_Init
     51            LPLD_GPIO_Init(PTC, 13, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000202   0x2000             MOVS     R0,#+0
   \   00000204   0x9000             STR      R0,[SP, #+0]
   \   00000206   0x2301             MOVS     R3,#+1
   \   00000208   0x2200             MOVS     R2,#+0
   \   0000020A   0x210D             MOVS     R1,#+13
   \   0000020C   0x2002             MOVS     R0,#+2
   \   0000020E   0x.... 0x....      BL       LPLD_GPIO_Init
     52          }
   \   00000212   0xBD01             POP      {R0,PC}          ;; return
     53          

   \                                 In section .text, align 2, keep-with-next
     54          void init_pwm()
     55          {
   \                     init_pwm:
   \   00000000   0xB580             PUSH     {R7,LR}
     56            //设置FTM0模块PWM频率为10kHz
     57            LPLD_FTM0_PWM_Init(10000);
   \   00000002   0xF242 0x7010      MOVW     R0,#+10000
   \   00000006   0x.... 0x....      BL       LPLD_FTM0_PWM_Init
     58            LPLD_FTM0_PWM_Open(4, 0);
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x2004             MOVS     R0,#+4
   \   0000000E   0x.... 0x....      BL       LPLD_FTM0_PWM_Open
     59            LPLD_FTM0_PWM_Open(5, 0);
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x2005             MOVS     R0,#+5
   \   00000016   0x.... 0x....      BL       LPLD_FTM0_PWM_Open
     60            LPLD_FTM0_PWM_Open(6, 0);
   \   0000001A   0x2100             MOVS     R1,#+0
   \   0000001C   0x2006             MOVS     R0,#+6
   \   0000001E   0x.... 0x....      BL       LPLD_FTM0_PWM_Open
     61            LPLD_FTM0_PWM_Open(7, 0);
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0x2007             MOVS     R0,#+7
   \   00000026   0x.... 0x....      BL       LPLD_FTM0_PWM_Open
     62          }
   \   0000002A   0xBD01             POP      {R0,PC}          ;; return
     63          

   \                                 In section .text, align 2, keep-with-next
     64          void scan_infrared()
     65          {
   \                     scan_infrared:
   \   00000000   0xB580             PUSH     {R7,LR}
     66            r1[0]=LPLD_GPIO_Get_b(PTB, 9);
   \   00000002   0x2109             MOVS     R1,#+9
   \   00000004   0x2001             MOVS     R0,#+1
   \   00000006   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000000A   0x....             LDR.N    R1,??DataTable0
   \   0000000C   0x7008             STRB     R0,[R1, #+0]
     67            r1[1]=LPLD_GPIO_Get_b(PTB, 10);
   \   0000000E   0x210A             MOVS     R1,#+10
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000016   0x....             LDR.N    R1,??DataTable0
   \   00000018   0x7048             STRB     R0,[R1, #+1]
     68            r1[2]=LPLD_GPIO_Get_b(PTB, 11);
   \   0000001A   0x210B             MOVS     R1,#+11
   \   0000001C   0x2001             MOVS     R0,#+1
   \   0000001E   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000022   0x....             LDR.N    R1,??DataTable0
   \   00000024   0x7088             STRB     R0,[R1, #+2]
     69            r1[3]=LPLD_GPIO_Get_b(PTB, 18);
   \   00000026   0x2112             MOVS     R1,#+18
   \   00000028   0x2001             MOVS     R0,#+1
   \   0000002A   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000002E   0x....             LDR.N    R1,??DataTable0
   \   00000030   0x70C8             STRB     R0,[R1, #+3]
     70            r1[4]=LPLD_GPIO_Get_b(PTB, 19);
   \   00000032   0x2113             MOVS     R1,#+19
   \   00000034   0x2001             MOVS     R0,#+1
   \   00000036   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000003A   0x....             LDR.N    R1,??DataTable0
   \   0000003C   0x7108             STRB     R0,[R1, #+4]
     71            r1[5]=LPLD_GPIO_Get_b(PTB, 20);
   \   0000003E   0x2114             MOVS     R1,#+20
   \   00000040   0x2001             MOVS     R0,#+1
   \   00000042   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000046   0x....             LDR.N    R1,??DataTable0
   \   00000048   0x7148             STRB     R0,[R1, #+5]
     72            r1[6]=LPLD_GPIO_Get_b(PTB, 21);
   \   0000004A   0x2115             MOVS     R1,#+21
   \   0000004C   0x2001             MOVS     R0,#+1
   \   0000004E   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000052   0x....             LDR.N    R1,??DataTable0
   \   00000054   0x7188             STRB     R0,[R1, #+6]
     73            r1[7]=LPLD_GPIO_Get_b(PTB, 22);
   \   00000056   0x2116             MOVS     R1,#+22
   \   00000058   0x2001             MOVS     R0,#+1
   \   0000005A   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000005E   0x....             LDR.N    R1,??DataTable0
   \   00000060   0x71C8             STRB     R0,[R1, #+7]
     74            r1[8]=LPLD_GPIO_Get_b(PTC, 6);
   \   00000062   0x2106             MOVS     R1,#+6
   \   00000064   0x2002             MOVS     R0,#+2
   \   00000066   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000006A   0x....             LDR.N    R1,??DataTable0
   \   0000006C   0x7208             STRB     R0,[R1, #+8]
     75            r1[9]=LPLD_GPIO_Get_b(PTC, 7);
   \   0000006E   0x2107             MOVS     R1,#+7
   \   00000070   0x2002             MOVS     R0,#+2
   \   00000072   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000076   0x....             LDR.N    R1,??DataTable0
   \   00000078   0x7248             STRB     R0,[R1, #+9]
     76            r1[10]=LPLD_GPIO_Get_b(PTC, 8);
   \   0000007A   0x2108             MOVS     R1,#+8
   \   0000007C   0x2002             MOVS     R0,#+2
   \   0000007E   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000082   0x....             LDR.N    R1,??DataTable0
   \   00000084   0x7288             STRB     R0,[R1, #+10]
     77            
     78            r2[0]=LPLD_GPIO_Get_b(PTA, 4);
   \   00000086   0x2104             MOVS     R1,#+4
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000008E   0x....             LDR.N    R1,??DataTable0_1
   \   00000090   0x7008             STRB     R0,[R1, #+0]
     79            r2[1]=LPLD_GPIO_Get_b(PTA, 5);
   \   00000092   0x2105             MOVS     R1,#+5
   \   00000094   0x2000             MOVS     R0,#+0
   \   00000096   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000009A   0x....             LDR.N    R1,??DataTable0_1
   \   0000009C   0x7048             STRB     R0,[R1, #+1]
     80            r2[2]=LPLD_GPIO_Get_b(PTA, 12);
   \   0000009E   0x210C             MOVS     R1,#+12
   \   000000A0   0x2000             MOVS     R0,#+0
   \   000000A2   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   000000A6   0x....             LDR.N    R1,??DataTable0_1
   \   000000A8   0x7088             STRB     R0,[R1, #+2]
     81            r2[3]=LPLD_GPIO_Get_b(PTA, 13);
   \   000000AA   0x210D             MOVS     R1,#+13
   \   000000AC   0x2000             MOVS     R0,#+0
   \   000000AE   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   000000B2   0x....             LDR.N    R1,??DataTable0_1
   \   000000B4   0x70C8             STRB     R0,[R1, #+3]
     82            r2[4]=LPLD_GPIO_Get_b(PTA, 14);
   \   000000B6   0x210E             MOVS     R1,#+14
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   000000BE   0x....             LDR.N    R1,??DataTable0_1
   \   000000C0   0x7108             STRB     R0,[R1, #+4]
     83            r2[5]=LPLD_GPIO_Get_b(PTA, 16);
   \   000000C2   0x2110             MOVS     R1,#+16
   \   000000C4   0x2000             MOVS     R0,#+0
   \   000000C6   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   000000CA   0x....             LDR.N    R1,??DataTable0_1
   \   000000CC   0x7148             STRB     R0,[R1, #+5]
     84            r2[6]=LPLD_GPIO_Get_b(PTA, 17);
   \   000000CE   0x2111             MOVS     R1,#+17
   \   000000D0   0x2000             MOVS     R0,#+0
   \   000000D2   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   000000D6   0x....             LDR.N    R1,??DataTable0_1
   \   000000D8   0x7188             STRB     R0,[R1, #+6]
     85            
     86            r3[0]=LPLD_GPIO_Get_b(PTE, 24);
   \   000000DA   0x2118             MOVS     R1,#+24
   \   000000DC   0x2004             MOVS     R0,#+4
   \   000000DE   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   000000E2   0x....             LDR.N    R1,??DataTable0_2
   \   000000E4   0x7008             STRB     R0,[R1, #+0]
     87            r3[1]=LPLD_GPIO_Get_b(PTE, 25);
   \   000000E6   0x2119             MOVS     R1,#+25
   \   000000E8   0x2004             MOVS     R0,#+4
   \   000000EA   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   000000EE   0x....             LDR.N    R1,??DataTable0_2
   \   000000F0   0x7048             STRB     R0,[R1, #+1]
     88            r3[2]=LPLD_GPIO_Get_b(PTE, 26);
   \   000000F2   0x211A             MOVS     R1,#+26
   \   000000F4   0x2004             MOVS     R0,#+4
   \   000000F6   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   000000FA   0x....             LDR.N    R1,??DataTable0_2
   \   000000FC   0x7088             STRB     R0,[R1, #+2]
     89            
     90            r4[0]=LPLD_GPIO_Get_b(PTC, 9);
   \   000000FE   0x2109             MOVS     R1,#+9
   \   00000100   0x2002             MOVS     R0,#+2
   \   00000102   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000106   0x....             LDR.N    R1,??DataTable0_3
   \   00000108   0x7008             STRB     R0,[R1, #+0]
     91            r4[1]=LPLD_GPIO_Get_b(PTC, 12);
   \   0000010A   0x210C             MOVS     R1,#+12
   \   0000010C   0x2002             MOVS     R0,#+2
   \   0000010E   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000112   0x....             LDR.N    R1,??DataTable0_3
   \   00000114   0x7048             STRB     R0,[R1, #+1]
     92            r4[2]=LPLD_GPIO_Get_b(PTC, 13);
   \   00000116   0x210D             MOVS     R1,#+13
   \   00000118   0x2002             MOVS     R0,#+2
   \   0000011A   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000011E   0x....             LDR.N    R1,??DataTable0_3
   \   00000120   0x7088             STRB     R0,[R1, #+2]
     93          }
   \   00000122   0xBD01             POP      {R0,PC}          ;; return
     94          

   \                                 In section .text, align 2, keep-with-next
     95          void delayMs(uint16 t)  //粗略定时
     96          {
     97            uint32 i=t*20000;
   \                     delayMs:
   \   00000000   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000002   0xF644 0x6120      MOVW     R1,#+20000
   \   00000006   0x4348             MULS     R0,R1,R0
     98            while(i--);
   \                     ??delayMs_0:
   \   00000008   0x0001             MOVS     R1,R0
   \   0000000A   0x1E48             SUBS     R0,R1,#+1
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD1FB             BNE.N    ??delayMs_0
     99          }
   \   00000010   0x4770             BX       LR               ;; return
    100          

   \                                 In section .text, align 2, keep-with-next
    101          void delayUs(uint16 t)  //粗略定时
    102          {
    103            uint32 i=t*20;
   \                     delayUs:
   \   00000000   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000002   0x2114             MOVS     R1,#+20
   \   00000004   0x4348             MULS     R0,R1,R0
    104            while(i--);
   \                     ??delayUs_0:
   \   00000006   0x0001             MOVS     R1,R0
   \   00000008   0x1E48             SUBS     R0,R1,#+1
   \   0000000A   0x2900             CMP      R1,#+0
   \   0000000C   0xD1FB             BNE.N    ??delayUs_0
    105          }
   \   0000000E   0x4770             BX       LR               ;; return
    106          

   \                                 In section .text, align 2, keep-with-next
    107          unsigned char scan_switch()
    108          {
   \                     scan_switch:
   \   00000000   0xB510             PUSH     {R4,LR}
    109            unsigned char code=0;
   \   00000002   0x2400             MOVS     R4,#+0
    110            if(LPLD_GPIO_Get_b(PTE, 0)==0)code+=1;
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x2004             MOVS     R0,#+4
   \   00000008   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD100             BNE.N    ??scan_switch_0
   \   00000010   0x1C64             ADDS     R4,R4,#+1
    111            if(LPLD_GPIO_Get_b(PTE, 1)==0)code+=2;
   \                     ??scan_switch_0:
   \   00000012   0x2101             MOVS     R1,#+1
   \   00000014   0x2004             MOVS     R0,#+4
   \   00000016   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD100             BNE.N    ??scan_switch_1
   \   0000001E   0x1CA4             ADDS     R4,R4,#+2
    112            if(LPLD_GPIO_Get_b(PTE, 2)==0)code+=4;
   \                     ??scan_switch_1:
   \   00000020   0x2102             MOVS     R1,#+2
   \   00000022   0x2004             MOVS     R0,#+4
   \   00000024   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000028   0x2800             CMP      R0,#+0
   \   0000002A   0xD100             BNE.N    ??scan_switch_2
   \   0000002C   0x1D24             ADDS     R4,R4,#+4
    113            if(LPLD_GPIO_Get_b(PTE, 3)==0)code+=8;
   \                     ??scan_switch_2:
   \   0000002E   0x2103             MOVS     R1,#+3
   \   00000030   0x2004             MOVS     R0,#+4
   \   00000032   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD100             BNE.N    ??scan_switch_3
   \   0000003A   0x3408             ADDS     R4,R4,#+8
    114            if(LPLD_GPIO_Get_b(PTE, 4)==0)code+=16;
   \                     ??scan_switch_3:
   \   0000003C   0x2104             MOVS     R1,#+4
   \   0000003E   0x2004             MOVS     R0,#+4
   \   00000040   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD100             BNE.N    ??scan_switch_4
   \   00000048   0x3410             ADDS     R4,R4,#+16
    115            if(LPLD_GPIO_Get_b(PTE, 5)==0)code+=32;
   \                     ??scan_switch_4:
   \   0000004A   0x2105             MOVS     R1,#+5
   \   0000004C   0x2004             MOVS     R0,#+4
   \   0000004E   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xD100             BNE.N    ??scan_switch_5
   \   00000056   0x3420             ADDS     R4,R4,#+32
    116            if(LPLD_GPIO_Get_b(PTE, 6)==0)code+=64;
   \                     ??scan_switch_5:
   \   00000058   0x2106             MOVS     R1,#+6
   \   0000005A   0x2004             MOVS     R0,#+4
   \   0000005C   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000060   0x2800             CMP      R0,#+0
   \   00000062   0xD100             BNE.N    ??scan_switch_6
   \   00000064   0x3440             ADDS     R4,R4,#+64
    117            return code;
   \                     ??scan_switch_6:
   \   00000066   0x0020             MOVS     R0,R4
   \   00000068   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006A   0xBD10             POP      {R4,PC}          ;; return
    118          }
    119          

   \                                 In section .text, align 2, keep-with-next
    120          void yesbeep()
    121          {
   \                     yesbeep:
   \   00000000   0xB580             PUSH     {R7,LR}
    122            LPLD_GPIO_Set_b(PTB, 23, OUTPUT_H);
   \   00000002   0x2201             MOVS     R2,#+1
   \   00000004   0x2117             MOVS     R1,#+23
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0x.... 0x....      BL       LPLD_GPIO_Set_b
    123          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    124          

   \                                 In section .text, align 2, keep-with-next
    125          void nobeep()
    126          {
   \                     nobeep:
   \   00000000   0xB580             PUSH     {R7,LR}
    127            LPLD_GPIO_Set_b(PTB, 23, OUTPUT_L);
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x2117             MOVS     R1,#+23
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0x.... 0x....      BL       LPLD_GPIO_Set_b
    128          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     `r1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x........         DC32     `r2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x........         DC32     `r3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_3:
   \   00000000   0x........         DC32     `r4`

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  delayMs
        0  delayUs
        8  init_gpio
             8 -> LPLD_GPIO_Init
        8  init_pwm
             8 -> LPLD_FTM0_PWM_Init
             8 -> LPLD_FTM0_PWM_Open
        8  nobeep
             8 -> LPLD_GPIO_Set_b
        8  scan_infrared
             8 -> LPLD_GPIO_Get_b
        8  scan_switch
             8 -> LPLD_GPIO_Get_b
        8  yesbeep
             8 -> LPLD_GPIO_Set_b


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_2
       4  ??DataTable0_3
      18  delayMs
      16  delayUs
     532  init_gpio
      44  init_pwm
      14  nobeep
     292  scan_infrared
     108  scan_switch
      14  yesbeep

 
 1 054 bytes in section .text
 
 1 054 bytes of CODE memory

Errors: none
Warnings: 1
