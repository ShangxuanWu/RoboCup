###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     25/Jul/2014  21:09:31 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\robot\project\robot_car_com\app\car.c                 #
#    Command line =  D:\robot\project\robot_car_com\app\car.c -D IAR -D       #
#                    LPLD_K60 -lCN D:\robot\project\robot_car_com\iar\FLASH\L #
#                    ist\ -lB D:\robot\project\robot_car_com\iar\FLASH\List\  #
#                    -o D:\robot\project\robot_car_com\iar\FLASH\Obj\         #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=None            #
#                    --dlib_config D:\IAR\arm\INC\c\DLib_Config_Normal.h -I   #
#                    D:\robot\project\robot_car_com\iar\..\app\ -I            #
#                    D:\robot\project\robot_car_com\iar\..\..\..\lib\common\  #
#                    -I D:\robot\project\robot_car_com\iar\..\..\..\lib\cpu\  #
#                    -I D:\robot\project\robot_car_com\iar\..\..\..\lib\cpu\h #
#                    eaders\ -I D:\robot\project\robot_car_com\iar\..\..\..\l #
#                    ib\drivers\adc16\ -I D:\robot\project\robot_car_com\iar\ #
#                    ..\..\..\lib\drivers\enet\ -I                            #
#                    D:\robot\project\robot_car_com\iar\..\..\..\lib\drivers\ #
#                    lptmr\ -I D:\robot\project\robot_car_com\iar\..\..\..\li #
#                    b\drivers\mcg\ -I D:\robot\project\robot_car_com\iar\..\ #
#                    ..\..\lib\drivers\pmc\ -I D:\robot\project\robot_car_com #
#                    \iar\..\..\..\lib\drivers\rtc\ -I                        #
#                    D:\robot\project\robot_car_com\iar\..\..\..\lib\drivers\ #
#                    uart\ -I D:\robot\project\robot_car_com\iar\..\..\..\lib #
#                    \drivers\wdog\ -I D:\robot\project\robot_car_com\iar\..\ #
#                    ..\..\lib\platforms\ -I D:\robot\project\robot_car_com\i #
#                    ar\..\..\..\lib\LPLD\ -I D:\robot\project\robot_car_com\ #
#                    iar\..\..\..\lib\LPLD\FatFs\ -I                          #
#                    D:\robot\project\robot_car_com\iar\..\..\..\lib\LPLD\USB #
#                    \ -I D:\robot\project\robot_car_com\iar\..\..\..\lib\iar #
#                    _config_files\ -Ol                                       #
#    List file    =  D:\robot\project\robot_car_com\iar\FLASH\List\car.lst    #
#    Object file  =  D:\robot\project\robot_car_com\iar\FLASH\Obj\car.o       #
#                                                                             #
#                                                                             #
###############################################################################

D:\robot\project\robot_car_com\app\car.c
      1          #include "car.h"
      2          #include "infrare.h"
      3          #include "motor.h"

   \                                 In section .data, align 4
      4          int car_direction=1; //1 zigbee   0 ba
   \                     car_direction:
   \   00000000   0x00000001         DC32 1

   \                                 In section .bss, align 4
      5          int car_speed=0;
   \                     car_speed:
   \   00000000                      DS8 4
      6          
      7          

   \                                 In section .bss, align 4
      8          unsigned char *car_front_infrare;
   \                     car_front_infrare:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      9          unsigned char *car_left_infrare;
   \                     car_left_infrare:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     10          unsigned char *car_right_infrare;
   \                     car_right_infrare:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     11          unsigned char *car_tail_infrare;
   \                     car_tail_infrare:
   \   00000000                      DS8 4
     12          

   \                                 In section .text, align 2, keep-with-next
     13          void car_init()
     14          {
   \                     car_init:
   \   00000000   0xB580             PUSH     {R7,LR}
     15          	car_speed = 0;
   \   00000002   0x....             LDR.N    R0,??DataTable3
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x6001             STR      R1,[R0, #+0]
     16          	car_direction =1;
   \   00000008   0x....             LDR.N    R0,??DataTable3_1
   \   0000000A   0x2101             MOVS     R1,#+1
   \   0000000C   0x6001             STR      R1,[R0, #+0]
     17          	car_front_infrare = get_infrare(FRONT);
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      BL       get_infrare
   \   00000014   0x....             LDR.N    R1,??DataTable3_2
   \   00000016   0x6008             STR      R0,[R1, #+0]
     18          	car_left_infrare = get_infrare(LEFT);
   \   00000018   0x2002             MOVS     R0,#+2
   \   0000001A   0x.... 0x....      BL       get_infrare
   \   0000001E   0x....             LDR.N    R1,??DataTable3_3
   \   00000020   0x6008             STR      R0,[R1, #+0]
     19          	car_right_infrare = get_infrare(RIGHT);
   \   00000022   0x2001             MOVS     R0,#+1
   \   00000024   0x.... 0x....      BL       get_infrare
   \   00000028   0x....             LDR.N    R1,??DataTable3_4
   \   0000002A   0x6008             STR      R0,[R1, #+0]
     20          	car_tail_infrare = get_infrare(TAIL);
   \   0000002C   0x2003             MOVS     R0,#+3
   \   0000002E   0x.... 0x....      BL       get_infrare
   \   00000032   0x....             LDR.N    R1,??DataTable3_5
   \   00000034   0x6008             STR      R0,[R1, #+0]
     21          }
   \   00000036   0xBD01             POP      {R0,PC}          ;; return
     22          
     23          

   \                                 In section .text, align 2, keep-with-next
     24          void car_change_direction() //改变方向时映射传感器的位置
     25          {
   \                     car_change_direction:
   \   00000000   0xB580             PUSH     {R7,LR}
     26            //TODO：两侧红外的顺序没有映射，还有前后红外的左右方向不对
     27            car_direction=1-car_direction;
   \   00000002   0x....             LDR.N    R0,??DataTable3_1
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF1D0 0x0001      RSBS     R0,R0,#+1
   \   0000000A   0x....             LDR.N    R1,??DataTable3_1
   \   0000000C   0x6008             STR      R0,[R1, #+0]
     28            car_speed=-car_speed;
   \   0000000E   0x....             LDR.N    R0,??DataTable3
   \   00000010   0x....             LDR.N    R1,??DataTable3
   \   00000012   0x6809             LDR      R1,[R1, #+0]
   \   00000014   0x4249             RSBS     R1,R1,#+0
   \   00000016   0x6001             STR      R1,[R0, #+0]
     29            if(car_direction)
   \   00000018   0x....             LDR.N    R0,??DataTable3_1
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD014             BEQ.N    ??car_change_direction_0
     30            {
     31              car_front_infrare = get_infrare(FRONT);
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      BL       get_infrare
   \   00000026   0x....             LDR.N    R1,??DataTable3_2
   \   00000028   0x6008             STR      R0,[R1, #+0]
     32              car_left_infrare  = get_infrare(LEFT);
   \   0000002A   0x2002             MOVS     R0,#+2
   \   0000002C   0x.... 0x....      BL       get_infrare
   \   00000030   0x....             LDR.N    R1,??DataTable3_3
   \   00000032   0x6008             STR      R0,[R1, #+0]
     33              car_right_infrare = get_infrare(RIGHT);
   \   00000034   0x2001             MOVS     R0,#+1
   \   00000036   0x.... 0x....      BL       get_infrare
   \   0000003A   0x....             LDR.N    R1,??DataTable3_4
   \   0000003C   0x6008             STR      R0,[R1, #+0]
     34              car_tail_infrare  = get_infrare(TAIL);
   \   0000003E   0x2003             MOVS     R0,#+3
   \   00000040   0x.... 0x....      BL       get_infrare
   \   00000044   0x....             LDR.N    R1,??DataTable3_5
   \   00000046   0x6008             STR      R0,[R1, #+0]
   \   00000048   0xE013             B.N      ??car_change_direction_1
     35            }
     36            else
     37            {
     38              car_front_infrare = get_infrare(TAIL);
   \                     ??car_change_direction_0:
   \   0000004A   0x2003             MOVS     R0,#+3
   \   0000004C   0x.... 0x....      BL       get_infrare
   \   00000050   0x....             LDR.N    R1,??DataTable3_2
   \   00000052   0x6008             STR      R0,[R1, #+0]
     39              car_tail_infrare  = get_infrare(FRONT);
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0x.... 0x....      BL       get_infrare
   \   0000005A   0x....             LDR.N    R1,??DataTable3_5
   \   0000005C   0x6008             STR      R0,[R1, #+0]
     40              car_left_infrare  = get_infrare(LEFT);
   \   0000005E   0x2002             MOVS     R0,#+2
   \   00000060   0x.... 0x....      BL       get_infrare
   \   00000064   0x....             LDR.N    R1,??DataTable3_3
   \   00000066   0x6008             STR      R0,[R1, #+0]
     41              car_right_infrare = get_infrare(RIGHT);
   \   00000068   0x2001             MOVS     R0,#+1
   \   0000006A   0x.... 0x....      BL       get_infrare
   \   0000006E   0x....             LDR.N    R1,??DataTable3_4
   \   00000070   0x6008             STR      R0,[R1, #+0]
     42            }
     43          }
   \                     ??car_change_direction_1:
   \   00000072   0xBD01             POP      {R0,PC}          ;; return
     44          

   \                                 In section .text, align 2, keep-with-next
     45          void car_set_right_speed(int speed) //设置车子当前方向的右侧轮子速度 负数为反转
     46          {
   \                     car_set_right_speed:
   \   00000000   0xB580             PUSH     {R7,LR}
     47            
     48            if(car_direction)
   \   00000002   0x....             LDR.N    R1,??DataTable3_1
   \   00000004   0x6809             LDR      R1,[R1, #+0]
   \   00000006   0x2900             CMP      R1,#+0
   \   00000008   0xD002             BEQ.N    ??car_set_right_speed_0
     49            {
     50              motor_set_right_speed(speed);
   \   0000000A   0x.... 0x....      BL       motor_set_right_speed
   \   0000000E   0xE001             B.N      ??car_set_right_speed_1
     51            }
     52            else
     53            {
     54              motor_set_left_speed(speed);
   \                     ??car_set_right_speed_0:
   \   00000010   0x.... 0x....      BL       motor_set_left_speed
     55            }
     56          }
   \                     ??car_set_right_speed_1:
   \   00000014   0xBD01             POP      {R0,PC}          ;; return
     57          

   \                                 In section .text, align 2, keep-with-next
     58          void car_set_left_speed(int speed) //设置车子当前方向的左侧轮子速度 负数为反转
     59          {
   \                     car_set_left_speed:
   \   00000000   0xB580             PUSH     {R7,LR}
     60            if(car_direction)
   \   00000002   0x....             LDR.N    R1,??DataTable3_1
   \   00000004   0x6809             LDR      R1,[R1, #+0]
   \   00000006   0x2900             CMP      R1,#+0
   \   00000008   0xD002             BEQ.N    ??car_set_left_speed_0
     61            {
     62              motor_set_left_speed(speed);
   \   0000000A   0x.... 0x....      BL       motor_set_left_speed
   \   0000000E   0xE001             B.N      ??car_set_left_speed_1
     63            }
     64            else
     65            {
     66              motor_set_right_speed(speed);
   \                     ??car_set_left_speed_0:
   \   00000010   0x.... 0x....      BL       motor_set_right_speed
     67            }
     68          }
   \                     ??car_set_left_speed_1:
   \   00000014   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     car_speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     car_direction

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     car_front_infrare

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     car_left_infrare

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     car_right_infrare

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     car_tail_infrare

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  car_change_direction
             8 -> get_infrare
        8  car_init
             8 -> get_infrare
        8  car_set_left_speed
             8 -> motor_set_left_speed
             8 -> motor_set_right_speed
        8  car_set_right_speed
             8 -> motor_set_left_speed
             8 -> motor_set_right_speed


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
     116  car_change_direction
       4  car_direction
       4  car_front_infrare
      56  car_init
       4  car_left_infrare
       4  car_right_infrare
      22  car_set_left_speed
      22  car_set_right_speed
       4  car_speed
       4  car_tail_infrare

 
  20 bytes in section .bss
   4 bytes in section .data
 240 bytes in section .text
 
 240 bytes of CODE memory
  24 bytes of DATA memory

Errors: none
Warnings: none
