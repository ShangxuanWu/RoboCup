###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     06/Jul/2014  13:46:19 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  F:\robot _init\robot\project\LPLD_Template\app\function. #
#                    c                                                        #
#    Command line =  "F:\robot _init\robot\project\LPLD_Template\app\function #
#                    .c" -D IAR -D LPLD_K60 -lCN "F:\robot                    #
#                    _init\robot\project\LPLD_Template\iar\FLASH\List\" -lB   #
#                    "F:\robot _init\robot\project\LPLD_Template\iar\FLASH\Li #
#                    st\" -o "F:\robot _init\robot\project\LPLD_Template\iar\ #
#                    FLASH\Obj\" --no_cse --no_unroll --no_inline             #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "D:\IAR Systems\Embedded     #
#                    Workbench 6.4\arm\INC\c\DLib_Config_Normal.h" -I         #
#                    "F:\robot _init\robot\project\LPLD_Template\iar\..\app\" #
#                     -I "F:\robot _init\robot\project\LPLD_Template\iar\..\. #
#                    .\..\lib\common\" -I "F:\robot                           #
#                    _init\robot\project\LPLD_Template\iar\..\..\..\lib\cpu\" #
#                     -I "F:\robot _init\robot\project\LPLD_Template\iar\..\. #
#                    .\..\lib\cpu\headers\" -I "F:\robot                      #
#                    _init\robot\project\LPLD_Template\iar\..\..\..\lib\drive #
#                    rs\adc16\" -I "F:\robot _init\robot\project\LPLD_Templat #
#                    e\iar\..\..\..\lib\drivers\enet\" -I "F:\robot           #
#                    _init\robot\project\LPLD_Template\iar\..\..\..\lib\drive #
#                    rs\lptmr\" -I "F:\robot _init\robot\project\LPLD_Templat #
#                    e\iar\..\..\..\lib\drivers\mcg\" -I "F:\robot            #
#                    _init\robot\project\LPLD_Template\iar\..\..\..\lib\drive #
#                    rs\pmc\" -I "F:\robot _init\robot\project\LPLD_Template\ #
#                    iar\..\..\..\lib\drivers\rtc\" -I "F:\robot              #
#                    _init\robot\project\LPLD_Template\iar\..\..\..\lib\drive #
#                    rs\uart\" -I "F:\robot _init\robot\project\LPLD_Template #
#                    \iar\..\..\..\lib\drivers\wdog\" -I "F:\robot            #
#                    _init\robot\project\LPLD_Template\iar\..\..\..\lib\platf #
#                    orms\" -I "F:\robot _init\robot\project\LPLD_Template\ia #
#                    r\..\..\..\lib\LPLD\" -I "F:\robot                       #
#                    _init\robot\project\LPLD_Template\iar\..\..\..\lib\LPLD\ #
#                    FatFs\" -I "F:\robot _init\robot\project\LPLD_Template\i #
#                    ar\..\..\..\lib\LPLD\USB\" -I "F:\robot                  #
#                    _init\robot\project\LPLD_Template\iar\..\..\..\lib\iar_c #
#                    onfig_files\" -Ol                                        #
#    List file    =  F:\robot _init\robot\project\LPLD_Template\iar\FLASH\Lis #
#                    t\function.lst                                           #
#    Object file  =  F:\robot _init\robot\project\LPLD_Template\iar\FLASH\Obj #
#                    \function.o                                              #
#                                                                             #
#                                                                             #
###############################################################################

F:\robot _init\robot\project\LPLD_Template\app\function.c
      1          #include "common.h"
      2          #include "HAL_GPIO.h"
      3          #include "HAL_FTM.h"
      4          #include "function.h"
      5          #include "config.h"
      6          

   \                                 In section .text, align 2, keep-with-next
      7          void init_gpio()
      8          {
   \                     init_gpio:
   \   00000000   0xB580             PUSH     {R7,LR}
      9            //拨码开关
     10            LPLD_GPIO_Init(PTE, 0, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x9000             STR      R0,[SP, #+0]
   \   00000006   0x2301             MOVS     R3,#+1
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x2004             MOVS     R0,#+4
   \   0000000E   0x.... 0x....      BL       LPLD_GPIO_Init
     11            LPLD_GPIO_Init(PTE, 1, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x9000             STR      R0,[SP, #+0]
   \   00000016   0x2301             MOVS     R3,#+1
   \   00000018   0x2200             MOVS     R2,#+0
   \   0000001A   0x2101             MOVS     R1,#+1
   \   0000001C   0x2004             MOVS     R0,#+4
   \   0000001E   0x.... 0x....      BL       LPLD_GPIO_Init
     12            LPLD_GPIO_Init(PTE, 2, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x9000             STR      R0,[SP, #+0]
   \   00000026   0x2301             MOVS     R3,#+1
   \   00000028   0x2200             MOVS     R2,#+0
   \   0000002A   0x2102             MOVS     R1,#+2
   \   0000002C   0x2004             MOVS     R0,#+4
   \   0000002E   0x.... 0x....      BL       LPLD_GPIO_Init
     13            LPLD_GPIO_Init(PTE, 3, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x9000             STR      R0,[SP, #+0]
   \   00000036   0x2301             MOVS     R3,#+1
   \   00000038   0x2200             MOVS     R2,#+0
   \   0000003A   0x2103             MOVS     R1,#+3
   \   0000003C   0x2004             MOVS     R0,#+4
   \   0000003E   0x.... 0x....      BL       LPLD_GPIO_Init
     14            LPLD_GPIO_Init(PTE, 4, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x9000             STR      R0,[SP, #+0]
   \   00000046   0x2301             MOVS     R3,#+1
   \   00000048   0x2200             MOVS     R2,#+0
   \   0000004A   0x2104             MOVS     R1,#+4
   \   0000004C   0x2004             MOVS     R0,#+4
   \   0000004E   0x.... 0x....      BL       LPLD_GPIO_Init
     15            LPLD_GPIO_Init(PTE, 5, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000052   0x2000             MOVS     R0,#+0
   \   00000054   0x9000             STR      R0,[SP, #+0]
   \   00000056   0x2301             MOVS     R3,#+1
   \   00000058   0x2200             MOVS     R2,#+0
   \   0000005A   0x2105             MOVS     R1,#+5
   \   0000005C   0x2004             MOVS     R0,#+4
   \   0000005E   0x.... 0x....      BL       LPLD_GPIO_Init
     16            LPLD_GPIO_Init(PTE, 6, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x9000             STR      R0,[SP, #+0]
   \   00000066   0x2301             MOVS     R3,#+1
   \   00000068   0x2200             MOVS     R2,#+0
   \   0000006A   0x2106             MOVS     R1,#+6
   \   0000006C   0x2004             MOVS     R0,#+4
   \   0000006E   0x.... 0x....      BL       LPLD_GPIO_Init
     17          
     18            //核心板指示灯
     19            LPLD_GPIO_Init(PTA, 15, DIR_OUTPUT, OUTPUT_L, IRQC_DIS);
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x9000             STR      R0,[SP, #+0]
   \   00000076   0x2300             MOVS     R3,#+0
   \   00000078   0x2201             MOVS     R2,#+1
   \   0000007A   0x210F             MOVS     R1,#+15
   \   0000007C   0x2000             MOVS     R0,#+0
   \   0000007E   0x.... 0x....      BL       LPLD_GPIO_Init
     20            
     21            //蜂鸣器
     22            LPLD_GPIO_Init(PTB, 23, DIR_OUTPUT, OUTPUT_L, IRQC_DIS);
   \   00000082   0x2000             MOVS     R0,#+0
   \   00000084   0x9000             STR      R0,[SP, #+0]
   \   00000086   0x2300             MOVS     R3,#+0
   \   00000088   0x2201             MOVS     R2,#+1
   \   0000008A   0x2117             MOVS     R1,#+23
   \   0000008C   0x2001             MOVS     R0,#+1
   \   0000008E   0x.... 0x....      BL       LPLD_GPIO_Init
     23            
     24            //前排红外r1
     25            LPLD_GPIO_Init(PTB, 9, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x9000             STR      R0,[SP, #+0]
   \   00000096   0x2301             MOVS     R3,#+1
   \   00000098   0x2200             MOVS     R2,#+0
   \   0000009A   0x2109             MOVS     R1,#+9
   \   0000009C   0x2001             MOVS     R0,#+1
   \   0000009E   0x.... 0x....      BL       LPLD_GPIO_Init
     26            LPLD_GPIO_Init(PTB, 10, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000000A2   0x2000             MOVS     R0,#+0
   \   000000A4   0x9000             STR      R0,[SP, #+0]
   \   000000A6   0x2301             MOVS     R3,#+1
   \   000000A8   0x2200             MOVS     R2,#+0
   \   000000AA   0x210A             MOVS     R1,#+10
   \   000000AC   0x2001             MOVS     R0,#+1
   \   000000AE   0x.... 0x....      BL       LPLD_GPIO_Init
     27            LPLD_GPIO_Init(PTB, 11, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0x9000             STR      R0,[SP, #+0]
   \   000000B6   0x2301             MOVS     R3,#+1
   \   000000B8   0x2200             MOVS     R2,#+0
   \   000000BA   0x210B             MOVS     R1,#+11
   \   000000BC   0x2001             MOVS     R0,#+1
   \   000000BE   0x.... 0x....      BL       LPLD_GPIO_Init
     28            LPLD_GPIO_Init(PTB, 18, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000000C2   0x2000             MOVS     R0,#+0
   \   000000C4   0x9000             STR      R0,[SP, #+0]
   \   000000C6   0x2301             MOVS     R3,#+1
   \   000000C8   0x2200             MOVS     R2,#+0
   \   000000CA   0x2112             MOVS     R1,#+18
   \   000000CC   0x2001             MOVS     R0,#+1
   \   000000CE   0x.... 0x....      BL       LPLD_GPIO_Init
     29            LPLD_GPIO_Init(PTB, 19, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000000D2   0x2000             MOVS     R0,#+0
   \   000000D4   0x9000             STR      R0,[SP, #+0]
   \   000000D6   0x2301             MOVS     R3,#+1
   \   000000D8   0x2200             MOVS     R2,#+0
   \   000000DA   0x2113             MOVS     R1,#+19
   \   000000DC   0x2001             MOVS     R0,#+1
   \   000000DE   0x.... 0x....      BL       LPLD_GPIO_Init
     30            LPLD_GPIO_Init(PTB, 20, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000000E2   0x2000             MOVS     R0,#+0
   \   000000E4   0x9000             STR      R0,[SP, #+0]
   \   000000E6   0x2301             MOVS     R3,#+1
   \   000000E8   0x2200             MOVS     R2,#+0
   \   000000EA   0x2114             MOVS     R1,#+20
   \   000000EC   0x2001             MOVS     R0,#+1
   \   000000EE   0x.... 0x....      BL       LPLD_GPIO_Init
     31            LPLD_GPIO_Init(PTB, 21, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000000F2   0x2000             MOVS     R0,#+0
   \   000000F4   0x9000             STR      R0,[SP, #+0]
   \   000000F6   0x2301             MOVS     R3,#+1
   \   000000F8   0x2200             MOVS     R2,#+0
   \   000000FA   0x2115             MOVS     R1,#+21
   \   000000FC   0x2001             MOVS     R0,#+1
   \   000000FE   0x.... 0x....      BL       LPLD_GPIO_Init
     32            LPLD_GPIO_Init(PTB, 22, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000102   0x2000             MOVS     R0,#+0
   \   00000104   0x9000             STR      R0,[SP, #+0]
   \   00000106   0x2301             MOVS     R3,#+1
   \   00000108   0x2200             MOVS     R2,#+0
   \   0000010A   0x2116             MOVS     R1,#+22
   \   0000010C   0x2001             MOVS     R0,#+1
   \   0000010E   0x.... 0x....      BL       LPLD_GPIO_Init
     33            LPLD_GPIO_Init(PTC, 6, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000112   0x2000             MOVS     R0,#+0
   \   00000114   0x9000             STR      R0,[SP, #+0]
   \   00000116   0x2301             MOVS     R3,#+1
   \   00000118   0x2200             MOVS     R2,#+0
   \   0000011A   0x2106             MOVS     R1,#+6
   \   0000011C   0x2002             MOVS     R0,#+2
   \   0000011E   0x.... 0x....      BL       LPLD_GPIO_Init
     34            LPLD_GPIO_Init(PTC, 7, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000122   0x2000             MOVS     R0,#+0
   \   00000124   0x9000             STR      R0,[SP, #+0]
   \   00000126   0x2301             MOVS     R3,#+1
   \   00000128   0x2200             MOVS     R2,#+0
   \   0000012A   0x2107             MOVS     R1,#+7
   \   0000012C   0x2002             MOVS     R0,#+2
   \   0000012E   0x.... 0x....      BL       LPLD_GPIO_Init
     35            LPLD_GPIO_Init(PTC, 8, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000132   0x2000             MOVS     R0,#+0
   \   00000134   0x9000             STR      R0,[SP, #+0]
   \   00000136   0x2301             MOVS     R3,#+1
   \   00000138   0x2200             MOVS     R2,#+0
   \   0000013A   0x2108             MOVS     R1,#+8
   \   0000013C   0x2002             MOVS     R0,#+2
   \   0000013E   0x.... 0x....      BL       LPLD_GPIO_Init
     36            //后排红外r2
     37            LPLD_GPIO_Init(PTD, 0, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000142   0x2000             MOVS     R0,#+0
   \   00000144   0x9000             STR      R0,[SP, #+0]
   \   00000146   0x2301             MOVS     R3,#+1
   \   00000148   0x2200             MOVS     R2,#+0
   \   0000014A   0x2100             MOVS     R1,#+0
   \   0000014C   0x2003             MOVS     R0,#+3
   \   0000014E   0x.... 0x....      BL       LPLD_GPIO_Init
     38            LPLD_GPIO_Init(PTA, 5, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000152   0x2000             MOVS     R0,#+0
   \   00000154   0x9000             STR      R0,[SP, #+0]
   \   00000156   0x2301             MOVS     R3,#+1
   \   00000158   0x2200             MOVS     R2,#+0
   \   0000015A   0x2105             MOVS     R1,#+5
   \   0000015C   0x2000             MOVS     R0,#+0
   \   0000015E   0x.... 0x....      BL       LPLD_GPIO_Init
     39            LPLD_GPIO_Init(PTA, 12, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000162   0x2000             MOVS     R0,#+0
   \   00000164   0x9000             STR      R0,[SP, #+0]
   \   00000166   0x2301             MOVS     R3,#+1
   \   00000168   0x2200             MOVS     R2,#+0
   \   0000016A   0x210C             MOVS     R1,#+12
   \   0000016C   0x2000             MOVS     R0,#+0
   \   0000016E   0x.... 0x....      BL       LPLD_GPIO_Init
     40            LPLD_GPIO_Init(PTA, 13, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000172   0x2000             MOVS     R0,#+0
   \   00000174   0x9000             STR      R0,[SP, #+0]
   \   00000176   0x2301             MOVS     R3,#+1
   \   00000178   0x2200             MOVS     R2,#+0
   \   0000017A   0x210D             MOVS     R1,#+13
   \   0000017C   0x2000             MOVS     R0,#+0
   \   0000017E   0x.... 0x....      BL       LPLD_GPIO_Init
     41            LPLD_GPIO_Init(PTA, 14, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000182   0x2000             MOVS     R0,#+0
   \   00000184   0x9000             STR      R0,[SP, #+0]
   \   00000186   0x2301             MOVS     R3,#+1
   \   00000188   0x2200             MOVS     R2,#+0
   \   0000018A   0x210E             MOVS     R1,#+14
   \   0000018C   0x2000             MOVS     R0,#+0
   \   0000018E   0x.... 0x....      BL       LPLD_GPIO_Init
     42            LPLD_GPIO_Init(PTA, 16, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000192   0x2000             MOVS     R0,#+0
   \   00000194   0x9000             STR      R0,[SP, #+0]
   \   00000196   0x2301             MOVS     R3,#+1
   \   00000198   0x2200             MOVS     R2,#+0
   \   0000019A   0x2110             MOVS     R1,#+16
   \   0000019C   0x2000             MOVS     R0,#+0
   \   0000019E   0x.... 0x....      BL       LPLD_GPIO_Init
     43            LPLD_GPIO_Init(PTA, 17, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000001A2   0x2000             MOVS     R0,#+0
   \   000001A4   0x9000             STR      R0,[SP, #+0]
   \   000001A6   0x2301             MOVS     R3,#+1
   \   000001A8   0x2200             MOVS     R2,#+0
   \   000001AA   0x2111             MOVS     R1,#+17
   \   000001AC   0x2000             MOVS     R0,#+0
   \   000001AE   0x.... 0x....      BL       LPLD_GPIO_Init
     44            //左侧红外r3
     45            LPLD_GPIO_Init(PTE, 24, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000001B2   0x2000             MOVS     R0,#+0
   \   000001B4   0x9000             STR      R0,[SP, #+0]
   \   000001B6   0x2301             MOVS     R3,#+1
   \   000001B8   0x2200             MOVS     R2,#+0
   \   000001BA   0x2118             MOVS     R1,#+24
   \   000001BC   0x2004             MOVS     R0,#+4
   \   000001BE   0x.... 0x....      BL       LPLD_GPIO_Init
     46            LPLD_GPIO_Init(PTE, 25, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000001C2   0x2000             MOVS     R0,#+0
   \   000001C4   0x9000             STR      R0,[SP, #+0]
   \   000001C6   0x2301             MOVS     R3,#+1
   \   000001C8   0x2200             MOVS     R2,#+0
   \   000001CA   0x2119             MOVS     R1,#+25
   \   000001CC   0x2004             MOVS     R0,#+4
   \   000001CE   0x.... 0x....      BL       LPLD_GPIO_Init
     47            LPLD_GPIO_Init(PTE, 26, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000001D2   0x2000             MOVS     R0,#+0
   \   000001D4   0x9000             STR      R0,[SP, #+0]
   \   000001D6   0x2301             MOVS     R3,#+1
   \   000001D8   0x2200             MOVS     R2,#+0
   \   000001DA   0x211A             MOVS     R1,#+26
   \   000001DC   0x2004             MOVS     R0,#+4
   \   000001DE   0x.... 0x....      BL       LPLD_GPIO_Init
     48            //右侧红外r4
     49            LPLD_GPIO_Init(PTC, 9, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000001E2   0x2000             MOVS     R0,#+0
   \   000001E4   0x9000             STR      R0,[SP, #+0]
   \   000001E6   0x2301             MOVS     R3,#+1
   \   000001E8   0x2200             MOVS     R2,#+0
   \   000001EA   0x2109             MOVS     R1,#+9
   \   000001EC   0x2002             MOVS     R0,#+2
   \   000001EE   0x.... 0x....      BL       LPLD_GPIO_Init
     50            LPLD_GPIO_Init(PTC, 12, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   000001F2   0x2000             MOVS     R0,#+0
   \   000001F4   0x9000             STR      R0,[SP, #+0]
   \   000001F6   0x2301             MOVS     R3,#+1
   \   000001F8   0x2200             MOVS     R2,#+0
   \   000001FA   0x210C             MOVS     R1,#+12
   \   000001FC   0x2002             MOVS     R0,#+2
   \   000001FE   0x.... 0x....      BL       LPLD_GPIO_Init
     51            LPLD_GPIO_Init(PTC, 13, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000202   0x2000             MOVS     R0,#+0
   \   00000204   0x9000             STR      R0,[SP, #+0]
   \   00000206   0x2301             MOVS     R3,#+1
   \   00000208   0x2200             MOVS     R2,#+0
   \   0000020A   0x210D             MOVS     R1,#+13
   \   0000020C   0x2002             MOVS     R0,#+2
   \   0000020E   0x.... 0x....      BL       LPLD_GPIO_Init
     52            
     53            // 接近开关
     54            LPLD_GPIO_Init(PTB, 0, DIR_INPUT, INPUT_PUP, IRQC_DIS);
   \   00000212   0x2000             MOVS     R0,#+0
   \   00000214   0x9000             STR      R0,[SP, #+0]
   \   00000216   0x2301             MOVS     R3,#+1
   \   00000218   0x2200             MOVS     R2,#+0
   \   0000021A   0x2100             MOVS     R1,#+0
   \   0000021C   0x2001             MOVS     R0,#+1
   \   0000021E   0x.... 0x....      BL       LPLD_GPIO_Init
     55          }
   \   00000222   0xBD01             POP      {R0,PC}          ;; return
     56          

   \                                 In section .text, align 2, keep-with-next
     57          void init_pwm()
     58          {
   \                     init_pwm:
   \   00000000   0xB580             PUSH     {R7,LR}
     59            //设置FTM0模块PWM频率为10kHz
     60            LPLD_FTM0_PWM_Init(10000);
   \   00000002   0xF242 0x7010      MOVW     R0,#+10000
   \   00000006   0x.... 0x....      BL       LPLD_FTM0_PWM_Init
     61            LPLD_FTM0_PWM_Open(4, 0);
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x2004             MOVS     R0,#+4
   \   0000000E   0x.... 0x....      BL       LPLD_FTM0_PWM_Open
     62            LPLD_FTM0_PWM_Open(5, 0);
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x2005             MOVS     R0,#+5
   \   00000016   0x.... 0x....      BL       LPLD_FTM0_PWM_Open
     63            LPLD_FTM0_PWM_Open(6, 0);
   \   0000001A   0x2100             MOVS     R1,#+0
   \   0000001C   0x2006             MOVS     R0,#+6
   \   0000001E   0x.... 0x....      BL       LPLD_FTM0_PWM_Open
     64            LPLD_FTM0_PWM_Open(7, 0);
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0x2007             MOVS     R0,#+7
   \   00000026   0x.... 0x....      BL       LPLD_FTM0_PWM_Open
     65          }
   \   0000002A   0xBD01             POP      {R0,PC}          ;; return
     66          

   \                                 In section .text, align 2, keep-with-next
     67          _Bool scan_infront(void) {
   \                     scan_infront:
   \   00000000   0xB580             PUSH     {R7,LR}
     68          	return !LPLD_GPIO_Get_b(PTB, 0);
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x2001             MOVS     R0,#+1
   \   00000006   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD101             BNE.N    ??scan_infront_0
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0xE000             B.N      ??scan_infront_1
   \                     ??scan_infront_0:
   \   00000012   0x2000             MOVS     R0,#+0
   \                     ??scan_infront_1:
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0xBD02             POP      {R1,PC}          ;; return
     69          }
     70          

   \                                 In section .text, align 2, keep-with-next
     71          void scan_infrared(_Bool *r1, _Bool *r2, _Bool *r3, _Bool *r4)
     72          {
   \                     scan_infrared:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x001F             MOVS     R7,R3
     73            r1[0]=LPLD_GPIO_Get_b(PTB, 9);
   \   0000000A   0x2109             MOVS     R1,#+9
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD001             BEQ.N    ??scan_infrared_0
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0xE000             B.N      ??scan_infrared_1
   \                     ??scan_infrared_0:
   \   0000001A   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_1:
   \   0000001C   0x7020             STRB     R0,[R4, #+0]
     74            r1[1]=LPLD_GPIO_Get_b(PTB, 10);
   \   0000001E   0x210A             MOVS     R1,#+10
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD001             BEQ.N    ??scan_infrared_2
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0xE000             B.N      ??scan_infrared_3
   \                     ??scan_infrared_2:
   \   0000002E   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_3:
   \   00000030   0x7060             STRB     R0,[R4, #+1]
     75            r1[2]=LPLD_GPIO_Get_b(PTB, 11);
   \   00000032   0x210B             MOVS     R1,#+11
   \   00000034   0x2001             MOVS     R0,#+1
   \   00000036   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD001             BEQ.N    ??scan_infrared_4
   \   0000003E   0x2001             MOVS     R0,#+1
   \   00000040   0xE000             B.N      ??scan_infrared_5
   \                     ??scan_infrared_4:
   \   00000042   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_5:
   \   00000044   0x70A0             STRB     R0,[R4, #+2]
     76            r1[3]=LPLD_GPIO_Get_b(PTB, 18);
   \   00000046   0x2112             MOVS     R1,#+18
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD001             BEQ.N    ??scan_infrared_6
   \   00000052   0x2001             MOVS     R0,#+1
   \   00000054   0xE000             B.N      ??scan_infrared_7
   \                     ??scan_infrared_6:
   \   00000056   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_7:
   \   00000058   0x70E0             STRB     R0,[R4, #+3]
     77            r1[4]=LPLD_GPIO_Get_b(PTB, 19);
   \   0000005A   0x2113             MOVS     R1,#+19
   \   0000005C   0x2001             MOVS     R0,#+1
   \   0000005E   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000062   0x2800             CMP      R0,#+0
   \   00000064   0xD001             BEQ.N    ??scan_infrared_8
   \   00000066   0x2001             MOVS     R0,#+1
   \   00000068   0xE000             B.N      ??scan_infrared_9
   \                     ??scan_infrared_8:
   \   0000006A   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_9:
   \   0000006C   0x7120             STRB     R0,[R4, #+4]
     78            r1[5]=LPLD_GPIO_Get_b(PTB, 20);
   \   0000006E   0x2114             MOVS     R1,#+20
   \   00000070   0x2001             MOVS     R0,#+1
   \   00000072   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000076   0x2800             CMP      R0,#+0
   \   00000078   0xD001             BEQ.N    ??scan_infrared_10
   \   0000007A   0x2001             MOVS     R0,#+1
   \   0000007C   0xE000             B.N      ??scan_infrared_11
   \                     ??scan_infrared_10:
   \   0000007E   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_11:
   \   00000080   0x7160             STRB     R0,[R4, #+5]
     79            r1[6]=LPLD_GPIO_Get_b(PTB, 21);
   \   00000082   0x2115             MOVS     R1,#+21
   \   00000084   0x2001             MOVS     R0,#+1
   \   00000086   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000008A   0x2800             CMP      R0,#+0
   \   0000008C   0xD001             BEQ.N    ??scan_infrared_12
   \   0000008E   0x2001             MOVS     R0,#+1
   \   00000090   0xE000             B.N      ??scan_infrared_13
   \                     ??scan_infrared_12:
   \   00000092   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_13:
   \   00000094   0x71A0             STRB     R0,[R4, #+6]
     80            r1[7]=LPLD_GPIO_Get_b(PTB, 22);
   \   00000096   0x2116             MOVS     R1,#+22
   \   00000098   0x2001             MOVS     R0,#+1
   \   0000009A   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000009E   0x2800             CMP      R0,#+0
   \   000000A0   0xD001             BEQ.N    ??scan_infrared_14
   \   000000A2   0x2001             MOVS     R0,#+1
   \   000000A4   0xE000             B.N      ??scan_infrared_15
   \                     ??scan_infrared_14:
   \   000000A6   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_15:
   \   000000A8   0x71E0             STRB     R0,[R4, #+7]
     81            r1[8]=LPLD_GPIO_Get_b(PTC, 6);
   \   000000AA   0x2106             MOVS     R1,#+6
   \   000000AC   0x2002             MOVS     R0,#+2
   \   000000AE   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   000000B2   0x2800             CMP      R0,#+0
   \   000000B4   0xD001             BEQ.N    ??scan_infrared_16
   \   000000B6   0x2001             MOVS     R0,#+1
   \   000000B8   0xE000             B.N      ??scan_infrared_17
   \                     ??scan_infrared_16:
   \   000000BA   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_17:
   \   000000BC   0x7220             STRB     R0,[R4, #+8]
     82            r1[9]=LPLD_GPIO_Get_b(PTC, 7);
   \   000000BE   0x2107             MOVS     R1,#+7
   \   000000C0   0x2002             MOVS     R0,#+2
   \   000000C2   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   000000C6   0x2800             CMP      R0,#+0
   \   000000C8   0xD001             BEQ.N    ??scan_infrared_18
   \   000000CA   0x2001             MOVS     R0,#+1
   \   000000CC   0xE000             B.N      ??scan_infrared_19
   \                     ??scan_infrared_18:
   \   000000CE   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_19:
   \   000000D0   0x7260             STRB     R0,[R4, #+9]
     83            r1[10]=LPLD_GPIO_Get_b(PTC, 8);
   \   000000D2   0x2108             MOVS     R1,#+8
   \   000000D4   0x2002             MOVS     R0,#+2
   \   000000D6   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   000000DA   0x2800             CMP      R0,#+0
   \   000000DC   0xD001             BEQ.N    ??scan_infrared_20
   \   000000DE   0x2001             MOVS     R0,#+1
   \   000000E0   0xE000             B.N      ??scan_infrared_21
   \                     ??scan_infrared_20:
   \   000000E2   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_21:
   \   000000E4   0x72A0             STRB     R0,[R4, #+10]
     84            
     85            r2[0]=LPLD_GPIO_Get_b(PTD, 0);
   \   000000E6   0x2100             MOVS     R1,#+0
   \   000000E8   0x2003             MOVS     R0,#+3
   \   000000EA   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   000000EE   0x2800             CMP      R0,#+0
   \   000000F0   0xD001             BEQ.N    ??scan_infrared_22
   \   000000F2   0x2001             MOVS     R0,#+1
   \   000000F4   0xE000             B.N      ??scan_infrared_23
   \                     ??scan_infrared_22:
   \   000000F6   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_23:
   \   000000F8   0x7028             STRB     R0,[R5, #+0]
     86            r2[1]=LPLD_GPIO_Get_b(PTA, 5);
   \   000000FA   0x2105             MOVS     R1,#+5
   \   000000FC   0x2000             MOVS     R0,#+0
   \   000000FE   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000102   0x2800             CMP      R0,#+0
   \   00000104   0xD001             BEQ.N    ??scan_infrared_24
   \   00000106   0x2001             MOVS     R0,#+1
   \   00000108   0xE000             B.N      ??scan_infrared_25
   \                     ??scan_infrared_24:
   \   0000010A   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_25:
   \   0000010C   0x7068             STRB     R0,[R5, #+1]
     87            r2[2]=LPLD_GPIO_Get_b(PTA, 12);
   \   0000010E   0x210C             MOVS     R1,#+12
   \   00000110   0x2000             MOVS     R0,#+0
   \   00000112   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000116   0x2800             CMP      R0,#+0
   \   00000118   0xD001             BEQ.N    ??scan_infrared_26
   \   0000011A   0x2001             MOVS     R0,#+1
   \   0000011C   0xE000             B.N      ??scan_infrared_27
   \                     ??scan_infrared_26:
   \   0000011E   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_27:
   \   00000120   0x70A8             STRB     R0,[R5, #+2]
     88            r2[3]=LPLD_GPIO_Get_b(PTA, 13);
   \   00000122   0x210D             MOVS     R1,#+13
   \   00000124   0x2000             MOVS     R0,#+0
   \   00000126   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000012A   0x2800             CMP      R0,#+0
   \   0000012C   0xD001             BEQ.N    ??scan_infrared_28
   \   0000012E   0x2001             MOVS     R0,#+1
   \   00000130   0xE000             B.N      ??scan_infrared_29
   \                     ??scan_infrared_28:
   \   00000132   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_29:
   \   00000134   0x70E8             STRB     R0,[R5, #+3]
     89            r2[4]=LPLD_GPIO_Get_b(PTA, 14);
   \   00000136   0x210E             MOVS     R1,#+14
   \   00000138   0x2000             MOVS     R0,#+0
   \   0000013A   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000013E   0x2800             CMP      R0,#+0
   \   00000140   0xD001             BEQ.N    ??scan_infrared_30
   \   00000142   0x2001             MOVS     R0,#+1
   \   00000144   0xE000             B.N      ??scan_infrared_31
   \                     ??scan_infrared_30:
   \   00000146   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_31:
   \   00000148   0x7128             STRB     R0,[R5, #+4]
     90            r2[5]=LPLD_GPIO_Get_b(PTA, 16);
   \   0000014A   0x2110             MOVS     R1,#+16
   \   0000014C   0x2000             MOVS     R0,#+0
   \   0000014E   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000152   0x2800             CMP      R0,#+0
   \   00000154   0xD001             BEQ.N    ??scan_infrared_32
   \   00000156   0x2001             MOVS     R0,#+1
   \   00000158   0xE000             B.N      ??scan_infrared_33
   \                     ??scan_infrared_32:
   \   0000015A   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_33:
   \   0000015C   0x7168             STRB     R0,[R5, #+5]
     91            r2[6]=LPLD_GPIO_Get_b(PTA, 17);
   \   0000015E   0x2111             MOVS     R1,#+17
   \   00000160   0x2000             MOVS     R0,#+0
   \   00000162   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   00000166   0x2800             CMP      R0,#+0
   \   00000168   0xD001             BEQ.N    ??scan_infrared_34
   \   0000016A   0x2001             MOVS     R0,#+1
   \   0000016C   0xE000             B.N      ??scan_infrared_35
   \                     ??scan_infrared_34:
   \   0000016E   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_35:
   \   00000170   0x71A8             STRB     R0,[R5, #+6]
     92            
     93            r3[0]=LPLD_GPIO_Get_b(PTE, 24);
   \   00000172   0x2118             MOVS     R1,#+24
   \   00000174   0x2004             MOVS     R0,#+4
   \   00000176   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000017A   0x2800             CMP      R0,#+0
   \   0000017C   0xD001             BEQ.N    ??scan_infrared_36
   \   0000017E   0x2001             MOVS     R0,#+1
   \   00000180   0xE000             B.N      ??scan_infrared_37
   \                     ??scan_infrared_36:
   \   00000182   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_37:
   \   00000184   0x7030             STRB     R0,[R6, #+0]
     94            r3[1]=LPLD_GPIO_Get_b(PTE, 25);
   \   00000186   0x2119             MOVS     R1,#+25
   \   00000188   0x2004             MOVS     R0,#+4
   \   0000018A   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000018E   0x2800             CMP      R0,#+0
   \   00000190   0xD001             BEQ.N    ??scan_infrared_38
   \   00000192   0x2001             MOVS     R0,#+1
   \   00000194   0xE000             B.N      ??scan_infrared_39
   \                     ??scan_infrared_38:
   \   00000196   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_39:
   \   00000198   0x7070             STRB     R0,[R6, #+1]
     95            r3[2]=LPLD_GPIO_Get_b(PTE, 26);
   \   0000019A   0x211A             MOVS     R1,#+26
   \   0000019C   0x2004             MOVS     R0,#+4
   \   0000019E   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   000001A2   0x2800             CMP      R0,#+0
   \   000001A4   0xD001             BEQ.N    ??scan_infrared_40
   \   000001A6   0x2001             MOVS     R0,#+1
   \   000001A8   0xE000             B.N      ??scan_infrared_41
   \                     ??scan_infrared_40:
   \   000001AA   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_41:
   \   000001AC   0x70B0             STRB     R0,[R6, #+2]
     96            
     97            r4[0]=LPLD_GPIO_Get_b(PTC, 13);
   \   000001AE   0x210D             MOVS     R1,#+13
   \   000001B0   0x2002             MOVS     R0,#+2
   \   000001B2   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   000001B6   0x2800             CMP      R0,#+0
   \   000001B8   0xD001             BEQ.N    ??scan_infrared_42
   \   000001BA   0x2001             MOVS     R0,#+1
   \   000001BC   0xE000             B.N      ??scan_infrared_43
   \                     ??scan_infrared_42:
   \   000001BE   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_43:
   \   000001C0   0x7038             STRB     R0,[R7, #+0]
     98            r4[1]=LPLD_GPIO_Get_b(PTC, 12);
   \   000001C2   0x210C             MOVS     R1,#+12
   \   000001C4   0x2002             MOVS     R0,#+2
   \   000001C6   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   000001CA   0x2800             CMP      R0,#+0
   \   000001CC   0xD001             BEQ.N    ??scan_infrared_44
   \   000001CE   0x2001             MOVS     R0,#+1
   \   000001D0   0xE000             B.N      ??scan_infrared_45
   \                     ??scan_infrared_44:
   \   000001D2   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_45:
   \   000001D4   0x7078             STRB     R0,[R7, #+1]
     99            r4[2]=LPLD_GPIO_Get_b(PTC, 9);
   \   000001D6   0x2109             MOVS     R1,#+9
   \   000001D8   0x2002             MOVS     R0,#+2
   \   000001DA   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   000001DE   0x2800             CMP      R0,#+0
   \   000001E0   0xD001             BEQ.N    ??scan_infrared_46
   \   000001E2   0x2001             MOVS     R0,#+1
   \   000001E4   0xE000             B.N      ??scan_infrared_47
   \                     ??scan_infrared_46:
   \   000001E6   0x2000             MOVS     R0,#+0
   \                     ??scan_infrared_47:
   \   000001E8   0x70B8             STRB     R0,[R7, #+2]
    100          }
   \   000001EA   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    101          

   \                                 In section .text, align 2, keep-with-next
    102          void calculate_infrared_error(_Bool *r, int r_size, int *error) {
   \                     calculate_infrared_error:
   \   00000000   0xB470             PUSH     {R4-R6}
    103          	if (r == NULL || error == NULL) return;
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD001             BEQ.N    ??calculate_infrared_error_0
   \   00000006   0x2A00             CMP      R2,#+0
   \   00000008   0xD100             BNE.N    ??calculate_infrared_error_1
   \                     ??calculate_infrared_error_0:
   \   0000000A   0xE046             B.N      ??calculate_infrared_error_2
    104          	int eb1 = -1, eb2 = -1;
   \                     ??calculate_infrared_error_1:
   \   0000000C   0xF05F 0x33FF      MOVS     R3,#-1
   \   00000010   0xF05F 0x34FF      MOVS     R4,#-1
    105          	for (int i = 1; i < r_size; ++ i) {
   \   00000014   0x2501             MOVS     R5,#+1
   \   00000016   0xE009             B.N      ??calculate_infrared_error_3
    106          		if (r[i - 1] == 0 && r[i] == 1) eb1 = i;
    107          		else if (r[i - 1] == 1 && r[i] == 0) eb2 = i;
   \                     ??calculate_infrared_error_4:
   \   00000018   0x182E             ADDS     R6,R5,R0
   \   0000001A   0xF816 0x6C01      LDRB     R6,[R6, #-1]
   \   0000001E   0x2E00             CMP      R6,#+0
   \   00000020   0xD003             BEQ.N    ??calculate_infrared_error_5
   \   00000022   0x5C2E             LDRB     R6,[R5, R0]
   \   00000024   0x2E00             CMP      R6,#+0
   \   00000026   0xD100             BNE.N    ??calculate_infrared_error_5
   \   00000028   0x002C             MOVS     R4,R5
   \                     ??calculate_infrared_error_5:
   \   0000002A   0x1C6D             ADDS     R5,R5,#+1
   \                     ??calculate_infrared_error_3:
   \   0000002C   0x428D             CMP      R5,R1
   \   0000002E   0xDA09             BGE.N    ??calculate_infrared_error_6
   \   00000030   0x182E             ADDS     R6,R5,R0
   \   00000032   0xF816 0x6C01      LDRB     R6,[R6, #-1]
   \   00000036   0x2E00             CMP      R6,#+0
   \   00000038   0xD1EE             BNE.N    ??calculate_infrared_error_4
   \   0000003A   0x5C2E             LDRB     R6,[R5, R0]
   \   0000003C   0x2E00             CMP      R6,#+0
   \   0000003E   0xD0EB             BEQ.N    ??calculate_infrared_error_4
   \   00000040   0x002B             MOVS     R3,R5
   \   00000042   0xE7F2             B.N      ??calculate_infrared_error_5
    108          	}
    109          	
    110            if(eb1 != -1 && eb2 != -1)
   \                     ??calculate_infrared_error_6:
   \   00000044   0xF113 0x0F01      CMN      R3,#+1
   \   00000048   0xD00A             BEQ.N    ??calculate_infrared_error_7
   \   0000004A   0xF114 0x0F01      CMN      R4,#+1
   \   0000004E   0xD007             BEQ.N    ??calculate_infrared_error_7
    111            {
    112              if(eb2 - eb1 < BLACKLINE_WIDTH + 1)//黑线应该小于等于3个红外
   \   00000050   0x1AE0             SUBS     R0,R4,R3
   \   00000052   0x2804             CMP      R0,#+4
   \   00000054   0xDA21             BGE.N    ??calculate_infrared_error_8
    113                *error = eb1 + eb2 - r_size - 1;
   \   00000056   0x18E0             ADDS     R0,R4,R3
   \   00000058   0x1A40             SUBS     R0,R0,R1
   \   0000005A   0x1E40             SUBS     R0,R0,#+1
   \   0000005C   0x6010             STR      R0,[R2, #+0]
   \   0000005E   0xE01C             B.N      ??calculate_infrared_error_8
    114              //else
    115              // *error = r1_error;//超过4个说明是错误或者是十字等情况 暂且保持误差
    116            }
    117            else if(eb1 != -1 && eb2 == -1)
   \                     ??calculate_infrared_error_7:
   \   00000060   0xF113 0x0F01      CMN      R3,#+1
   \   00000064   0xD00C             BEQ.N    ??calculate_infrared_error_9
   \   00000066   0xF114 0x0F01      CMN      R4,#+1
   \   0000006A   0xD109             BNE.N    ??calculate_infrared_error_9
    118            {
    119          	if (r[r_size - 1]) *error = r_size - 1;
   \   0000006C   0x1808             ADDS     R0,R1,R0
   \   0000006E   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   00000072   0x2800             CMP      R0,#+0
   \   00000074   0xD002             BEQ.N    ??calculate_infrared_error_10
   \   00000076   0x1E48             SUBS     R0,R1,#+1
   \   00000078   0x6010             STR      R0,[R2, #+0]
   \   0000007A   0xE00E             B.N      ??calculate_infrared_error_8
    120          	else *error = r_size;
   \                     ??calculate_infrared_error_10:
   \   0000007C   0x6011             STR      R1,[R2, #+0]
   \   0000007E   0xE00C             B.N      ??calculate_infrared_error_8
    121            }	
    122            else if(eb1 == -1 && eb2 == 1)
   \                     ??calculate_infrared_error_9:
   \   00000080   0xF113 0x0F01      CMN      R3,#+1
   \   00000084   0xD109             BNE.N    ??calculate_infrared_error_8
   \   00000086   0x2C01             CMP      R4,#+1
   \   00000088   0xD107             BNE.N    ??calculate_infrared_error_8
    123            {
    124          	if (r[1]) *error = 1 - r_size;
   \   0000008A   0x7840             LDRB     R0,[R0, #+1]
   \   0000008C   0x2800             CMP      R0,#+0
   \   0000008E   0xD003             BEQ.N    ??calculate_infrared_error_11
   \   00000090   0xF1D1 0x0001      RSBS     R0,R1,#+1
   \   00000094   0x6010             STR      R0,[R2, #+0]
   \   00000096   0xE000             B.N      ??calculate_infrared_error_8
    125          	//if (r[0]) *error = 1 - r_size;
    126          	else *error = r_size;
   \                     ??calculate_infrared_error_11:
   \   00000098   0x6011             STR      R1,[R2, #+0]
    127            }
    128            else	
    129            {
    130              //红外完全看不见，误差保持
    131            }		
    132          }
   \                     ??calculate_infrared_error_8:
   \                     ??calculate_infrared_error_2:
   \   0000009A   0xBC70             POP      {R4-R6}
   \   0000009C   0x4770             BX       LR               ;; return
    133          

   \                                 In section .text, align 2, keep-with-next
    134          void delayMs(uint16 t)  //粗略定时
    135          {
    136            uint32 i=t*20000;
   \                     delayMs:
   \   00000000   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000002   0xF644 0x6120      MOVW     R1,#+20000
   \   00000006   0x4348             MULS     R0,R1,R0
    137            while(i--);
   \                     ??delayMs_0:
   \   00000008   0x0001             MOVS     R1,R0
   \   0000000A   0x1E48             SUBS     R0,R1,#+1
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD1FB             BNE.N    ??delayMs_0
    138          }
   \   00000010   0x4770             BX       LR               ;; return
    139          

   \                                 In section .text, align 2, keep-with-next
    140          void delayUs(uint16 t)  //粗略定时
    141          {
    142            uint32 i=t*20;
   \                     delayUs:
   \   00000000   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000002   0x2114             MOVS     R1,#+20
   \   00000004   0x4348             MULS     R0,R1,R0
    143            while(i--);
   \                     ??delayUs_0:
   \   00000006   0x0001             MOVS     R1,R0
   \   00000008   0x1E48             SUBS     R0,R1,#+1
   \   0000000A   0x2900             CMP      R1,#+0
   \   0000000C   0xD1FB             BNE.N    ??delayUs_0
    144          }
   \   0000000E   0x4770             BX       LR               ;; return
    145          

   \                                 In section .text, align 2, keep-with-next
    146          unsigned char scan_switch()
    147          {
   \                     scan_switch:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    148            unsigned char code = 0;
   \   00000002   0x2400             MOVS     R4,#+0
    149            for (char i = 0; i < 7; ++ i)
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0xE002             B.N      ??scan_switch_0
    150          	code |= LPLD_GPIO_Get_b(PTE, i) == 0 ? (1 << i) : 0;
   \                     ??scan_switch_1:
   \   00000008   0x2000             MOVS     R0,#+0
   \                     ??scan_switch_2:
   \   0000000A   0x4304             ORRS     R4,R0,R4
   \   0000000C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??scan_switch_0:
   \   0000000E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000010   0x2D07             CMP      R5,#+7
   \   00000012   0xD209             BCS.N    ??scan_switch_3
   \   00000014   0x0029             MOVS     R1,R5
   \   00000016   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000018   0x2004             MOVS     R0,#+4
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Get_b
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD1F2             BNE.N    ??scan_switch_1
   \   00000022   0x2001             MOVS     R0,#+1
   \   00000024   0x40A8             LSLS     R0,R0,R5
   \   00000026   0xE7F0             B.N      ??scan_switch_2
    151            return code;
   \                     ??scan_switch_3:
   \   00000028   0x0020             MOVS     R0,R4
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    152          }
    153          /*
    154          void yesbeep()
    155          {
    156            LPLD_GPIO_Set_b(PTB, 23, OUTPUT_H);
    157          }
    158          
    159          void nobeep()
    160          {
    161            LPLD_GPIO_Set_b(PTB, 23, OUTPUT_L);
    162          }
    163          */
    164          
    165          /*
    166          int abs(int a) {
    167             return a < 0 ? -a : a;
    168          }
    169          */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       12  calculate_infrared_error
        0  delayMs
        0  delayUs
        8  init_gpio
              8 -> LPLD_GPIO_Init
        8  init_pwm
              8 -> LPLD_FTM0_PWM_Init
              8 -> LPLD_FTM0_PWM_Open
       24  scan_infrared
             24 -> LPLD_GPIO_Get_b
        8  scan_infront
              8 -> LPLD_GPIO_Get_b
       16  scan_switch
             16 -> LPLD_GPIO_Get_b


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     158  calculate_infrared_error
      18  delayMs
      16  delayUs
     548  init_gpio
      44  init_pwm
     492  scan_infrared
      24  scan_infront
      46  scan_switch

 
 1 346 bytes in section .text
 
 1 346 bytes of CODE memory

Errors: none
Warnings: none
