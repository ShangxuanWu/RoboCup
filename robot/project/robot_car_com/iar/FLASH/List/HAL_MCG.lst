###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     06/Jul/2014  14:13:57 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  F:\robot _init\robot\lib\LPLD\HAL_MCG.c                  #
#    Command line =  "F:\robot _init\robot\lib\LPLD\HAL_MCG.c" -D IAR -D      #
#                    LPLD_K60 -lCN "F:\robot _init\robot\project\robot_car_co #
#                    m\iar\FLASH\List\" -lB "F:\robot                         #
#                    _init\robot\project\robot_car_com\iar\FLASH\List\" -o    #
#                    "F:\robot _init\robot\project\robot_car_com\iar\FLASH\Ob #
#                    j\" --no_cse --no_unroll --no_inline --no_code_motion    #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=None            #
#                    --dlib_config "D:\IAR Systems\Embedded Workbench         #
#                    6.4\arm\INC\c\DLib_Config_Normal.h" -I "F:\robot         #
#                    _init\robot\project\robot_car_com\iar\..\app\" -I        #
#                    "F:\robot _init\robot\project\robot_car_com\iar\..\..\.. #
#                    \lib\common\" -I "F:\robot _init\robot\project\robot_car #
#                    _com\iar\..\..\..\lib\cpu\" -I "F:\robot                 #
#                    _init\robot\project\robot_car_com\iar\..\..\..\lib\cpu\h #
#                    eaders\" -I "F:\robot _init\robot\project\robot_car_com\ #
#                    iar\..\..\..\lib\drivers\adc16\" -I "F:\robot            #
#                    _init\robot\project\robot_car_com\iar\..\..\..\lib\drive #
#                    rs\enet\" -I "F:\robot _init\robot\project\robot_car_com #
#                    \iar\..\..\..\lib\drivers\lptmr\" -I "F:\robot           #
#                    _init\robot\project\robot_car_com\iar\..\..\..\lib\drive #
#                    rs\mcg\" -I "F:\robot _init\robot\project\robot_car_com\ #
#                    iar\..\..\..\lib\drivers\pmc\" -I "F:\robot              #
#                    _init\robot\project\robot_car_com\iar\..\..\..\lib\drive #
#                    rs\rtc\" -I "F:\robot _init\robot\project\robot_car_com\ #
#                    iar\..\..\..\lib\drivers\uart\" -I "F:\robot             #
#                    _init\robot\project\robot_car_com\iar\..\..\..\lib\drive #
#                    rs\wdog\" -I "F:\robot _init\robot\project\robot_car_com #
#                    \iar\..\..\..\lib\platforms\" -I "F:\robot               #
#                    _init\robot\project\robot_car_com\iar\..\..\..\lib\LPLD\ #
#                    " -I "F:\robot _init\robot\project\robot_car_com\iar\..\ #
#                    ..\..\lib\LPLD\FatFs\" -I "F:\robot                      #
#                    _init\robot\project\robot_car_com\iar\..\..\..\lib\LPLD\ #
#                    USB\" -I "F:\robot _init\robot\project\robot_car_com\iar #
#                    \..\..\..\lib\iar_config_files\" -Ol                     #
#    List file    =  F:\robot _init\robot\project\robot_car_com\iar\FLASH\Lis #
#                    t\HAL_MCG.lst                                            #
#    Object file  =  F:\robot _init\robot\project\robot_car_com\iar\FLASH\Obj #
#                    \HAL_MCG.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

F:\robot _init\robot\lib\LPLD\HAL_MCG.c
      1          /*
      2           * --------------"拉普兰德K60底层库"-----------------
      3           *
      4           * 测试硬件平台:LPLD_K60 Card
      5           * 版权所有:北京拉普兰德电子技术有限公司
      6           * 网络销售:http://laplenden.taobao.com
      7           * 公司门户:http://www.lpld.cn
      8           *
      9           * 文件名: HAL_MCG.h
     10           * 用途: MCG底层模块相关函数
     11           * 最后修改日期: 20120216
     12           *
     13           * 开发者使用协议:
     14           *  本代码面向所有使用者开放源代码，开发者可以随意修改源代码。但本段及以上注释应
     15           *  予以保留，不得更改或删除原版权所有者姓名。二次开发者可以加注二次版权所有者，
     16           *  但应在遵守此协议的基础上，开放源代码、不得出售代码本身。
     17           *
     18           * 说明:本页代码基于Freescale官方示例代码修改，源代码文件为 mcg.c
     19           */
     20          #include "common.h"
     21          #include "HAL_MCG.h"
     22          
     23          /*
     24           * LPLD_PLL_Setup
     25           * PLL初始化内核及其他系统时钟
     26           * 
     27           * 参数:
     28           *    clk_option--期望内核时钟频率
     29           *      |__PLLx--参见HAL_MCG.h中的PLL_option定义
     30           *
     31           * 输出:
     32           *    内核频率，单位MHz
     33           */

   \                                 In section .text, align 4, keep-with-next
     34          unsigned char LPLD_PLL_Setup(unsigned char pll_option)
     35          {
   \                     LPLD_PLL_Setup:
   \   00000000   0xB510             PUSH     {R4,LR}
     36            unsigned char pll_freq;
     37            unsigned char prdiv;
     38            
     39            if(pll_option<111)
   \   00000002   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000004   0x286F             CMP      R0,#+111
   \   00000006   0xD251             BCS.N    ??LPLD_PLL_Setup_0
     40            {
     41              prdiv = 24;  
   \   00000008   0x2218             MOVS     R2,#+24
     42            }
     43            else if(pll_option<201)
     44            {
     45              prdiv = 12; 
     46            }
     47            else if(pll_option<221)
     48            {
     49              prdiv = 11; 
     50            }
     51            else
     52            {
     53              return 0;
     54            }
     55            
     56            // 这里假设复位后 MCG 模块默认为 FEI 模式
     57            
     58            // 首先移动到 FBE 模式
     59            MCG_C2 = 0;
   \                     ??LPLD_PLL_Setup_1:
   \   0000000A   0x4B81             LDR.N    R3,??LPLD_PLL_Setup_2  ;; 0x40064001
   \   0000000C   0x2400             MOVS     R4,#+0
   \   0000000E   0x701C             STRB     R4,[R3, #+0]
     60            
     61            // 振荡器初始化完成后,释放锁存状态下的 oscillator 和 GPIO 
     62            SIM_SCGC4 |= SIM_SCGC4_LLWU_MASK;
   \   00000010   0x4B80             LDR.N    R3,??LPLD_PLL_Setup_2+0x4  ;; 0x40048034
   \   00000012   0x681B             LDR      R3,[R3, #+0]
   \   00000014   0xF053 0x5380      ORRS     R3,R3,#0x10000000
   \   00000018   0x4C7E             LDR.N    R4,??LPLD_PLL_Setup_2+0x4  ;; 0x40048034
   \   0000001A   0x6023             STR      R3,[R4, #+0]
     63            LLWU_CS |= LLWU_CS_ACKISO_MASK;
   \   0000001C   0x4B7E             LDR.N    R3,??LPLD_PLL_Setup_2+0x8  ;; 0x4007c008
   \   0000001E   0x781B             LDRB     R3,[R3, #+0]
   \   00000020   0xF053 0x0380      ORRS     R3,R3,#0x80
   \   00000024   0x4C7C             LDR.N    R4,??LPLD_PLL_Setup_2+0x8  ;; 0x4007c008
   \   00000026   0x7023             STRB     R3,[R4, #+0]
     64            
     65            // 选择外部 oscilator 、参考分频器 and 清零 IREFS 启动外部osc
     66            // CLKS=2, FRDIV=3, IREFS=0, IRCLKEN=0, IREFSTEN=0
     67            MCG_C1 = MCG_C1_CLKS(2) | MCG_C1_FRDIV(3);  
   \   00000028   0x4B7C             LDR.N    R3,??LPLD_PLL_Setup_2+0xC  ;; 0x40064000
   \   0000002A   0x2498             MOVS     R4,#+152
   \   0000002C   0x701C             STRB     R4,[R3, #+0]
     68            
     69            //while (!(MCG_S & MCG_S_OSCINIT_MASK)){};  // 等待 oscillator 初始化
     70            
     71            while (MCG_S & MCG_S_IREFST_MASK){}; // 等待参考时钟清零
   \                     ??LPLD_PLL_Setup_3:
   \   0000002E   0x4B7C             LDR.N    R3,??LPLD_PLL_Setup_2+0x10  ;; 0x40064006
   \   00000030   0x781B             LDRB     R3,[R3, #+0]
   \   00000032   0x06DB             LSLS     R3,R3,#+27
   \   00000034   0xD4FB             BMI.N    ??LPLD_PLL_Setup_3
     72            
     73            while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x2){}; // 等待时钟状态显示为外部参考时钟(ext ref clk)
   \                     ??LPLD_PLL_Setup_4:
   \   00000036   0x4B7A             LDR.N    R3,??LPLD_PLL_Setup_2+0x10  ;; 0x40064006
   \   00000038   0x781B             LDRB     R3,[R3, #+0]
   \   0000003A   0xF3C3 0x0381      UBFX     R3,R3,#+2,#+2
   \   0000003E   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000040   0x2B02             CMP      R3,#+2
   \   00000042   0xD1F8             BNE.N    ??LPLD_PLL_Setup_4
     74            
     75            // 进入FBE模式
     76            // 配置 PLL 参考分频器, PLLCLKEN=0, PLLSTEN=0, PRDIV=5
     77            // 用晶振频率来选择 PRDIV 值. 仅在有频率晶振的时候支持
     78            // 产生 2MHz 的参考时钟给 PLL.
     79            MCG_C5 = MCG_C5_PRDIV(prdiv); // 设置 PLL 匹配晶振的参考分频数 
   \   00000044   0xF012 0x021F      ANDS     R2,R2,#0x1F
   \   00000048   0x4B76             LDR.N    R3,??LPLD_PLL_Setup_2+0x14  ;; 0x40064004
   \   0000004A   0x701A             STRB     R2,[R3, #+0]
     80            
     81            // 确保MCG_C6处于复位状态,禁止LOLIE、PLL、和时钟控制器,清PLL VCO分频器
     82            MCG_C6 = 0x0;
   \   0000004C   0x4A76             LDR.N    R2,??LPLD_PLL_Setup_2+0x18  ;; 0x40064005
   \   0000004E   0x2300             MOVS     R3,#+0
   \   00000050   0x7013             STRB     R3,[R2, #+0]
     83            // 选择PLL VCO分频器,系统时钟分频器取决于时钟选项
     84            
     85            switch (pll_option) {
   \   00000052   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000054   0x283C             CMP      R0,#+60
   \   00000056   0xD01E             BEQ.N    ??LPLD_PLL_Setup_5
   \   00000058   0x2846             CMP      R0,#+70
   \   0000005A   0xD033             BEQ.N    ??LPLD_PLL_Setup_6
   \   0000005C   0x2850             CMP      R0,#+80
   \   0000005E   0xD03C             BEQ.N    ??LPLD_PLL_Setup_7
   \   00000060   0x285A             CMP      R0,#+90
   \   00000062   0xD045             BEQ.N    ??LPLD_PLL_Setup_8
   \   00000064   0x2860             CMP      R0,#+96
   \   00000066   0xD04E             BEQ.N    ??LPLD_PLL_Setup_9
   \   00000068   0x2864             CMP      R0,#+100
   \   0000006A   0xD057             BEQ.N    ??LPLD_PLL_Setup_10
   \   0000006C   0x286E             CMP      R0,#+110
   \   0000006E   0xD060             BEQ.N    ??LPLD_PLL_Setup_11
   \   00000070   0x2878             CMP      R0,#+120
   \   00000072   0xD069             BEQ.N    ??LPLD_PLL_Setup_12
   \   00000074   0x2882             CMP      R0,#+130
   \   00000076   0xD072             BEQ.N    ??LPLD_PLL_Setup_13
   \   00000078   0x2896             CMP      R0,#+150
   \   0000007A   0xD07B             BEQ.N    ??LPLD_PLL_Setup_14
   \   0000007C   0x28AA             CMP      R0,#+170
   \   0000007E   0xF000 0x8084      BEQ.W    ??LPLD_PLL_Setup_15
   \   00000082   0x28B4             CMP      R0,#+180
   \   00000084   0xF000 0x808C      BEQ.W    ??LPLD_PLL_Setup_16
   \   00000088   0x28C8             CMP      R0,#+200
   \   0000008A   0xF000 0x8094      BEQ.W    ??LPLD_PLL_Setup_17
   \   0000008E   0x28D1             CMP      R0,#+209
   \   00000090   0xF000 0x809C      BEQ.W    ??LPLD_PLL_Setup_18
   \   00000094   0xE0A4             B.N      ??LPLD_PLL_Setup_19
     86              case 60:
     87                // 设置系统选项分频
     88                // MCG=PLL, core = MCG, bus = MCG/2, FlexBus = MCG/2, Flash clock= MCG/3
     89                LPLD_Set_SYS_DIV(0,1,1,2);  //core=60M, bus=30M, FlexBus=30M, Flash Clk=20M
   \                     ??LPLD_PLL_Setup_5:
   \   00000096   0x2302             MOVS     R3,#+2
   \   00000098   0x2201             MOVS     R2,#+1
   \   0000009A   0x2101             MOVS     R1,#+1
   \   0000009C   0x2000             MOVS     R0,#+0
   \   0000009E   0x.... 0x....      BL       LPLD_Set_SYS_DIV
     90                // 设置 VCO 分频并使能 50MHz PLL, LOLIE=0, PLLS=1, CME=0, VDIV=1
     91                MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(6); //VDIV = 6 (2x30) 60MHz
   \   000000A2   0x4861             LDR.N    R0,??LPLD_PLL_Setup_2+0x18  ;; 0x40064005
   \   000000A4   0x2146             MOVS     R1,#+70
   \   000000A6   0x7001             STRB     R1,[R0, #+0]
     92                pll_freq = 60;
   \   000000A8   0x213C             MOVS     R1,#+60
     93                break;
   \   000000AA   0xE099             B.N      ??LPLD_PLL_Setup_19
   \                     ??LPLD_PLL_Setup_0:
   \   000000AC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AE   0x28C9             CMP      R0,#+201
   \   000000B0   0xD201             BCS.N    ??LPLD_PLL_Setup_20
   \   000000B2   0x220C             MOVS     R2,#+12
   \   000000B4   0xE7A9             B.N      ??LPLD_PLL_Setup_1
   \                     ??LPLD_PLL_Setup_20:
   \   000000B6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B8   0x28DD             CMP      R0,#+221
   \   000000BA   0xD201             BCS.N    ??LPLD_PLL_Setup_21
   \   000000BC   0x220B             MOVS     R2,#+11
   \   000000BE   0xE7A4             B.N      ??LPLD_PLL_Setup_1
   \                     ??LPLD_PLL_Setup_21:
   \   000000C0   0x2000             MOVS     R0,#+0
   \   000000C2   0xE0A4             B.N      ??LPLD_PLL_Setup_22
     94              case 70:
     95                LPLD_Set_SYS_DIV(0,1,1,2);  //core=70M, bus=35M, FlexBus=35M, Flash Clk=23.3M
   \                     ??LPLD_PLL_Setup_6:
   \   000000C4   0x2302             MOVS     R3,#+2
   \   000000C6   0x2201             MOVS     R2,#+1
   \   000000C8   0x2101             MOVS     R1,#+1
   \   000000CA   0x2000             MOVS     R0,#+0
   \   000000CC   0x.... 0x....      BL       LPLD_Set_SYS_DIV
     96                MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(11); //VDIV = 11 (2x35) 70MHz
   \   000000D0   0x4855             LDR.N    R0,??LPLD_PLL_Setup_2+0x18  ;; 0x40064005
   \   000000D2   0x214B             MOVS     R1,#+75
   \   000000D4   0x7001             STRB     R1,[R0, #+0]
     97                pll_freq = 70;
   \   000000D6   0x2146             MOVS     R1,#+70
     98                break;
   \   000000D8   0xE082             B.N      ??LPLD_PLL_Setup_19
     99              case 80:
    100                LPLD_Set_SYS_DIV(0,1,1,3);  //core=80M, bus=40M, FlexBus=40M, Flash Clk=20M
   \                     ??LPLD_PLL_Setup_7:
   \   000000DA   0x2303             MOVS     R3,#+3
   \   000000DC   0x2201             MOVS     R2,#+1
   \   000000DE   0x2101             MOVS     R1,#+1
   \   000000E0   0x2000             MOVS     R0,#+0
   \   000000E2   0x.... 0x....      BL       LPLD_Set_SYS_DIV
    101                MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(16); //VDIV = 16 (2x40) 80MHz
   \   000000E6   0x4850             LDR.N    R0,??LPLD_PLL_Setup_2+0x18  ;; 0x40064005
   \   000000E8   0x2150             MOVS     R1,#+80
   \   000000EA   0x7001             STRB     R1,[R0, #+0]
    102                pll_freq = 80;
   \   000000EC   0x2150             MOVS     R1,#+80
    103                break;
   \   000000EE   0xE077             B.N      ??LPLD_PLL_Setup_19
    104              case 90:
    105                LPLD_Set_SYS_DIV(0,1,1,3);  //core=90M, bus=45M, FlexBus=45M, Flash Clk=22.5M
   \                     ??LPLD_PLL_Setup_8:
   \   000000F0   0x2303             MOVS     R3,#+3
   \   000000F2   0x2201             MOVS     R2,#+1
   \   000000F4   0x2101             MOVS     R1,#+1
   \   000000F6   0x2000             MOVS     R0,#+0
   \   000000F8   0x.... 0x....      BL       LPLD_Set_SYS_DIV
    106                MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(21); //VDIV = 21 (2x45) 90MHz
   \   000000FC   0x484A             LDR.N    R0,??LPLD_PLL_Setup_2+0x18  ;; 0x40064005
   \   000000FE   0x2155             MOVS     R1,#+85
   \   00000100   0x7001             STRB     R1,[R0, #+0]
    107                pll_freq = 90;
   \   00000102   0x215A             MOVS     R1,#+90
    108                break;
   \   00000104   0xE06C             B.N      ??LPLD_PLL_Setup_19
    109              case 96:
    110                LPLD_Set_SYS_DIV(0,1,1,3);  //core=96M, bus=48M, FlexBus=48M, Flash Clk=22.5M
   \                     ??LPLD_PLL_Setup_9:
   \   00000106   0x2303             MOVS     R3,#+3
   \   00000108   0x2201             MOVS     R2,#+1
   \   0000010A   0x2101             MOVS     R1,#+1
   \   0000010C   0x2000             MOVS     R0,#+0
   \   0000010E   0x.... 0x....      BL       LPLD_Set_SYS_DIV
    111                MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(24); //VDIV = 24 (2x48) 96MHz
   \   00000112   0x4845             LDR.N    R0,??LPLD_PLL_Setup_2+0x18  ;; 0x40064005
   \   00000114   0x2158             MOVS     R1,#+88
   \   00000116   0x7001             STRB     R1,[R0, #+0]
    112                pll_freq = 96;
   \   00000118   0x2160             MOVS     R1,#+96
    113                break;
   \   0000011A   0xE061             B.N      ??LPLD_PLL_Setup_19
    114              case 100:
    115                LPLD_Set_SYS_DIV(0,1,1,3);  //core=100M, bus=50M, FlexBus=50M, Flash Clk=25M
   \                     ??LPLD_PLL_Setup_10:
   \   0000011C   0x2303             MOVS     R3,#+3
   \   0000011E   0x2201             MOVS     R2,#+1
   \   00000120   0x2101             MOVS     R1,#+1
   \   00000122   0x2000             MOVS     R0,#+0
   \   00000124   0x.... 0x....      BL       LPLD_Set_SYS_DIV
    116                MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(26); //VDIV = 26 (2x50) 100MHz
   \   00000128   0x483F             LDR.N    R0,??LPLD_PLL_Setup_2+0x18  ;; 0x40064005
   \   0000012A   0x215A             MOVS     R1,#+90
   \   0000012C   0x7001             STRB     R1,[R0, #+0]
    117                pll_freq = 100;
   \   0000012E   0x2164             MOVS     R1,#+100
    118                break;
   \   00000130   0xE056             B.N      ??LPLD_PLL_Setup_19
    119              case 110:
    120                LPLD_Set_SYS_DIV(0,2,2,4);  //core=110M, bus=36.7M, FlexBus=36.7M, Flash Clk=22M
   \                     ??LPLD_PLL_Setup_11:
   \   00000132   0x2304             MOVS     R3,#+4
   \   00000134   0x2202             MOVS     R2,#+2
   \   00000136   0x2102             MOVS     R1,#+2
   \   00000138   0x2000             MOVS     R0,#+0
   \   0000013A   0x.... 0x....      BL       LPLD_Set_SYS_DIV
    121                MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(31); //VDIV = 31 (2x55) 110MHz
   \   0000013E   0x483A             LDR.N    R0,??LPLD_PLL_Setup_2+0x18  ;; 0x40064005
   \   00000140   0x215F             MOVS     R1,#+95
   \   00000142   0x7001             STRB     R1,[R0, #+0]
    122                pll_freq = 110;
   \   00000144   0x216E             MOVS     R1,#+110
    123                break;
   \   00000146   0xE04B             B.N      ??LPLD_PLL_Setup_19
    124              case 120:
    125                LPLD_Set_SYS_DIV(0,2,2,4);  //core=120M, bus=40M, FlexBus=40M, Flash Clk=24M
   \                     ??LPLD_PLL_Setup_12:
   \   00000148   0x2304             MOVS     R3,#+4
   \   0000014A   0x2202             MOVS     R2,#+2
   \   0000014C   0x2102             MOVS     R1,#+2
   \   0000014E   0x2000             MOVS     R0,#+0
   \   00000150   0x.... 0x....      BL       LPLD_Set_SYS_DIV
    126                MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(7); //VDIV = 7 (3.846x31) 119.2MHz
   \   00000154   0x4834             LDR.N    R0,??LPLD_PLL_Setup_2+0x18  ;; 0x40064005
   \   00000156   0x2147             MOVS     R1,#+71
   \   00000158   0x7001             STRB     R1,[R0, #+0]
    127                pll_freq = 120;
   \   0000015A   0x2178             MOVS     R1,#+120
    128                break;
   \   0000015C   0xE040             B.N      ??LPLD_PLL_Setup_19
    129              case 130:
    130                LPLD_Set_SYS_DIV(0,2,2,5);  //core=130M, bus=43M, FlexBus=43M, Flash Clk=21.6M
   \                     ??LPLD_PLL_Setup_13:
   \   0000015E   0x2305             MOVS     R3,#+5
   \   00000160   0x2202             MOVS     R2,#+2
   \   00000162   0x2102             MOVS     R1,#+2
   \   00000164   0x2000             MOVS     R0,#+0
   \   00000166   0x.... 0x....      BL       LPLD_Set_SYS_DIV
    131                MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(10); //VDIV = 10 (3.846x34) 130.8MHz
   \   0000016A   0x482F             LDR.N    R0,??LPLD_PLL_Setup_2+0x18  ;; 0x40064005
   \   0000016C   0x214A             MOVS     R1,#+74
   \   0000016E   0x7001             STRB     R1,[R0, #+0]
    132                pll_freq = 130;
   \   00000170   0x2182             MOVS     R1,#+130
    133                break;
   \   00000172   0xE035             B.N      ??LPLD_PLL_Setup_19
    134              case 150:
    135                LPLD_Set_SYS_DIV(0,2,2,5);  //core=150M, bus=50M, FlexBus=50M, Flash Clk=25M
   \                     ??LPLD_PLL_Setup_14:
   \   00000174   0x2305             MOVS     R3,#+5
   \   00000176   0x2202             MOVS     R2,#+2
   \   00000178   0x2102             MOVS     R1,#+2
   \   0000017A   0x2000             MOVS     R0,#+0
   \   0000017C   0x.... 0x....      BL       LPLD_Set_SYS_DIV
    136                MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(15); //VDIV = 15 (3.846x39) 150MHz
   \   00000180   0x4829             LDR.N    R0,??LPLD_PLL_Setup_2+0x18  ;; 0x40064005
   \   00000182   0x214F             MOVS     R1,#+79
   \   00000184   0x7001             STRB     R1,[R0, #+0]
    137                pll_freq = 150;
   \   00000186   0x2196             MOVS     R1,#+150
    138                break;
   \   00000188   0xE02A             B.N      ??LPLD_PLL_Setup_19
    139              case 170:
    140                LPLD_Set_SYS_DIV(0,3,3,6);  //core=170M, bus=42.5M, FlexBus=42.5M, Flash Clk=24.3M
   \                     ??LPLD_PLL_Setup_15:
   \   0000018A   0x2306             MOVS     R3,#+6
   \   0000018C   0x2203             MOVS     R2,#+3
   \   0000018E   0x2103             MOVS     R1,#+3
   \   00000190   0x2000             MOVS     R0,#+0
   \   00000192   0x.... 0x....      BL       LPLD_Set_SYS_DIV
    141                MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(20); //VDIV = 20 (3.846x44) 169.2MHz
   \   00000196   0x4824             LDR.N    R0,??LPLD_PLL_Setup_2+0x18  ;; 0x40064005
   \   00000198   0x2154             MOVS     R1,#+84
   \   0000019A   0x7001             STRB     R1,[R0, #+0]
    142                pll_freq = 170;
   \   0000019C   0x21AA             MOVS     R1,#+170
    143                break;
   \   0000019E   0xE01F             B.N      ??LPLD_PLL_Setup_19
    144              case 180:
    145                LPLD_Set_SYS_DIV(0,3,3,7);  //core=180M, bus=45M, FlexBus=45M, Flash Clk=22.5M
   \                     ??LPLD_PLL_Setup_16:
   \   000001A0   0x2307             MOVS     R3,#+7
   \   000001A2   0x2203             MOVS     R2,#+3
   \   000001A4   0x2103             MOVS     R1,#+3
   \   000001A6   0x2000             MOVS     R0,#+0
   \   000001A8   0x.... 0x....      BL       LPLD_Set_SYS_DIV
    146                MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(23); //VDIV = 23 (3.846x47) 180.8MHz
   \   000001AC   0x481E             LDR.N    R0,??LPLD_PLL_Setup_2+0x18  ;; 0x40064005
   \   000001AE   0x2157             MOVS     R1,#+87
   \   000001B0   0x7001             STRB     R1,[R0, #+0]
    147                pll_freq = 180;
   \   000001B2   0x21B4             MOVS     R1,#+180
    148                break;
   \   000001B4   0xE014             B.N      ??LPLD_PLL_Setup_19
    149              case 200:
    150                LPLD_Set_SYS_DIV(0,3,3,7);  //core=200M, bus=50M, FlexBus=50M, Flash Clk=25M
   \                     ??LPLD_PLL_Setup_17:
   \   000001B6   0x2307             MOVS     R3,#+7
   \   000001B8   0x2203             MOVS     R2,#+3
   \   000001BA   0x2103             MOVS     R1,#+3
   \   000001BC   0x2000             MOVS     R0,#+0
   \   000001BE   0x.... 0x....      BL       LPLD_Set_SYS_DIV
    151                MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(28); //VDIV = 28 (3.846x52) 200MHz
   \   000001C2   0x4819             LDR.N    R0,??LPLD_PLL_Setup_2+0x18  ;; 0x40064005
   \   000001C4   0x215C             MOVS     R1,#+92
   \   000001C6   0x7001             STRB     R1,[R0, #+0]
    152                pll_freq = 200;
   \   000001C8   0x21C8             MOVS     R1,#+200
    153                break;
   \   000001CA   0xE009             B.N      ??LPLD_PLL_Setup_19
    154              case 209:
    155                LPLD_Set_SYS_DIV(0,4,4,8);  //core=209M, bus=42M, FlexBus=42M, Flash Clk=23.2M
   \                     ??LPLD_PLL_Setup_18:
   \   000001CC   0x2308             MOVS     R3,#+8
   \   000001CE   0x2204             MOVS     R2,#+4
   \   000001D0   0x2104             MOVS     R1,#+4
   \   000001D2   0x2000             MOVS     R0,#+0
   \   000001D4   0x.... 0x....      BL       LPLD_Set_SYS_DIV
    156                MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(26); //VDIV = 26 (4.17x50) 208.5MHz
   \   000001D8   0x4813             LDR.N    R0,??LPLD_PLL_Setup_2+0x18  ;; 0x40064005
   \   000001DA   0x215A             MOVS     R1,#+90
   \   000001DC   0x7001             STRB     R1,[R0, #+0]
    157                pll_freq = 209;
   \   000001DE   0x21D1             MOVS     R1,#+209
    158              break;
    159            }
    160            
    161            while (!(MCG_S & MCG_S_PLLST_MASK)){}; // wait for PLL status bit to set
   \                     ??LPLD_PLL_Setup_19:
   \   000001E0   0x480F             LDR.N    R0,??LPLD_PLL_Setup_2+0x10  ;; 0x40064006
   \   000001E2   0x7800             LDRB     R0,[R0, #+0]
   \   000001E4   0x0680             LSLS     R0,R0,#+26
   \   000001E6   0xD5FB             BPL.N    ??LPLD_PLL_Setup_19
    162            
    163            while (!(MCG_S & MCG_S_LOCK_MASK)){}; // Wait for LOCK bit to set
   \                     ??LPLD_PLL_Setup_23:
   \   000001E8   0x480D             LDR.N    R0,??LPLD_PLL_Setup_2+0x10  ;; 0x40064006
   \   000001EA   0x7800             LDRB     R0,[R0, #+0]
   \   000001EC   0x0640             LSLS     R0,R0,#+25
   \   000001EE   0xD5FB             BPL.N    ??LPLD_PLL_Setup_23
    164            
    165            // 已经进入PBE模式
    166            
    167            // Transition into PEE by setting CLKS to 0
    168            // CLKS=0, FRDIV=3, IREFS=0, IRCLKEN=0, IREFSTEN=0
    169            MCG_C1 &= ~MCG_C1_CLKS_MASK;
   \   000001F0   0x480A             LDR.N    R0,??LPLD_PLL_Setup_2+0xC  ;; 0x40064000
   \   000001F2   0x7800             LDRB     R0,[R0, #+0]
   \   000001F4   0xF010 0x003F      ANDS     R0,R0,#0x3F
   \   000001F8   0x4A08             LDR.N    R2,??LPLD_PLL_Setup_2+0xC  ;; 0x40064000
   \   000001FA   0x7010             STRB     R0,[R2, #+0]
    170            
    171            // Wait for clock status bits to update
    172            while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x3){};
   \                     ??LPLD_PLL_Setup_24:
   \   000001FC   0x4808             LDR.N    R0,??LPLD_PLL_Setup_2+0x10  ;; 0x40064006
   \   000001FE   0x7800             LDRB     R0,[R0, #+0]
   \   00000200   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000204   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000206   0x2803             CMP      R0,#+3
   \   00000208   0xD1F8             BNE.N    ??LPLD_PLL_Setup_24
    173            
    174            // 已经进入PEE模式
    175            
    176            return pll_freq;
   \   0000020A   0x0008             MOVS     R0,R1
   \   0000020C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \                     ??LPLD_PLL_Setup_22:
   \   0000020E   0xBD10             POP      {R4,PC}          ;; return
   \                     ??LPLD_PLL_Setup_2:
   \   00000210   0x40064001         DC32     0x40064001
   \   00000214   0x40048034         DC32     0x40048034
   \   00000218   0x4007C008         DC32     0x4007c008
   \   0000021C   0x40064000         DC32     0x40064000
   \   00000220   0x40064006         DC32     0x40064006
   \   00000224   0x40064004         DC32     0x40064004
   \   00000228   0x40064005         DC32     0x40064005
    177          } 
    178          
    179          
    180          /*
    181           * LPLD_Set_SYS_DIV
    182           * 设置系统始终分频(FSCL官方代码)
    183           *
    184           * 说明:
    185           * 这段代码必须放置在RAM中. It is a workaround for errata e2448.
    186           * 当Flash时钟分频改变的时候，Flash预读取必须禁用.
    187           * 当正在从Flash执行的时候这里不能执行.
    188           * 在预读取被重新使能之前必须在时钟分频改变后有一段小的延时.
    189           *
    190           * 参数:
    191           *    outdiv1~outdiv4--分别为core, bus, FlexBus, Flash时钟分频系数
    192           */
    193          #if (defined(IAR))

   \                                 In section .textrw, align 4, keep-with-next
    194          	__ramfunc void LPLD_Set_SYS_DIV(uint32 outdiv1, uint32 outdiv2, uint32 outdiv3, uint32 outdiv4)
    195          #elif (defined(CW))
    196          __relocate_code__ 
    197          void LPLD_Set_SYS_DIV(uint32 outdiv1, uint32 outdiv2, uint32 outdiv3, uint32 outdiv4)
    198          #endif
    199          {
   \                     LPLD_Set_SYS_DIV:
   \   00000000   0xB470             PUSH     {R4-R6}
    200            uint32 temp_reg;
    201            uint8 i;
    202            
    203            temp_reg = FMC_PFAPR; // 备份 FMC_PFAPR 寄存器
   \   00000002   0x4C10             LDR.N    R4,??LPLD_Set_SYS_DIV_0  ;; 0x4001f000
   \   00000004   0x6824             LDR      R4,[R4, #+0]
    204            
    205            // 设置 M0PFD 到 M7PFD 为 1 禁用预先读取
    206            FMC_PFAPR |= FMC_PFAPR_M7PFD_MASK | FMC_PFAPR_M6PFD_MASK | FMC_PFAPR_M5PFD_MASK
    207                       | FMC_PFAPR_M4PFD_MASK | FMC_PFAPR_M3PFD_MASK | FMC_PFAPR_M2PFD_MASK
    208                       | FMC_PFAPR_M1PFD_MASK | FMC_PFAPR_M0PFD_MASK;
   \   00000006   0x4D0F             LDR.N    R5,??LPLD_Set_SYS_DIV_0  ;; 0x4001f000
   \   00000008   0x682D             LDR      R5,[R5, #+0]
   \   0000000A   0xF455 0x057F      ORRS     R5,R5,#0xFF0000
   \   0000000E   0x4E0D             LDR.N    R6,??LPLD_Set_SYS_DIV_0  ;; 0x4001f000
   \   00000010   0x6035             STR      R5,[R6, #+0]
    209            
    210            // 设置时钟分频为期望值  
    211            SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(outdiv1) | SIM_CLKDIV1_OUTDIV2(outdiv2) 
    212                        | SIM_CLKDIV1_OUTDIV3(outdiv3) | SIM_CLKDIV1_OUTDIV4(outdiv4);
   \   00000012   0x0609             LSLS     R1,R1,#+24
   \   00000014   0xF011 0x6170      ANDS     R1,R1,#0xF000000
   \   00000018   0xEA51 0x7000      ORRS     R0,R1,R0, LSL #+28
   \   0000001C   0x0511             LSLS     R1,R2,#+20
   \   0000001E   0xF411 0x0170      ANDS     R1,R1,#0xF00000
   \   00000022   0x4308             ORRS     R0,R1,R0
   \   00000024   0x0419             LSLS     R1,R3,#+16
   \   00000026   0xF411 0x2170      ANDS     R1,R1,#0xF0000
   \   0000002A   0x4308             ORRS     R0,R1,R0
   \   0000002C   0x4906             LDR.N    R1,??LPLD_Set_SYS_DIV_0+0x4  ;; 0x40048044
   \   0000002E   0x6008             STR      R0,[R1, #+0]
    213          
    214            // 延时一小段时间等待改变
    215            for (i = 0 ; i < outdiv4 ; i++)
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0xE000             B.N      ??LPLD_Set_SYS_DIV_1
   \                     ??LPLD_Set_SYS_DIV_2:
   \   00000034   0x1C40             ADDS     R0,R0,#+1
   \                     ??LPLD_Set_SYS_DIV_1:
   \   00000036   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000038   0x4298             CMP      R0,R3
   \   0000003A   0xD3FB             BCC.N    ??LPLD_Set_SYS_DIV_2
    216            {}
    217            
    218            FMC_PFAPR = temp_reg; // 回复原先的 FMC_PFAPR 寄存器值
   \   0000003C   0x4801             LDR.N    R0,??LPLD_Set_SYS_DIV_0  ;; 0x4001f000
   \   0000003E   0x6004             STR      R4,[R0, #+0]
    219            
    220            return;
   \   00000040   0xBC70             POP      {R4-R6}
   \   00000042   0x4770             BX       LR               ;; return
   \                     ??LPLD_Set_SYS_DIV_0:
   \   00000044   0x4001F000         DC32     0x4001f000
   \   00000048   0x40048044         DC32     0x40048044
    221          } // set_sys_dividers

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  LPLD_PLL_Setup
             8 -> LPLD_Set_SYS_DIV
       12  LPLD_Set_SYS_DIV


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     556  LPLD_PLL_Setup
      76  LPLD_Set_SYS_DIV

 
 556 bytes in section .text
  76 bytes in section .textrw
 
 632 bytes of CODE memory

Errors: none
Warnings: none
